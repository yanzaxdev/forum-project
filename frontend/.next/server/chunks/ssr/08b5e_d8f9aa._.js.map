{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/node_modules/%40neondatabase/serverless/index.mjs"],"sourcesContent":["var to=Object.create;var Ce=Object.defineProperty;var ro=Object.getOwnPropertyDescriptor;var no=Object.getOwnPropertyNames;var io=Object.getPrototypeOf,so=Object.prototype.hasOwnProperty;var oo=(r,e,t)=>e in r?Ce(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):\nr[e]=t;var a=(r,e)=>Ce(r,\"name\",{value:e,configurable:!0});var z=(r,e)=>()=>(r&&(e=r(r=0)),e);var I=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),ie=(r,e)=>{for(var t in e)\nCe(r,t,{get:e[t],enumerable:!0})},An=(r,e,t,n)=>{if(e&&typeof e==\"object\"||typeof e==\n\"function\")for(let i of no(e))!so.call(r,i)&&i!==t&&Ce(r,i,{get:()=>e[i],enumerable:!(n=\nro(e,i))||n.enumerable});return r};var Te=(r,e,t)=>(t=r!=null?to(io(r)):{},An(e||!r||!r.__esModule?Ce(t,\"default\",{\nvalue:r,enumerable:!0}):t,r)),N=r=>An(Ce({},\"__esModule\",{value:!0}),r);var _=(r,e,t)=>oo(r,typeof e!=\"symbol\"?e+\"\":e,t);var In=I(nt=>{\"use strict\";p();nt.byteLength=uo;nt.toByteArray=ho;nt.fromByteArray=\npo;var ae=[],te=[],ao=typeof Uint8Array<\"u\"?Uint8Array:Array,Pt=\"ABCDEFGHIJKLMNO\\\nPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(ve=0,Cn=Pt.length;ve<Cn;++ve)\nae[ve]=Pt[ve],te[Pt.charCodeAt(ve)]=ve;var ve,Cn;te[45]=62;te[95]=63;function Tn(r){\nvar e=r.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multip\\\nle of 4\");var t=r.indexOf(\"=\");t===-1&&(t=e);var n=t===e?0:4-t%4;return[t,n]}a(Tn,\n\"getLens\");function uo(r){var e=Tn(r),t=e[0],n=e[1];return(t+n)*3/4-n}a(uo,\"byte\\\nLength\");function co(r,e,t){return(e+t)*3/4-t}a(co,\"_byteLength\");function ho(r){\nvar e,t=Tn(r),n=t[0],i=t[1],s=new ao(co(r,n,i)),o=0,u=i>0?n-4:n,c;for(c=0;c<u;c+=\n4)e=te[r.charCodeAt(c)]<<18|te[r.charCodeAt(c+1)]<<12|te[r.charCodeAt(c+2)]<<6|te[r.\ncharCodeAt(c+3)],s[o++]=e>>16&255,s[o++]=e>>8&255,s[o++]=e&255;return i===2&&(e=\nte[r.charCodeAt(c)]<<2|te[r.charCodeAt(c+1)]>>4,s[o++]=e&255),i===1&&(e=te[r.charCodeAt(\nc)]<<10|te[r.charCodeAt(c+1)]<<4|te[r.charCodeAt(c+2)]>>2,s[o++]=e>>8&255,s[o++]=\ne&255),s}a(ho,\"toByteArray\");function lo(r){return ae[r>>18&63]+ae[r>>12&63]+ae[r>>\n6&63]+ae[r&63]}a(lo,\"tripletToBase64\");function fo(r,e,t){for(var n,i=[],s=e;s<t;s+=\n3)n=(r[s]<<16&16711680)+(r[s+1]<<8&65280)+(r[s+2]&255),i.push(lo(n));return i.join(\n\"\")}a(fo,\"encodeChunk\");function po(r){for(var e,t=r.length,n=t%3,i=[],s=16383,o=0,\nu=t-n;o<u;o+=s)i.push(fo(r,o,o+s>u?u:o+s));return n===1?(e=r[t-1],i.push(ae[e>>2]+\nae[e<<4&63]+\"==\")):n===2&&(e=(r[t-2]<<8)+r[t-1],i.push(ae[e>>10]+ae[e>>4&63]+ae[e<<\n2&63]+\"=\")),i.join(\"\")}a(po,\"fromByteArray\")});var Pn=I(Bt=>{p();Bt.read=function(r,e,t,n,i){var s,o,u=i*8-n-1,c=(1<<u)-1,h=c>>\n1,l=-7,d=t?i-1:0,b=t?-1:1,C=r[e+d];for(d+=b,s=C&(1<<-l)-1,C>>=-l,l+=u;l>0;s=s*256+\nr[e+d],d+=b,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=n;l>0;o=o*256+r[e+d],d+=b,l-=8);if(s===\n0)s=1-h;else{if(s===c)return o?NaN:(C?-1:1)*(1/0);o=o+Math.pow(2,n),s=s-h}return(C?\n-1:1)*o*Math.pow(2,s-n)};Bt.write=function(r,e,t,n,i,s){var o,u,c,h=s*8-i-1,l=(1<<\nh)-1,d=l>>1,b=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,C=n?0:s-1,B=n?1:-1,W=e<0||\ne===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(u=isNaN(e)?1:0,o=l):(o=Math.\nfloor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-o))<1&&(o--,c*=2),o+d>=1?e+=b/c:e+=\nb*Math.pow(2,1-d),e*c>=2&&(o++,c/=2),o+d>=l?(u=0,o=l):o+d>=1?(u=(e*c-1)*Math.pow(\n2,i),o=o+d):(u=e*Math.pow(2,d-1)*Math.pow(2,i),o=0));i>=8;r[t+C]=u&255,C+=B,u/=256,\ni-=8);for(o=o<<i|u,h+=i;h>0;r[t+C]=o&255,C+=B,o/=256,h-=8);r[t+C-B]|=W*128}});var $n=I(Le=>{\"use strict\";p();var Lt=In(),Pe=Pn(),Bn=typeof Symbol==\"function\"&&\ntypeof Symbol.for==\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;Le.Buffer=\nf;Le.SlowBuffer=So;Le.INSPECT_MAX_BYTES=50;var it=2147483647;Le.kMaxLength=it;f.\nTYPED_ARRAY_SUPPORT=yo();!f.TYPED_ARRAY_SUPPORT&&typeof console<\"u\"&&typeof console.\nerror==\"function\"&&console.error(\"This browser lacks typed array (Uint8Array) su\\\npport which is required by `buffer` v5.x. Use `buffer` v4.x if you require old b\\\nrowser support.\");function yo(){try{let r=new Uint8Array(1),e={foo:a(function(){\nreturn 42},\"foo\")};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(\nr,e),r.foo()===42}catch{return!1}}a(yo,\"typedArraySupport\");Object.defineProperty(\nf.prototype,\"parent\",{enumerable:!0,get:a(function(){if(f.isBuffer(this))return this.\nbuffer},\"get\")});Object.defineProperty(f.prototype,\"offset\",{enumerable:!0,get:a(\nfunction(){if(f.isBuffer(this))return this.byteOffset},\"get\")});function fe(r){if(r>\nit)throw new RangeError('The value \"'+r+'\" is invalid for option \"size\"');let e=new Uint8Array(\nr);return Object.setPrototypeOf(e,f.prototype),e}a(fe,\"createBuffer\");function f(r,e,t){\nif(typeof r==\"number\"){if(typeof e==\"string\")throw new TypeError('The \"string\" a\\\nrgument must be of type string. Received type number');return Dt(r)}return Mn(r,\ne,t)}a(f,\"Buffer\");f.poolSize=8192;function Mn(r,e,t){if(typeof r==\"string\")return go(\nr,e);if(ArrayBuffer.isView(r))return wo(r);if(r==null)throw new TypeError(\"The f\\\nirst argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-l\\\nike Object. Received type \"+typeof r);if(ue(r,ArrayBuffer)||r&&ue(r.buffer,ArrayBuffer)||\ntypeof SharedArrayBuffer<\"u\"&&(ue(r,SharedArrayBuffer)||r&&ue(r.buffer,SharedArrayBuffer)))\nreturn Ft(r,e,t);if(typeof r==\"number\")throw new TypeError('The \"value\" argument\\\n must not be of type number. Received type number');let n=r.valueOf&&r.valueOf();\nif(n!=null&&n!==r)return f.from(n,e,t);let i=bo(r);if(i)return i;if(typeof Symbol<\n\"u\"&&Symbol.toPrimitive!=null&&typeof r[Symbol.toPrimitive]==\"function\")return f.\nfrom(r[Symbol.toPrimitive](\"string\"),e,t);throw new TypeError(\"The first argumen\\\nt must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. \\\nReceived type \"+typeof r)}a(Mn,\"from\");f.from=function(r,e,t){return Mn(r,e,t)};\nObject.setPrototypeOf(f.prototype,Uint8Array.prototype);Object.setPrototypeOf(f,\nUint8Array);function Dn(r){if(typeof r!=\"number\")throw new TypeError('\"size\" arg\\\nument must be of type number');if(r<0)throw new RangeError('The value \"'+r+'\" is\\\n invalid for option \"size\"')}a(Dn,\"assertSize\");function mo(r,e,t){return Dn(r),\nr<=0?fe(r):e!==void 0?typeof t==\"string\"?fe(r).fill(e,t):fe(r).fill(e):fe(r)}a(mo,\n\"alloc\");f.alloc=function(r,e,t){return mo(r,e,t)};function Dt(r){return Dn(r),fe(\nr<0?0:kt(r)|0)}a(Dt,\"allocUnsafe\");f.allocUnsafe=function(r){return Dt(r)};f.allocUnsafeSlow=\nfunction(r){return Dt(r)};function go(r,e){if((typeof e!=\"string\"||e===\"\")&&(e=\"\\\nutf8\"),!f.isEncoding(e))throw new TypeError(\"Unknown encoding: \"+e);let t=kn(r,e)|\n0,n=fe(t),i=n.write(r,e);return i!==t&&(n=n.slice(0,i)),n}a(go,\"fromString\");function Rt(r){\nlet e=r.length<0?0:kt(r.length)|0,t=fe(e);for(let n=0;n<e;n+=1)t[n]=r[n]&255;return t}\na(Rt,\"fromArrayLike\");function wo(r){if(ue(r,Uint8Array)){let e=new Uint8Array(r);\nreturn Ft(e.buffer,e.byteOffset,e.byteLength)}return Rt(r)}a(wo,\"fromArrayView\");\nfunction Ft(r,e,t){if(e<0||r.byteLength<e)throw new RangeError('\"offset\" is outs\\\nide of buffer bounds');if(r.byteLength<e+(t||0))throw new RangeError('\"length\" i\\\ns outside of buffer bounds');let n;return e===void 0&&t===void 0?n=new Uint8Array(\nr):t===void 0?n=new Uint8Array(r,e):n=new Uint8Array(r,e,t),Object.setPrototypeOf(\nn,f.prototype),n}a(Ft,\"fromArrayBuffer\");function bo(r){if(f.isBuffer(r)){let e=kt(\nr.length)|0,t=fe(e);return t.length===0||r.copy(t,0,0,e),t}if(r.length!==void 0)\nreturn typeof r.length!=\"number\"||Ot(r.length)?fe(0):Rt(r);if(r.type===\"Buffer\"&&\nArray.isArray(r.data))return Rt(r.data)}a(bo,\"fromObject\");function kt(r){if(r>=\nit)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+\nit.toString(16)+\" bytes\");return r|0}a(kt,\"checked\");function So(r){return+r!=r&&\n(r=0),f.alloc(+r)}a(So,\"SlowBuffer\");f.isBuffer=a(function(e){return e!=null&&e.\n_isBuffer===!0&&e!==f.prototype},\"isBuffer\");f.compare=a(function(e,t){if(ue(e,Uint8Array)&&\n(e=f.from(e,e.offset,e.byteLength)),ue(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),\n!f.isBuffer(e)||!f.isBuffer(t))throw new TypeError('The \"buf1\", \"buf2\" arguments\\\n must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,i=t.\nlength;for(let s=0,o=Math.min(n,i);s<o;++s)if(e[s]!==t[s]){n=e[s],i=t[s];break}return n<\ni?-1:i<n?1:0},\"compare\");f.isEncoding=a(function(e){switch(String(e).toLowerCase()){case\"\\\nhex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"\\\nucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},\"isEn\\\ncoding\");f.concat=a(function(e,t){if(!Array.isArray(e))throw new TypeError('\"lis\\\nt\" argument must be an Array of Buffers');if(e.length===0)return f.alloc(0);let n;\nif(t===void 0)for(t=0,n=0;n<e.length;++n)t+=e[n].length;let i=f.allocUnsafe(t),s=0;\nfor(n=0;n<e.length;++n){let o=e[n];if(ue(o,Uint8Array))s+o.length>i.length?(f.isBuffer(\no)||(o=f.from(o)),o.copy(i,s)):Uint8Array.prototype.set.call(i,o,s);else if(f.isBuffer(\no))o.copy(i,s);else throw new TypeError('\"list\" argument must be an Array of Buf\\\nfers');s+=o.length}return i},\"concat\");function kn(r,e){if(f.isBuffer(r))return r.\nlength;if(ArrayBuffer.isView(r)||ue(r,ArrayBuffer))return r.byteLength;if(typeof r!=\n\"string\")throw new TypeError('The \"string\" argument must be one of type string, \\\nBuffer, or ArrayBuffer. Received type '+typeof r);let t=r.length,n=arguments.length>\n2&&arguments[2]===!0;if(!n&&t===0)return 0;let i=!1;for(;;)switch(e){case\"ascii\":case\"\\\nlatin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return Mt(r).length;case\"uc\\\ns2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"\\\nbase64\":return Gn(r).length;default:if(i)return n?-1:Mt(r).length;e=(\"\"+e).toLowerCase(),\ni=!0}}a(kn,\"byteLength\");f.byteLength=kn;function xo(r,e,t){let n=!1;if((e===void 0||\ne<0)&&(e=0),e>this.length||((t===void 0||t>this.length)&&(t=this.length),t<=0)||\n(t>>>=0,e>>>=0,t<=e))return\"\";for(r||(r=\"utf8\");;)switch(r){case\"hex\":return Lo(\nthis,e,t);case\"utf8\":case\"utf-8\":return On(this,e,t);case\"ascii\":return Po(this,\ne,t);case\"latin1\":case\"binary\":return Bo(this,e,t);case\"base64\":return To(this,e,\nt);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return Ro(this,e,t);default:\nif(n)throw new TypeError(\"Unknown encoding: \"+r);r=(r+\"\").toLowerCase(),n=!0}}a(\nxo,\"slowToString\");f.prototype._isBuffer=!0;function Ee(r,e,t){let n=r[e];r[e]=r[t],\nr[t]=n}a(Ee,\"swap\");f.prototype.swap16=a(function(){let e=this.length;if(e%2!==0)\nthrow new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let t=0;t<\ne;t+=2)Ee(this,t,t+1);return this},\"swap16\");f.prototype.swap32=a(function(){let e=this.\nlength;if(e%4!==0)throw new RangeError(\"Buffer size must be a multiple of 32-bit\\\ns\");for(let t=0;t<e;t+=4)Ee(this,t,t+3),Ee(this,t+1,t+2);return this},\"swap32\");\nf.prototype.swap64=a(function(){let e=this.length;if(e%8!==0)throw new RangeError(\n\"Buffer size must be a multiple of 64-bits\");for(let t=0;t<e;t+=8)Ee(this,t,t+7),\nEe(this,t+1,t+6),Ee(this,t+2,t+5),Ee(this,t+3,t+4);return this},\"swap64\");f.prototype.\ntoString=a(function(){let e=this.length;return e===0?\"\":arguments.length===0?On(\nthis,0,e):xo.apply(this,arguments)},\"toString\");f.prototype.toLocaleString=f.prototype.\ntoString;f.prototype.equals=a(function(e){if(!f.isBuffer(e))throw new TypeError(\n\"Argument must be a Buffer\");return this===e?!0:f.compare(this,e)===0},\"equals\");\nf.prototype.inspect=a(function(){let e=\"\",t=Le.INSPECT_MAX_BYTES;return e=this.toString(\n\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim(),this.length>t&&(e+=\" ... \"),\"<Buffer \"+\ne+\">\"},\"inspect\");Bn&&(f.prototype[Bn]=f.prototype.inspect);f.prototype.compare=\na(function(e,t,n,i,s){if(ue(e,Uint8Array)&&(e=f.from(e,e.offset,e.byteLength)),!f.\nisBuffer(e))throw new TypeError('The \"target\" argument must be one of type Buffe\\\nr or Uint8Array. Received type '+typeof e);if(t===void 0&&(t=0),n===void 0&&(n=e?\ne.length:0),i===void 0&&(i=0),s===void 0&&(s=this.length),t<0||n>e.length||i<0||\ns>this.length)throw new RangeError(\"out of range index\");if(i>=s&&t>=n)return 0;\nif(i>=s)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,i>>>=0,s>>>=0,this===e)return 0;\nlet o=s-i,u=n-t,c=Math.min(o,u),h=this.slice(i,s),l=e.slice(t,n);for(let d=0;d<c;++d)\nif(h[d]!==l[d]){o=h[d],u=l[d];break}return o<u?-1:u<o?1:0},\"compare\");function Un(r,e,t,n,i){\nif(r.length===0)return-1;if(typeof t==\"string\"?(n=t,t=0):t>2147483647?t=2147483647:\nt<-2147483648&&(t=-2147483648),t=+t,Ot(t)&&(t=i?0:r.length-1),t<0&&(t=r.length+t),\nt>=r.length){if(i)return-1;t=r.length-1}else if(t<0)if(i)t=0;else return-1;if(typeof e==\n\"string\"&&(e=f.from(e,n)),f.isBuffer(e))return e.length===0?-1:Ln(r,e,t,n,i);if(typeof e==\n\"number\")return e=e&255,typeof Uint8Array.prototype.indexOf==\"function\"?i?Uint8Array.\nprototype.indexOf.call(r,e,t):Uint8Array.prototype.lastIndexOf.call(r,e,t):Ln(r,\n[e],t,n,i);throw new TypeError(\"val must be string, number or Buffer\")}a(Un,\"bid\\\nirectionalIndexOf\");function Ln(r,e,t,n,i){let s=1,o=r.length,u=e.length;if(n!==\nvoid 0&&(n=String(n).toLowerCase(),n===\"ucs2\"||n===\"ucs-2\"||n===\"utf16le\"||n===\"\\\nutf-16le\")){if(r.length<2||e.length<2)return-1;s=2,o/=2,u/=2,t/=2}function c(l,d){\nreturn s===1?l[d]:l.readUInt16BE(d*s)}a(c,\"read\");let h;if(i){let l=-1;for(h=t;h<\no;h++)if(c(r,h)===c(e,l===-1?0:h-l)){if(l===-1&&(l=h),h-l+1===u)return l*s}else l!==\n-1&&(h-=h-l),l=-1}else for(t+u>o&&(t=o-u),h=t;h>=0;h--){let l=!0;for(let d=0;d<u;d++)\nif(c(r,h+d)!==c(e,d)){l=!1;break}if(l)return h}return-1}a(Ln,\"arrayIndexOf\");f.prototype.\nincludes=a(function(e,t,n){return this.indexOf(e,t,n)!==-1},\"includes\");f.prototype.\nindexOf=a(function(e,t,n){return Un(this,e,t,n,!0)},\"indexOf\");f.prototype.lastIndexOf=\na(function(e,t,n){return Un(this,e,t,n,!1)},\"lastIndexOf\");function vo(r,e,t,n){\nt=Number(t)||0;let i=r.length-t;n?(n=Number(n),n>i&&(n=i)):n=i;let s=e.length;n>\ns/2&&(n=s/2);let o;for(o=0;o<n;++o){let u=parseInt(e.substr(o*2,2),16);if(Ot(u))\nreturn o;r[t+o]=u}return o}a(vo,\"hexWrite\");function Eo(r,e,t,n){return st(Mt(e,\nr.length-t),r,t,n)}a(Eo,\"utf8Write\");function _o(r,e,t,n){return st(ko(e),r,t,n)}\na(_o,\"asciiWrite\");function Ao(r,e,t,n){return st(Gn(e),r,t,n)}a(Ao,\"base64Write\");\nfunction Co(r,e,t,n){return st(Uo(e,r.length-t),r,t,n)}a(Co,\"ucs2Write\");f.prototype.\nwrite=a(function(e,t,n,i){if(t===void 0)i=\"utf8\",n=this.length,t=0;else if(n===void 0&&\ntypeof t==\"string\")i=t,n=this.length,t=0;else if(isFinite(t))t=t>>>0,isFinite(n)?\n(n=n>>>0,i===void 0&&(i=\"utf8\")):(i=n,n=void 0);else throw new Error(\"Buffer.wri\\\nte(string, encoding, offset[, length]) is no longer supported\");let s=this.length-\nt;if((n===void 0||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError(\n\"Attempt to write outside buffer bounds\");i||(i=\"utf8\");let o=!1;for(;;)switch(i){case\"\\\nhex\":return vo(this,e,t,n);case\"utf8\":case\"utf-8\":return Eo(this,e,t,n);case\"asc\\\nii\":case\"latin1\":case\"binary\":return _o(this,e,t,n);case\"base64\":return Ao(this,\ne,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return Co(this,e,t,n);default:\nif(o)throw new TypeError(\"Unknown encoding: \"+i);i=(\"\"+i).toLowerCase(),o=!0}},\"\\\nwrite\");f.prototype.toJSON=a(function(){return{type:\"Buffer\",data:Array.prototype.\nslice.call(this._arr||this,0)}},\"toJSON\");function To(r,e,t){return e===0&&t===r.\nlength?Lt.fromByteArray(r):Lt.fromByteArray(r.slice(e,t))}a(To,\"base64Slice\");function On(r,e,t){\nt=Math.min(r.length,t);let n=[],i=e;for(;i<t;){let s=r[i],o=null,u=s>239?4:s>223?\n3:s>191?2:1;if(i+u<=t){let c,h,l,d;switch(u){case 1:s<128&&(o=s);break;case 2:c=\nr[i+1],(c&192)===128&&(d=(s&31)<<6|c&63,d>127&&(o=d));break;case 3:c=r[i+1],h=r[i+\n2],(c&192)===128&&(h&192)===128&&(d=(s&15)<<12|(c&63)<<6|h&63,d>2047&&(d<55296||\nd>57343)&&(o=d));break;case 4:c=r[i+1],h=r[i+2],l=r[i+3],(c&192)===128&&(h&192)===\n128&&(l&192)===128&&(d=(s&15)<<18|(c&63)<<12|(h&63)<<6|l&63,d>65535&&d<1114112&&\n(o=d))}}o===null?(o=65533,u=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|\no&1023),n.push(o),i+=u}return Io(n)}a(On,\"utf8Slice\");var Rn=4096;function Io(r){\nlet e=r.length;if(e<=Rn)return String.fromCharCode.apply(String,r);let t=\"\",n=0;\nfor(;n<e;)t+=String.fromCharCode.apply(String,r.slice(n,n+=Rn));return t}a(Io,\"d\\\necodeCodePointsArray\");function Po(r,e,t){let n=\"\";t=Math.min(r.length,t);for(let i=e;i<\nt;++i)n+=String.fromCharCode(r[i]&127);return n}a(Po,\"asciiSlice\");function Bo(r,e,t){\nlet n=\"\";t=Math.min(r.length,t);for(let i=e;i<t;++i)n+=String.fromCharCode(r[i]);\nreturn n}a(Bo,\"latin1Slice\");function Lo(r,e,t){let n=r.length;(!e||e<0)&&(e=0),\n(!t||t<0||t>n)&&(t=n);let i=\"\";for(let s=e;s<t;++s)i+=Oo[r[s]];return i}a(Lo,\"he\\\nxSlice\");function Ro(r,e,t){let n=r.slice(e,t),i=\"\";for(let s=0;s<n.length-1;s+=\n2)i+=String.fromCharCode(n[s]+n[s+1]*256);return i}a(Ro,\"utf16leSlice\");f.prototype.\nslice=a(function(e,t){let n=this.length;e=~~e,t=t===void 0?n:~~t,e<0?(e+=n,e<0&&\n(e=0)):e>n&&(e=n),t<0?(t+=n,t<0&&(t=0)):t>n&&(t=n),t<e&&(t=e);let i=this.subarray(\ne,t);return Object.setPrototypeOf(i,f.prototype),i},\"slice\");function q(r,e,t){if(r%\n1!==0||r<0)throw new RangeError(\"offset is not uint\");if(r+e>t)throw new RangeError(\n\"Trying to access beyond buffer length\")}a(q,\"checkOffset\");f.prototype.readUintLE=\nf.prototype.readUIntLE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||q(e,t,this.length);let i=this[e],\ns=1,o=0;for(;++o<t&&(s*=256);)i+=this[e+o]*s;return i},\"readUIntLE\");f.prototype.\nreadUintBE=f.prototype.readUIntBE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||q(e,t,this.\nlength);let i=this[e+--t],s=1;for(;t>0&&(s*=256);)i+=this[e+--t]*s;return i},\"re\\\nadUIntBE\");f.prototype.readUint8=f.prototype.readUInt8=a(function(e,t){return e=\ne>>>0,t||q(e,1,this.length),this[e]},\"readUInt8\");f.prototype.readUint16LE=f.prototype.\nreadUInt16LE=a(function(e,t){return e=e>>>0,t||q(e,2,this.length),this[e]|this[e+\n1]<<8},\"readUInt16LE\");f.prototype.readUint16BE=f.prototype.readUInt16BE=a(function(e,t){\nreturn e=e>>>0,t||q(e,2,this.length),this[e]<<8|this[e+1]},\"readUInt16BE\");f.prototype.\nreadUint32LE=f.prototype.readUInt32LE=a(function(e,t){return e=e>>>0,t||q(e,4,this.\nlength),(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216},\"readUInt32LE\");\nf.prototype.readUint32BE=f.prototype.readUInt32BE=a(function(e,t){return e=e>>>0,\nt||q(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])},\"\\\nreadUInt32BE\");f.prototype.readBigUInt64LE=ge(a(function(e){e=e>>>0,Be(e,\"offset\");\nlet t=this[e],n=this[e+7];(t===void 0||n===void 0)&&We(e,this.length-8);let i=t+\nthis[++e]*2**8+this[++e]*2**16+this[++e]*2**24,s=this[++e]+this[++e]*2**8+this[++e]*\n2**16+n*2**24;return BigInt(i)+(BigInt(s)<<BigInt(32))},\"readBigUInt64LE\"));f.prototype.\nreadBigUInt64BE=ge(a(function(e){e=e>>>0,Be(e,\"offset\");let t=this[e],n=this[e+7];\n(t===void 0||n===void 0)&&We(e,this.length-8);let i=t*2**24+this[++e]*2**16+this[++e]*\n2**8+this[++e],s=this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n;return(BigInt(\ni)<<BigInt(32))+BigInt(s)},\"readBigUInt64BE\"));f.prototype.readIntLE=a(function(e,t,n){\ne=e>>>0,t=t>>>0,n||q(e,t,this.length);let i=this[e],s=1,o=0;for(;++o<t&&(s*=256);)\ni+=this[e+o]*s;return s*=128,i>=s&&(i-=Math.pow(2,8*t)),i},\"readIntLE\");f.prototype.\nreadIntBE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||q(e,t,this.length);let i=t,s=1,o=this[e+\n--i];for(;i>0&&(s*=256);)o+=this[e+--i]*s;return s*=128,o>=s&&(o-=Math.pow(2,8*t)),\no},\"readIntBE\");f.prototype.readInt8=a(function(e,t){return e=e>>>0,t||q(e,1,this.\nlength),this[e]&128?(255-this[e]+1)*-1:this[e]},\"readInt8\");f.prototype.readInt16LE=\na(function(e,t){e=e>>>0,t||q(e,2,this.length);let n=this[e]|this[e+1]<<8;return n&\n32768?n|4294901760:n},\"readInt16LE\");f.prototype.readInt16BE=a(function(e,t){e=e>>>\n0,t||q(e,2,this.length);let n=this[e+1]|this[e]<<8;return n&32768?n|4294901760:n},\n\"readInt16BE\");f.prototype.readInt32LE=a(function(e,t){return e=e>>>0,t||q(e,4,this.\nlength),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},\"readInt32LE\");f.prototype.\nreadInt32BE=a(function(e,t){return e=e>>>0,t||q(e,4,this.length),this[e]<<24|this[e+\n1]<<16|this[e+2]<<8|this[e+3]},\"readInt32BE\");f.prototype.readBigInt64LE=ge(a(function(e){\ne=e>>>0,Be(e,\"offset\");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&We(e,\nthis.length-8);let i=this[e+4]+this[e+5]*2**8+this[e+6]*2**16+(n<<24);return(BigInt(\ni)<<BigInt(32))+BigInt(t+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24)},\"readB\\\nigInt64LE\"));f.prototype.readBigInt64BE=ge(a(function(e){e=e>>>0,Be(e,\"offset\");\nlet t=this[e],n=this[e+7];(t===void 0||n===void 0)&&We(e,this.length-8);let i=(t<<\n24)+this[++e]*2**16+this[++e]*2**8+this[++e];return(BigInt(i)<<BigInt(32))+BigInt(\nthis[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n)},\"readBigInt64BE\"));f.prototype.\nreadFloatLE=a(function(e,t){return e=e>>>0,t||q(e,4,this.length),Pe.read(this,e,\n!0,23,4)},\"readFloatLE\");f.prototype.readFloatBE=a(function(e,t){return e=e>>>0,\nt||q(e,4,this.length),Pe.read(this,e,!1,23,4)},\"readFloatBE\");f.prototype.readDoubleLE=\na(function(e,t){return e=e>>>0,t||q(e,8,this.length),Pe.read(this,e,!0,52,8)},\"r\\\neadDoubleLE\");f.prototype.readDoubleBE=a(function(e,t){return e=e>>>0,t||q(e,8,this.\nlength),Pe.read(this,e,!1,52,8)},\"readDoubleBE\");function Y(r,e,t,n,i,s){if(!f.isBuffer(\nr))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<\ns)throw new RangeError('\"value\" argument is out of bounds');if(t+n>r.length)throw new RangeError(\n\"Index out of range\")}a(Y,\"checkInt\");f.prototype.writeUintLE=f.prototype.writeUIntLE=\na(function(e,t,n,i){if(e=+e,t=t>>>0,n=n>>>0,!i){let u=Math.pow(2,8*n)-1;Y(this,e,\nt,n,u,0)}let s=1,o=0;for(this[t]=e&255;++o<n&&(s*=256);)this[t+o]=e/s&255;return t+\nn},\"writeUIntLE\");f.prototype.writeUintBE=f.prototype.writeUIntBE=a(function(e,t,n,i){\nif(e=+e,t=t>>>0,n=n>>>0,!i){let u=Math.pow(2,8*n)-1;Y(this,e,t,n,u,0)}let s=n-1,\no=1;for(this[t+s]=e&255;--s>=0&&(o*=256);)this[t+s]=e/o&255;return t+n},\"writeUI\\\nntBE\");f.prototype.writeUint8=f.prototype.writeUInt8=a(function(e,t,n){return e=\n+e,t=t>>>0,n||Y(this,e,t,1,255,0),this[t]=e&255,t+1},\"writeUInt8\");f.prototype.writeUint16LE=\nf.prototype.writeUInt16LE=a(function(e,t,n){return e=+e,t=t>>>0,n||Y(this,e,t,2,\n65535,0),this[t]=e&255,this[t+1]=e>>>8,t+2},\"writeUInt16LE\");f.prototype.writeUint16BE=\nf.prototype.writeUInt16BE=a(function(e,t,n){return e=+e,t=t>>>0,n||Y(this,e,t,2,\n65535,0),this[t]=e>>>8,this[t+1]=e&255,t+2},\"writeUInt16BE\");f.prototype.writeUint32LE=\nf.prototype.writeUInt32LE=a(function(e,t,n){return e=+e,t=t>>>0,n||Y(this,e,t,4,\n4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=e&255,t+\n4},\"writeUInt32LE\");f.prototype.writeUint32BE=f.prototype.writeUInt32BE=a(function(e,t,n){\nreturn e=+e,t=t>>>0,n||Y(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,\nthis[t+2]=e>>>8,this[t+3]=e&255,t+4},\"writeUInt32BE\");function Nn(r,e,t,n,i){Hn(\ne,n,i,r,t,7);let s=Number(e&BigInt(4294967295));r[t++]=s,s=s>>8,r[t++]=s,s=s>>8,\nr[t++]=s,s=s>>8,r[t++]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return r[t++]=\no,o=o>>8,r[t++]=o,o=o>>8,r[t++]=o,o=o>>8,r[t++]=o,t}a(Nn,\"wrtBigUInt64LE\");function qn(r,e,t,n,i){\nHn(e,n,i,r,t,7);let s=Number(e&BigInt(4294967295));r[t+7]=s,s=s>>8,r[t+6]=s,s=s>>\n8,r[t+5]=s,s=s>>8,r[t+4]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return r[t+\n3]=o,o=o>>8,r[t+2]=o,o=o>>8,r[t+1]=o,o=o>>8,r[t]=o,t+8}a(qn,\"wrtBigUInt64BE\");f.\nprototype.writeBigUInt64LE=ge(a(function(e,t=0){return Nn(this,e,t,BigInt(0),BigInt(\n\"0xffffffffffffffff\"))},\"writeBigUInt64LE\"));f.prototype.writeBigUInt64BE=ge(a(function(e,t=0){\nreturn qn(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))},\"writeBigUInt64BE\"));\nf.prototype.writeIntLE=a(function(e,t,n,i){if(e=+e,t=t>>>0,!i){let c=Math.pow(2,\n8*n-1);Y(this,e,t,n,c-1,-c)}let s=0,o=1,u=0;for(this[t]=e&255;++s<n&&(o*=256);)e<\n0&&u===0&&this[t+s-1]!==0&&(u=1),this[t+s]=(e/o>>0)-u&255;return t+n},\"writeIntL\\\nE\");f.prototype.writeIntBE=a(function(e,t,n,i){if(e=+e,t=t>>>0,!i){let c=Math.pow(\n2,8*n-1);Y(this,e,t,n,c-1,-c)}let s=n-1,o=1,u=0;for(this[t+s]=e&255;--s>=0&&(o*=\n256);)e<0&&u===0&&this[t+s+1]!==0&&(u=1),this[t+s]=(e/o>>0)-u&255;return t+n},\"w\\\nriteIntBE\");f.prototype.writeInt8=a(function(e,t,n){return e=+e,t=t>>>0,n||Y(this,\ne,t,1,127,-128),e<0&&(e=255+e+1),this[t]=e&255,t+1},\"writeInt8\");f.prototype.writeInt16LE=\na(function(e,t,n){return e=+e,t=t>>>0,n||Y(this,e,t,2,32767,-32768),this[t]=e&255,\nthis[t+1]=e>>>8,t+2},\"writeInt16LE\");f.prototype.writeInt16BE=a(function(e,t,n){\nreturn e=+e,t=t>>>0,n||Y(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=e&255,\nt+2},\"writeInt16BE\");f.prototype.writeInt32LE=a(function(e,t,n){return e=+e,t=t>>>\n0,n||Y(this,e,t,4,2147483647,-2147483648),this[t]=e&255,this[t+1]=e>>>8,this[t+2]=\ne>>>16,this[t+3]=e>>>24,t+4},\"writeInt32LE\");f.prototype.writeInt32BE=a(function(e,t,n){\nreturn e=+e,t=t>>>0,n||Y(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+\n1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255,t+4},\"writeIn\\\nt32BE\");f.prototype.writeBigInt64LE=ge(a(function(e,t=0){return Nn(this,e,t,-BigInt(\n\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))},\"writeBigInt64LE\"));f.prototype.\nwriteBigInt64BE=ge(a(function(e,t=0){return qn(this,e,t,-BigInt(\"0x8000000000000\\\n000\"),BigInt(\"0x7fffffffffffffff\"))},\"writeBigInt64BE\"));function Qn(r,e,t,n,i,s){\nif(t+n>r.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\n\"Index out of range\")}a(Qn,\"checkIEEE754\");function Wn(r,e,t,n,i){return e=+e,t=\nt>>>0,i||Qn(r,e,t,4,34028234663852886e22,-34028234663852886e22),Pe.write(r,e,t,n,\n23,4),t+4}a(Wn,\"writeFloat\");f.prototype.writeFloatLE=a(function(e,t,n){return Wn(\nthis,e,t,!0,n)},\"writeFloatLE\");f.prototype.writeFloatBE=a(function(e,t,n){return Wn(\nthis,e,t,!1,n)},\"writeFloatBE\");function jn(r,e,t,n,i){return e=+e,t=t>>>0,i||Qn(\nr,e,t,8,17976931348623157e292,-17976931348623157e292),Pe.write(r,e,t,n,52,8),t+8}\na(jn,\"writeDouble\");f.prototype.writeDoubleLE=a(function(e,t,n){return jn(this,e,\nt,!0,n)},\"writeDoubleLE\");f.prototype.writeDoubleBE=a(function(e,t,n){return jn(\nthis,e,t,!1,n)},\"writeDoubleBE\");f.prototype.copy=a(function(e,t,n,i){if(!f.isBuffer(\ne))throw new TypeError(\"argument should be a Buffer\");if(n||(n=0),!i&&i!==0&&(i=\nthis.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n||e.length===\n0||this.length===0)return 0;if(t<0)throw new RangeError(\"targetStart out of boun\\\nds\");if(n<0||n>=this.length)throw new RangeError(\"Index out of range\");if(i<0)throw new RangeError(\n\"sourceEnd out of bounds\");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-\nt+n);let s=i-n;return this===e&&typeof Uint8Array.prototype.copyWithin==\"functio\\\nn\"?this.copyWithin(t,n,i):Uint8Array.prototype.set.call(e,this.subarray(n,i),t),\ns},\"copy\");f.prototype.fill=a(function(e,t,n,i){if(typeof e==\"string\"){if(typeof t==\n\"string\"?(i=t,t=0,n=this.length):typeof n==\"string\"&&(i=n,n=this.length),i!==void 0&&\ntypeof i!=\"string\")throw new TypeError(\"encoding must be a string\");if(typeof i==\n\"string\"&&!f.isEncoding(i))throw new TypeError(\"Unknown encoding: \"+i);if(e.length===\n1){let o=e.charCodeAt(0);(i===\"utf8\"&&o<128||i===\"latin1\")&&(e=o)}}else typeof e==\n\"number\"?e=e&255:typeof e==\"boolean\"&&(e=Number(e));if(t<0||this.length<t||this.\nlength<n)throw new RangeError(\"Out of range index\");if(n<=t)return this;t=t>>>0,\nn=n===void 0?this.length:n>>>0,e||(e=0);let s;if(typeof e==\"number\")for(s=t;s<n;++s)\nthis[s]=e;else{let o=f.isBuffer(e)?e:f.from(e,i),u=o.length;if(u===0)throw new TypeError(\n'The value \"'+e+'\" is invalid for argument \"value\"');for(s=0;s<n-t;++s)this[s+t]=\no[s%u]}return this},\"fill\");var Ie={};function Ut(r,e,t){var n;Ie[r]=(n=class extends t{constructor(){\nsuper(),Object.defineProperty(this,\"message\",{value:e.apply(this,arguments),writable:!0,\nconfigurable:!0}),this.name=`${this.name} [${r}]`,this.stack,delete this.name}get code(){\nreturn r}set code(s){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,\nvalue:s,writable:!0})}toString(){return`${this.name} [${r}]: ${this.message}`}},\na(n,\"NodeError\"),n)}a(Ut,\"E\");Ut(\"ERR_BUFFER_OUT_OF_BOUNDS\",function(r){return r?\n`${r} is outside of buffer bounds`:\"Attempt to access memory outside buffer boun\\\nds\"},RangeError);Ut(\"ERR_INVALID_ARG_TYPE\",function(r,e){return`The \"${r}\" argum\\\nent must be of type number. Received type ${typeof e}`},TypeError);Ut(\"ERR_OUT_O\\\nF_RANGE\",function(r,e,t){let n=`The value of \"${r}\" is out of range.`,i=t;return Number.\nisInteger(t)&&Math.abs(t)>2**32?i=Fn(String(t)):typeof t==\"bigint\"&&(i=String(t),\n(t>BigInt(2)**BigInt(32)||t<-(BigInt(2)**BigInt(32)))&&(i=Fn(i)),i+=\"n\"),n+=` It\\\n must be ${e}. Received ${i}`,n},RangeError);function Fn(r){let e=\"\",t=r.length,\nn=r[0]===\"-\"?1:0;for(;t>=n+4;t-=3)e=`_${r.slice(t-3,t)}${e}`;return`${r.slice(0,\nt)}${e}`}a(Fn,\"addNumericalSeparator\");function Fo(r,e,t){Be(e,\"offset\"),(r[e]===\nvoid 0||r[e+t]===void 0)&&We(e,r.length-(t+1))}a(Fo,\"checkBounds\");function Hn(r,e,t,n,i,s){\nif(r>t||r<e){let o=typeof e==\"bigint\"?\"n\":\"\",u;throw s>3?e===0||e===BigInt(0)?u=\n`>= 0${o} and < 2${o} ** ${(s+1)*8}${o}`:u=`>= -(2${o} ** ${(s+1)*8-1}${o}) and \\\n< 2 ** ${(s+1)*8-1}${o}`:u=`>= ${e}${o} and <= ${t}${o}`,new Ie.ERR_OUT_OF_RANGE(\n\"value\",u,r)}Fo(n,i,s)}a(Hn,\"checkIntBI\");function Be(r,e){if(typeof r!=\"number\")\nthrow new Ie.ERR_INVALID_ARG_TYPE(e,\"number\",r)}a(Be,\"validateNumber\");function We(r,e,t){\nthrow Math.floor(r)!==r?(Be(r,t),new Ie.ERR_OUT_OF_RANGE(t||\"offset\",\"an integer\",\nr)):e<0?new Ie.ERR_BUFFER_OUT_OF_BOUNDS:new Ie.ERR_OUT_OF_RANGE(t||\"offset\",`>= ${t?\n1:0} and <= ${e}`,r)}a(We,\"boundsError\");var Mo=/[^+/0-9A-Za-z-_]/g;function Do(r){\nif(r=r.split(\"=\")[0],r=r.trim().replace(Mo,\"\"),r.length<2)return\"\";for(;r.length%\n4!==0;)r=r+\"=\";return r}a(Do,\"base64clean\");function Mt(r,e){e=e||1/0;let t,n=r.\nlength,i=null,s=[];for(let o=0;o<n;++o){if(t=r.charCodeAt(o),t>55295&&t<57344){if(!i){\nif(t>56319){(e-=3)>-1&&s.push(239,191,189);continue}else if(o+1===n){(e-=3)>-1&&\ns.push(239,191,189);continue}i=t;continue}if(t<56320){(e-=3)>-1&&s.push(239,191,\n189),i=t;continue}t=(i-55296<<10|t-56320)+65536}else i&&(e-=3)>-1&&s.push(239,191,\n189);if(i=null,t<128){if((e-=1)<0)break;s.push(t)}else if(t<2048){if((e-=2)<0)break;\ns.push(t>>6|192,t&63|128)}else if(t<65536){if((e-=3)<0)break;s.push(t>>12|224,t>>\n6&63|128,t&63|128)}else if(t<1114112){if((e-=4)<0)break;s.push(t>>18|240,t>>12&63|\n128,t>>6&63|128,t&63|128)}else throw new Error(\"Invalid code point\")}return s}a(\nMt,\"utf8ToBytes\");function ko(r){let e=[];for(let t=0;t<r.length;++t)e.push(r.charCodeAt(\nt)&255);return e}a(ko,\"asciiToBytes\");function Uo(r,e){let t,n,i,s=[];for(let o=0;o<\nr.length&&!((e-=2)<0);++o)t=r.charCodeAt(o),n=t>>8,i=t%256,s.push(i),s.push(n);return s}\na(Uo,\"utf16leToBytes\");function Gn(r){return Lt.toByteArray(Do(r))}a(Gn,\"base64T\\\noBytes\");function st(r,e,t,n){let i;for(i=0;i<n&&!(i+t>=e.length||i>=r.length);++i)\ne[i+t]=r[i];return i}a(st,\"blitBuffer\");function ue(r,e){return r instanceof e||\nr!=null&&r.constructor!=null&&r.constructor.name!=null&&r.constructor.name===e.name}\na(ue,\"isInstance\");function Ot(r){return r!==r}a(Ot,\"numberIsNaN\");var Oo=function(){\nlet r=\"0123456789abcdef\",e=new Array(256);for(let t=0;t<16;++t){let n=t*16;for(let i=0;i<\n16;++i)e[n+i]=r[t]+r[i]}return e}();function ge(r){return typeof BigInt>\"u\"?No:r}\na(ge,\"defineBigIntMethod\");function No(){throw new Error(\"BigInt not supported\")}\na(No,\"BufferBigIntNotDefined\")});var S,x,v,g,y,m,p=z(()=>{\"use strict\";S=globalThis,x=globalThis.setImmediate??(r=>setTimeout(\nr,0)),v=globalThis.clearImmediate??(r=>clearTimeout(r)),g=globalThis.crypto??{};\ng.subtle??(g.subtle={});y=typeof globalThis.Buffer==\"function\"&&typeof globalThis.\nBuffer.allocUnsafe==\"function\"?globalThis.Buffer:$n().Buffer,m=globalThis.process??\n{};m.env??(m.env={});try{m.nextTick(()=>{})}catch{let e=Promise.resolve();m.nextTick=\ne.then.bind(e)}});var we=I((Xc,Nt)=>{\"use strict\";p();var Re=typeof Reflect==\"object\"?Reflect:null,\nVn=Re&&typeof Re.apply==\"function\"?Re.apply:a(function(e,t,n){return Function.prototype.\napply.call(e,t,n)},\"ReflectApply\"),ot;Re&&typeof Re.ownKeys==\"function\"?ot=Re.ownKeys:\nObject.getOwnPropertySymbols?ot=a(function(e){return Object.getOwnPropertyNames(\ne).concat(Object.getOwnPropertySymbols(e))},\"ReflectOwnKeys\"):ot=a(function(e){return Object.\ngetOwnPropertyNames(e)},\"ReflectOwnKeys\");function qo(r){console&&console.warn&&\nconsole.warn(r)}a(qo,\"ProcessEmitWarning\");var zn=Number.isNaN||a(function(e){return e!==\ne},\"NumberIsNaN\");function L(){L.init.call(this)}a(L,\"EventEmitter\");Nt.exports=\nL;Nt.exports.once=Ho;L.EventEmitter=L;L.prototype._events=void 0;L.prototype._eventsCount=\n0;L.prototype._maxListeners=void 0;var Kn=10;function at(r){if(typeof r!=\"functi\\\non\")throw new TypeError('The \"listener\" argument must be of type Function. Recei\\\nved type '+typeof r)}a(at,\"checkListener\");Object.defineProperty(L,\"defaultMaxLi\\\nsteners\",{enumerable:!0,get:a(function(){return Kn},\"get\"),set:a(function(r){if(typeof r!=\n\"number\"||r<0||zn(r))throw new RangeError('The value of \"defaultMaxListeners\" is\\\n out of range. It must be a non-negative number. Received '+r+\".\");Kn=r},\"set\")});\nL.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this).\n_events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=\nthis._maxListeners||void 0};L.prototype.setMaxListeners=a(function(e){if(typeof e!=\n\"number\"||e<0||zn(e))throw new RangeError('The value of \"n\" is out of range. It \\\nmust be a non-negative number. Received '+e+\".\");return this._maxListeners=e,this},\n\"setMaxListeners\");function Yn(r){return r._maxListeners===void 0?L.defaultMaxListeners:\nr._maxListeners}a(Yn,\"_getMaxListeners\");L.prototype.getMaxListeners=a(function(){\nreturn Yn(this)},\"getMaxListeners\");L.prototype.emit=a(function(e){for(var t=[],\nn=1;n<arguments.length;n++)t.push(arguments[n]);var i=e===\"error\",s=this._events;\nif(s!==void 0)i=i&&s.error===void 0;else if(!i)return!1;if(i){var o;if(t.length>\n0&&(o=t[0]),o instanceof Error)throw o;var u=new Error(\"Unhandled error.\"+(o?\" (\"+\no.message+\")\":\"\"));throw u.context=o,u}var c=s[e];if(c===void 0)return!1;if(typeof c==\n\"function\")Vn(c,this,t);else for(var h=c.length,l=ti(c,h),n=0;n<h;++n)Vn(l[n],this,\nt);return!0},\"emit\");function Zn(r,e,t,n){var i,s,o;if(at(t),s=r._events,s===void 0?\n(s=r._events=Object.create(null),r._eventsCount=0):(s.newListener!==void 0&&(r.emit(\n\"newListener\",e,t.listener?t.listener:t),s=r._events),o=s[e]),o===void 0)o=s[e]=\nt,++r._eventsCount;else if(typeof o==\"function\"?o=s[e]=n?[t,o]:[o,t]:n?o.unshift(\nt):o.push(t),i=Yn(r),i>0&&o.length>i&&!o.warned){o.warned=!0;var u=new Error(\"Po\\\nssible EventEmitter memory leak detected. \"+o.length+\" \"+String(e)+\" listeners a\\\ndded. Use emitter.setMaxListeners() to increase limit\");u.name=\"MaxListenersExce\\\nededWarning\",u.emitter=r,u.type=e,u.count=o.length,qo(u)}return r}a(Zn,\"_addList\\\nener\");L.prototype.addListener=a(function(e,t){return Zn(this,e,t,!1)},\"addListe\\\nner\");L.prototype.on=L.prototype.addListener;L.prototype.prependListener=a(function(e,t){\nreturn Zn(this,e,t,!0)},\"prependListener\");function Qo(){if(!this.fired)return this.\ntarget.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?\nthis.listener.call(this.target):this.listener.apply(this.target,arguments)}a(Qo,\n\"onceWrapper\");function Jn(r,e,t){var n={fired:!1,wrapFn:void 0,target:r,type:e,\nlistener:t},i=Qo.bind(n);return i.listener=t,n.wrapFn=i,i}a(Jn,\"_onceWrap\");L.prototype.\nonce=a(function(e,t){return at(t),this.on(e,Jn(this,e,t)),this},\"once\");L.prototype.\nprependOnceListener=a(function(e,t){return at(t),this.prependListener(e,Jn(this,\ne,t)),this},\"prependOnceListener\");L.prototype.removeListener=a(function(e,t){var n,\ni,s,o,u;if(at(t),i=this._events,i===void 0)return this;if(n=i[e],n===void 0)return this;\nif(n===t||n.listener===t)--this._eventsCount===0?this._events=Object.create(null):\n(delete i[e],i.removeListener&&this.emit(\"removeListener\",e,n.listener||t));else if(typeof n!=\n\"function\"){for(s=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){u=n[o].\nlistener,s=o;break}if(s<0)return this;s===0?n.shift():Wo(n,s),n.length===1&&(i[e]=\nn[0]),i.removeListener!==void 0&&this.emit(\"removeListener\",e,u||t)}return this},\n\"removeListener\");L.prototype.off=L.prototype.removeListener;L.prototype.removeAllListeners=\na(function(e){var t,n,i;if(n=this._events,n===void 0)return this;if(n.removeListener===\nvoid 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=\n0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),\nthis;if(arguments.length===0){var s=Object.keys(n),o;for(i=0;i<s.length;++i)o=s[i],\no!==\"removeListener\"&&this.removeAllListeners(o);return this.removeAllListeners(\n\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(t=\nn[e],typeof t==\"function\")this.removeListener(e,t);else if(t!==void 0)for(i=t.length-\n1;i>=0;i--)this.removeListener(e,t[i]);return this},\"removeAllListeners\");function Xn(r,e,t){\nvar n=r._events;if(n===void 0)return[];var i=n[e];return i===void 0?[]:typeof i==\n\"function\"?t?[i.listener||i]:[i]:t?jo(i):ti(i,i.length)}a(Xn,\"_listeners\");L.prototype.\nlisteners=a(function(e){return Xn(this,e,!0)},\"listeners\");L.prototype.rawListeners=\na(function(e){return Xn(this,e,!1)},\"rawListeners\");L.listenerCount=function(r,e){\nreturn typeof r.listenerCount==\"function\"?r.listenerCount(e):ei.call(r,e)};L.prototype.\nlistenerCount=ei;function ei(r){var e=this._events;if(e!==void 0){var t=e[r];if(typeof t==\n\"function\")return 1;if(t!==void 0)return t.length}return 0}a(ei,\"listenerCount\");\nL.prototype.eventNames=a(function(){return this._eventsCount>0?ot(this._events):\n[]},\"eventNames\");function ti(r,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=r[n];\nreturn t}a(ti,\"arrayClone\");function Wo(r,e){for(;e+1<r.length;e++)r[e]=r[e+1];r.\npop()}a(Wo,\"spliceOne\");function jo(r){for(var e=new Array(r.length),t=0;t<e.length;++t)\ne[t]=r[t].listener||r[t];return e}a(jo,\"unwrapListeners\");function Ho(r,e){return new Promise(\nfunction(t,n){function i(o){r.removeListener(e,s),n(o)}a(i,\"errorListener\");function s(){\ntypeof r.removeListener==\"function\"&&r.removeListener(\"error\",i),t([].slice.call(\narguments))}a(s,\"resolver\"),ri(r,e,s,{once:!0}),e!==\"error\"&&Go(r,i,{once:!0})})}\na(Ho,\"once\");function Go(r,e,t){typeof r.on==\"function\"&&ri(r,\"error\",e,t)}a(Go,\n\"addErrorHandlerIfEventEmitter\");function ri(r,e,t,n){if(typeof r.on==\"function\")\nn.once?r.once(e,t):r.on(e,t);else if(typeof r.addEventListener==\"function\")r.addEventListener(\ne,a(function i(s){n.once&&r.removeEventListener(e,i),t(s)},\"wrapListener\"));else\nthrow new TypeError('The \"emitter\" argument must be of type EventEmitter. Receiv\\\ned type '+typeof r)}a(ri,\"eventTargetAgnosticAddListener\")});var je={};ie(je,{default:()=>$o});var $o,He=z(()=>{\"use strict\";p();$o={}});function Ge(r){let e=1779033703,t=3144134277,n=1013904242,i=2773480762,s=1359893119,\no=2600822924,u=528734635,c=1541459225,h=0,l=0,d=[1116352408,1899447441,3049323471,\n3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,\n1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,\n604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,\n3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,\n1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,\n3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,\n883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,\n2361852424,2428436474,2756734187,3204031479,3329325298],b=a((A,w)=>A>>>w|A<<32-w,\n\"rrot\"),C=new Uint32Array(64),B=new Uint8Array(64),W=a(()=>{for(let R=0,G=0;R<16;R++,\nG+=4)C[R]=B[G]<<24|B[G+1]<<16|B[G+2]<<8|B[G+3];for(let R=16;R<64;R++){let G=b(C[R-\n15],7)^b(C[R-15],18)^C[R-15]>>>3,he=b(C[R-2],17)^b(C[R-2],19)^C[R-2]>>>10;C[R]=C[R-\n16]+G+C[R-7]+he|0}let A=e,w=t,P=n,V=i,k=s,j=o,ce=u,ee=c;for(let R=0;R<64;R++){let G=b(\nk,6)^b(k,11)^b(k,25),he=k&j^~k&ce,ye=ee+G+he+d[R]+C[R]|0,xe=b(A,2)^b(A,13)^b(A,22),\nme=A&w^A&P^w&P,se=xe+me|0;ee=ce,ce=j,j=k,k=V+ye|0,V=P,P=w,w=A,A=ye+se|0}e=e+A|0,\nt=t+w|0,n=n+P|0,i=i+V|0,s=s+k|0,o=o+j|0,u=u+ce|0,c=c+ee|0,l=0},\"process\"),X=a(A=>{\ntypeof A==\"string\"&&(A=new TextEncoder().encode(A));for(let w=0;w<A.length;w++)B[l++]=\nA[w],l===64&&W();h+=A.length},\"add\"),de=a(()=>{if(B[l++]=128,l==64&&W(),l+8>64){\nfor(;l<64;)B[l++]=0;W()}for(;l<58;)B[l++]=0;let A=h*8;B[l++]=A/1099511627776&255,\nB[l++]=A/4294967296&255,B[l++]=A>>>24,B[l++]=A>>>16&255,B[l++]=A>>>8&255,B[l++]=\nA&255,W();let w=new Uint8Array(32);return w[0]=e>>>24,w[1]=e>>>16&255,w[2]=e>>>8&\n255,w[3]=e&255,w[4]=t>>>24,w[5]=t>>>16&255,w[6]=t>>>8&255,w[7]=t&255,w[8]=n>>>24,\nw[9]=n>>>16&255,w[10]=n>>>8&255,w[11]=n&255,w[12]=i>>>24,w[13]=i>>>16&255,w[14]=\ni>>>8&255,w[15]=i&255,w[16]=s>>>24,w[17]=s>>>16&255,w[18]=s>>>8&255,w[19]=s&255,\nw[20]=o>>>24,w[21]=o>>>16&255,w[22]=o>>>8&255,w[23]=o&255,w[24]=u>>>24,w[25]=u>>>\n16&255,w[26]=u>>>8&255,w[27]=u&255,w[28]=c>>>24,w[29]=c>>>16&255,w[30]=c>>>8&255,\nw[31]=c&255,w},\"digest\");return r===void 0?{add:X,digest:de}:(X(r),de())}var ni=z(\n()=>{\"use strict\";p();a(Ge,\"sha256\")});var O,$e,ii=z(()=>{\"use strict\";p();O=class O{constructor(){_(this,\"_dataLength\",\n0);_(this,\"_bufferLength\",0);_(this,\"_state\",new Int32Array(4));_(this,\"_buffer\",\nnew ArrayBuffer(68));_(this,\"_buffer8\");_(this,\"_buffer32\");this._buffer8=new Uint8Array(\nthis._buffer,0,68),this._buffer32=new Uint32Array(this._buffer,0,17),this.start()}static hashByteArray(e,t=!1){\nreturn this.onePassHasher.start().appendByteArray(e).end(t)}static hashStr(e,t=!1){\nreturn this.onePassHasher.start().appendStr(e).end(t)}static hashAsciiStr(e,t=!1){\nreturn this.onePassHasher.start().appendAsciiStr(e).end(t)}static _hex(e){let t=O.\nhexChars,n=O.hexOut,i,s,o,u;for(u=0;u<4;u+=1)for(s=u*8,i=e[u],o=0;o<8;o+=2)n[s+1+\no]=t.charAt(i&15),i>>>=4,n[s+0+o]=t.charAt(i&15),i>>>=4;return n.join(\"\")}static _md5cycle(e,t){\nlet n=e[0],i=e[1],s=e[2],o=e[3];n+=(i&s|~i&o)+t[0]-680876936|0,n=(n<<7|n>>>25)+i|\n0,o+=(n&i|~n&s)+t[1]-389564586|0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&i)+t[2]+606105819|\n0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[3]-1044525330|0,i=(i<<22|i>>>10)+s|0,n+=(i&\ns|~i&o)+t[4]-176418897|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[5]+1200080426|0,o=(o<<\n12|o>>>20)+n|0,s+=(o&n|~o&i)+t[6]-1473231341|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+\nt[7]-45705983|0,i=(i<<22|i>>>10)+s|0,n+=(i&s|~i&o)+t[8]+1770035416|0,n=(n<<7|n>>>\n25)+i|0,o+=(n&i|~n&s)+t[9]-1958414417|0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&i)+t[10]-\n42063|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[11]-1990404162|0,i=(i<<22|i>>>10)+s|\n0,n+=(i&s|~i&o)+t[12]+1804603682|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[13]-40341101|\n0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&i)+t[14]-1502002290|0,s=(s<<17|s>>>15)+o|0,i+=\n(s&o|~s&n)+t[15]+1236535329|0,i=(i<<22|i>>>10)+s|0,n+=(i&o|s&~o)+t[1]-165796510|\n0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[6]-1069501632|0,o=(o<<9|o>>>23)+n|0,s+=(o&\ni|n&~i)+t[11]+643717713|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[0]-373897302|0,i=\n(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[5]-701558691|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&\n~s)+t[10]+38016083|0,o=(o<<9|o>>>23)+n|0,s+=(o&i|n&~i)+t[15]-660478335|0,s=(s<<14|\ns>>>18)+o|0,i+=(s&n|o&~n)+t[4]-405537848|0,i=(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[9]+\n568446438|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[14]-1019803690|0,o=(o<<9|o>>>23)+\nn|0,s+=(o&i|n&~i)+t[3]-187363961|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[8]+1163531501|\n0,i=(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[13]-1444681467|0,n=(n<<5|n>>>27)+i|0,o+=(n&\ns|i&~s)+t[2]-51403784|0,o=(o<<9|o>>>23)+n|0,s+=(o&i|n&~i)+t[7]+1735328473|0,s=(s<<\n14|s>>>18)+o|0,i+=(s&n|o&~n)+t[12]-1926607734|0,i=(i<<20|i>>>12)+s|0,n+=(i^s^o)+\nt[5]-378558|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[8]-2022574463|0,o=(o<<11|o>>>21)+\nn|0,s+=(o^n^i)+t[11]+1839030562|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[14]-35309556|\n0,i=(i<<23|i>>>9)+s|0,n+=(i^s^o)+t[1]-1530992060|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+\nt[4]+1272893353|0,o=(o<<11|o>>>21)+n|0,s+=(o^n^i)+t[7]-155497632|0,s=(s<<16|s>>>\n16)+o|0,i+=(s^o^n)+t[10]-1094730640|0,i=(i<<23|i>>>9)+s|0,n+=(i^s^o)+t[13]+681279174|\n0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[0]-358537222|0,o=(o<<11|o>>>21)+n|0,s+=(o^n^i)+\nt[3]-722521979|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[6]+76029189|0,i=(i<<23|i>>>9)+\ns|0,n+=(i^s^o)+t[9]-640364487|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[12]-421815835|0,\no=(o<<11|o>>>21)+n|0,s+=(o^n^i)+t[15]+530742520|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+\nt[2]-995338651|0,i=(i<<23|i>>>9)+s|0,n+=(s^(i|~o))+t[0]-198630844|0,n=(n<<6|n>>>\n26)+i|0,o+=(i^(n|~s))+t[7]+1126891415|0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[14]-\n1416354905|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[5]-57434055|0,i=(i<<21|i>>>11)+\ns|0,n+=(s^(i|~o))+t[12]+1700485571|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[3]-1894986606|\n0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[10]-1051523|0,s=(s<<15|s>>>17)+o|0,i+=(o^\n(s|~n))+t[1]-2054922799|0,i=(i<<21|i>>>11)+s|0,n+=(s^(i|~o))+t[8]+1873313359|0,n=\n(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[15]-30611744|0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+\nt[6]-1560198380|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[13]+1309151649|0,i=(i<<21|\ni>>>11)+s|0,n+=(s^(i|~o))+t[4]-145523070|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[11]-\n1120210379|0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[2]+718787259|0,s=(s<<15|s>>>17)+\no|0,i+=(o^(s|~n))+t[9]-343485551|0,i=(i<<21|i>>>11)+s|0,e[0]=n+e[0]|0,e[1]=i+e[1]|\n0,e[2]=s+e[2]|0,e[3]=o+e[3]|0}start(){return this._dataLength=0,this._bufferLength=\n0,this._state.set(O.stateIdentity),this}appendStr(e){let t=this._buffer8,n=this.\n_buffer32,i=this._bufferLength,s,o;for(o=0;o<e.length;o+=1){if(s=e.charCodeAt(o),\ns<128)t[i++]=s;else if(s<2048)t[i++]=(s>>>6)+192,t[i++]=s&63|128;else if(s<55296||\ns>56319)t[i++]=(s>>>12)+224,t[i++]=s>>>6&63|128,t[i++]=s&63|128;else{if(s=(s-55296)*\n1024+(e.charCodeAt(++o)-56320)+65536,s>1114111)throw new Error(\"Unicode standard\\\n supports code points up to U+10FFFF\");t[i++]=(s>>>18)+240,t[i++]=s>>>12&63|128,\nt[i++]=s>>>6&63|128,t[i++]=s&63|128}i>=64&&(this._dataLength+=64,O._md5cycle(this.\n_state,n),i-=64,n[0]=n[16])}return this._bufferLength=i,this}appendAsciiStr(e){let t=this.\n_buffer8,n=this._buffer32,i=this._bufferLength,s,o=0;for(;;){for(s=Math.min(e.length-\no,64-i);s--;)t[i++]=e.charCodeAt(o++);if(i<64)break;this._dataLength+=64,O._md5cycle(\nthis._state,n),i=0}return this._bufferLength=i,this}appendByteArray(e){let t=this.\n_buffer8,n=this._buffer32,i=this._bufferLength,s,o=0;for(;;){for(s=Math.min(e.length-\no,64-i);s--;)t[i++]=e[o++];if(i<64)break;this._dataLength+=64,O._md5cycle(this._state,\nn),i=0}return this._bufferLength=i,this}getState(){let e=this._state;return{buffer:String.\nfromCharCode.apply(null,Array.from(this._buffer8)),buflen:this._bufferLength,length:this.\n_dataLength,state:[e[0],e[1],e[2],e[3]]}}setState(e){let t=e.buffer,n=e.state,i=this.\n_state,s;for(this._dataLength=e.length,this._bufferLength=e.buflen,i[0]=n[0],i[1]=\nn[1],i[2]=n[2],i[3]=n[3],s=0;s<t.length;s+=1)this._buffer8[s]=t.charCodeAt(s)}end(e=!1){\nlet t=this._bufferLength,n=this._buffer8,i=this._buffer32,s=(t>>2)+1;this._dataLength+=\nt;let o=this._dataLength*8;if(n[t]=128,n[t+1]=n[t+2]=n[t+3]=0,i.set(O.buffer32Identity.\nsubarray(s),s),t>55&&(O._md5cycle(this._state,i),i.set(O.buffer32Identity)),o<=4294967295)\ni[14]=o;else{let u=o.toString(16).match(/(.*?)(.{0,8})$/);if(u===null)return;let c=parseInt(\nu[2],16),h=parseInt(u[1],16)||0;i[14]=c,i[15]=h}return O._md5cycle(this._state,i),\ne?this._state:O._hex(this._state)}};a(O,\"Md5\"),_(O,\"stateIdentity\",new Int32Array(\n[1732584193,-271733879,-1732584194,271733878])),_(O,\"buffer32Identity\",new Int32Array(\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])),_(O,\"hexChars\",\"0123456789abcdef\"),_(O,\"hexO\\\nut\",[]),_(O,\"onePassHasher\",new O);$e=O});var qt={};ie(qt,{createHash:()=>Ko,createHmac:()=>zo,randomBytes:()=>Vo});function Vo(r){\nreturn g.getRandomValues(y.alloc(r))}function Ko(r){if(r===\"sha256\")return{update:a(\nfunction(e){return{digest:a(function(){return y.from(Ge(e))},\"digest\")}},\"update\")};\nif(r===\"md5\")return{update:a(function(e){return{digest:a(function(){return typeof e==\n\"string\"?$e.hashStr(e):$e.hashByteArray(e)},\"digest\")}},\"update\")};throw new Error(\n`Hash type '${r}' not supported`)}function zo(r,e){if(r!==\"sha256\")throw new Error(\n`Only sha256 is supported (requested: '${r}')`);return{update:a(function(t){return{\ndigest:a(function(){typeof e==\"string\"&&(e=new TextEncoder().encode(e)),typeof t==\n\"string\"&&(t=new TextEncoder().encode(t));let n=e.length;if(n>64)e=Ge(e);else if(n<\n64){let c=new Uint8Array(64);c.set(e),e=c}let i=new Uint8Array(64),s=new Uint8Array(\n64);for(let c=0;c<64;c++)i[c]=54^e[c],s[c]=92^e[c];let o=new Uint8Array(t.length+\n64);o.set(i,0),o.set(t,64);let u=new Uint8Array(96);return u.set(s,0),u.set(Ge(o),\n64),y.from(Ge(u))},\"digest\")}},\"update\")}}var Qt=z(()=>{\"use strict\";p();ni();ii();\na(Vo,\"randomBytes\");a(Ko,\"createHash\");a(zo,\"createHmac\")});var jt=I(si=>{\"use strict\";p();si.parse=function(r,e){return new Wt(r,e).parse()};\nvar ut=class ut{constructor(e,t){this.source=e,this.transform=t||Yo,this.position=\n0,this.entries=[],this.recorded=[],this.dimension=0}isEof(){return this.position>=\nthis.source.length}nextCharacter(){var e=this.source[this.position++];return e===\n\"\\\\\"?{value:this.source[this.position++],escaped:!0}:{value:e,escaped:!1}}record(e){\nthis.recorded.push(e)}newEntry(e){var t;(this.recorded.length>0||e)&&(t=this.recorded.\njoin(\"\"),t===\"NULL\"&&!e&&(t=null),t!==null&&(t=this.transform(t)),this.entries.push(\nt),this.recorded=[])}consumeDimensions(){if(this.source[0]===\"[\")for(;!this.isEof();){\nvar e=this.nextCharacter();if(e.value===\"=\")break}}parse(e){var t,n,i;for(this.consumeDimensions();!this.\nisEof();)if(t=this.nextCharacter(),t.value===\"{\"&&!i)this.dimension++,this.dimension>\n1&&(n=new ut(this.source.substr(this.position-1),this.transform),this.entries.push(\nn.parse(!0)),this.position+=n.position-2);else if(t.value===\"}\"&&!i){if(this.dimension--,\n!this.dimension&&(this.newEntry(),e))return this.entries}else t.value==='\"'&&!t.\nescaped?(i&&this.newEntry(!0),i=!i):t.value===\",\"&&!i?this.newEntry():this.record(\nt.value);if(this.dimension!==0)throw new Error(\"array dimension not balanced\");return this.\nentries}};a(ut,\"ArrayParser\");var Wt=ut;function Yo(r){return r}a(Yo,\"identity\")});var Ht=I((mh,oi)=>{p();var Zo=jt();oi.exports={create:a(function(r,e){return{parse:a(\nfunction(){return Zo.parse(r,e)},\"parse\")}},\"create\")}});var ci=I((bh,ui)=>{\"use strict\";p();var Jo=/(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/,\nXo=/^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/,ea=/([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/,ta=/^-?infinity$/;\nui.exports=a(function(e){if(ta.test(e))return Number(e.replace(\"i\",\"I\"));var t=Jo.\nexec(e);if(!t)return ra(e)||null;var n=!!t[8],i=parseInt(t[1],10);n&&(i=ai(i));var s=parseInt(\nt[2],10)-1,o=t[3],u=parseInt(t[4],10),c=parseInt(t[5],10),h=parseInt(t[6],10),l=t[7];\nl=l?1e3*parseFloat(l):0;var d,b=na(e);return b!=null?(d=new Date(Date.UTC(i,s,o,\nu,c,h,l)),Gt(i)&&d.setUTCFullYear(i),b!==0&&d.setTime(d.getTime()-b)):(d=new Date(\ni,s,o,u,c,h,l),Gt(i)&&d.setFullYear(i)),d},\"parseDate\");function ra(r){var e=Xo.\nexec(r);if(e){var t=parseInt(e[1],10),n=!!e[4];n&&(t=ai(t));var i=parseInt(e[2],\n10)-1,s=e[3],o=new Date(t,i,s);return Gt(t)&&o.setFullYear(t),o}}a(ra,\"getDate\");\nfunction na(r){if(r.endsWith(\"+00\"))return 0;var e=ea.exec(r.split(\" \")[1]);if(e){\nvar t=e[1];if(t===\"Z\")return 0;var n=t===\"-\"?-1:1,i=parseInt(e[2],10)*3600+parseInt(\ne[3]||0,10)*60+parseInt(e[4]||0,10);return i*n*1e3}}a(na,\"timeZoneOffset\");function ai(r){\nreturn-(r-1)}a(ai,\"bcYearToNegativeYear\");function Gt(r){return r>=0&&r<100}a(Gt,\n\"is0To99\")});var li=I((vh,hi)=>{p();hi.exports=sa;var ia=Object.prototype.hasOwnProperty;function sa(r){\nfor(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)ia.call(t,\nn)&&(r[n]=t[n])}return r}a(sa,\"extend\")});var di=I((Ah,pi)=>{\"use strict\";p();var oa=li();pi.exports=Fe;function Fe(r){if(!(this instanceof\nFe))return new Fe(r);oa(this,wa(r))}a(Fe,\"PostgresInterval\");var aa=[\"seconds\",\"\\\nminutes\",\"hours\",\"days\",\"months\",\"years\"];Fe.prototype.toPostgres=function(){var r=aa.\nfilter(this.hasOwnProperty,this);return this.milliseconds&&r.indexOf(\"seconds\")<\n0&&r.push(\"seconds\"),r.length===0?\"0\":r.map(function(e){var t=this[e]||0;return e===\n\"seconds\"&&this.milliseconds&&(t=(t+this.milliseconds/1e3).toFixed(6).replace(/\\.?0+$/,\n\"\")),t+\" \"+e},this).join(\" \")};var ua={years:\"Y\",months:\"M\",days:\"D\",hours:\"H\",minutes:\"\\\nM\",seconds:\"S\"},ca=[\"years\",\"months\",\"days\"],ha=[\"hours\",\"minutes\",\"seconds\"];Fe.\nprototype.toISOString=Fe.prototype.toISO=function(){var r=ca.map(t,this).join(\"\"),\ne=ha.map(t,this).join(\"\");return\"P\"+r+\"T\"+e;function t(n){var i=this[n]||0;return n===\n\"seconds\"&&this.milliseconds&&(i=(i+this.milliseconds/1e3).toFixed(6).replace(/0+$/,\n\"\")),i+ua[n]}};var $t=\"([+-]?\\\\d+)\",la=$t+\"\\\\s+years?\",fa=$t+\"\\\\s+mons?\",pa=$t+\"\\\n\\\\s+days?\",da=\"([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?\",ya=new RegExp([\nla,fa,pa,da].map(function(r){return\"(\"+r+\")?\"}).join(\"\\\\s*\")),fi={years:2,months:4,\ndays:6,hours:9,minutes:10,seconds:11,milliseconds:12},ma=[\"hours\",\"minutes\",\"sec\\\nonds\",\"milliseconds\"];function ga(r){var e=r+\"000000\".slice(r.length);return parseInt(\ne,10)/1e3}a(ga,\"parseMilliseconds\");function wa(r){if(!r)return{};var e=ya.exec(\nr),t=e[8]===\"-\";return Object.keys(fi).reduce(function(n,i){var s=fi[i],o=e[s];return!o||\n(o=i===\"milliseconds\"?ga(o):parseInt(o,10),!o)||(t&&~ma.indexOf(i)&&(o*=-1),n[i]=\no),n},{})}a(wa,\"parse\")});var mi=I((Ih,yi)=>{\"use strict\";p();yi.exports=a(function(e){if(/^\\\\x/.test(e))return new y(\ne.substr(2),\"hex\");for(var t=\"\",n=0;n<e.length;)if(e[n]!==\"\\\\\")t+=e[n],++n;else if(/[0-7]{3}/.\ntest(e.substr(n+1,3)))t+=String.fromCharCode(parseInt(e.substr(n+1,3),8)),n+=4;else{\nfor(var i=1;n+i<e.length&&e[n+i]===\"\\\\\";)i++;for(var s=0;s<Math.floor(i/2);++s)t+=\n\"\\\\\";n+=Math.floor(i/2)*2}return new y(t,\"binary\")},\"parseBytea\")});var Ei=I((Lh,vi)=>{p();var Ve=jt(),Ke=Ht(),ct=ci(),wi=di(),bi=mi();function ht(r){\nreturn a(function(t){return t===null?t:r(t)},\"nullAllowed\")}a(ht,\"allowNull\");function Si(r){\nreturn r===null?r:r===\"TRUE\"||r===\"t\"||r===\"true\"||r===\"y\"||r===\"yes\"||r===\"on\"||\nr===\"1\"}a(Si,\"parseBool\");function ba(r){return r?Ve.parse(r,Si):null}a(ba,\"pars\\\neBoolArray\");function Sa(r){return parseInt(r,10)}a(Sa,\"parseBaseTenInt\");function Vt(r){\nreturn r?Ve.parse(r,ht(Sa)):null}a(Vt,\"parseIntegerArray\");function xa(r){return r?\nVe.parse(r,ht(function(e){return xi(e).trim()})):null}a(xa,\"parseBigIntegerArray\");\nvar va=a(function(r){if(!r)return null;var e=Ke.create(r,function(t){return t!==\nnull&&(t=Zt(t)),t});return e.parse()},\"parsePointArray\"),Kt=a(function(r){if(!r)\nreturn null;var e=Ke.create(r,function(t){return t!==null&&(t=parseFloat(t)),t});\nreturn e.parse()},\"parseFloatArray\"),re=a(function(r){if(!r)return null;var e=Ke.\ncreate(r);return e.parse()},\"parseStringArray\"),zt=a(function(r){if(!r)return null;\nvar e=Ke.create(r,function(t){return t!==null&&(t=ct(t)),t});return e.parse()},\"\\\nparseDateArray\"),Ea=a(function(r){if(!r)return null;var e=Ke.create(r,function(t){\nreturn t!==null&&(t=wi(t)),t});return e.parse()},\"parseIntervalArray\"),_a=a(function(r){\nreturn r?Ve.parse(r,ht(bi)):null},\"parseByteAArray\"),Yt=a(function(r){return parseInt(\nr,10)},\"parseInteger\"),xi=a(function(r){var e=String(r);return/^\\d+$/.test(e)?e:\nr},\"parseBigInteger\"),gi=a(function(r){return r?Ve.parse(r,ht(JSON.parse)):null},\n\"parseJsonArray\"),Zt=a(function(r){return r[0]!==\"(\"?null:(r=r.substring(1,r.length-\n1).split(\",\"),{x:parseFloat(r[0]),y:parseFloat(r[1])})},\"parsePoint\"),Aa=a(function(r){\nif(r[0]!==\"<\"&&r[1]!==\"(\")return null;for(var e=\"(\",t=\"\",n=!1,i=2;i<r.length-1;i++){\nif(n||(e+=r[i]),r[i]===\")\"){n=!0;continue}else if(!n)continue;r[i]!==\",\"&&(t+=r[i])}\nvar s=Zt(e);return s.radius=parseFloat(t),s},\"parseCircle\"),Ca=a(function(r){r(20,\nxi),r(21,Yt),r(23,Yt),r(26,Yt),r(700,parseFloat),r(701,parseFloat),r(16,Si),r(1082,\nct),r(1114,ct),r(1184,ct),r(600,Zt),r(651,re),r(718,Aa),r(1e3,ba),r(1001,_a),r(1005,\nVt),r(1007,Vt),r(1028,Vt),r(1016,xa),r(1017,va),r(1021,Kt),r(1022,Kt),r(1231,Kt),\nr(1014,re),r(1015,re),r(1008,re),r(1009,re),r(1040,re),r(1041,re),r(1115,zt),r(1182,\nzt),r(1185,zt),r(1186,wi),r(1187,Ea),r(17,bi),r(114,JSON.parse.bind(JSON)),r(3802,\nJSON.parse.bind(JSON)),r(199,gi),r(3807,gi),r(3907,re),r(2951,re),r(791,re),r(1183,\nre),r(1270,re)},\"init\");vi.exports={init:Ca}});var Ai=I((Mh,_i)=>{\"use strict\";p();var Z=1e6;function Ta(r){var e=r.readInt32BE(\n0),t=r.readUInt32BE(4),n=\"\";e<0&&(e=~e+(t===0),t=~t+1>>>0,n=\"-\");var i=\"\",s,o,u,\nc,h,l;{if(s=e%Z,e=e/Z>>>0,o=4294967296*s+t,t=o/Z>>>0,u=\"\"+(o-Z*t),t===0&&e===0)return n+\nu+i;for(c=\"\",h=6-u.length,l=0;l<h;l++)c+=\"0\";i=c+u+i}{if(s=e%Z,e=e/Z>>>0,o=4294967296*\ns+t,t=o/Z>>>0,u=\"\"+(o-Z*t),t===0&&e===0)return n+u+i;for(c=\"\",h=6-u.length,l=0;l<\nh;l++)c+=\"0\";i=c+u+i}{if(s=e%Z,e=e/Z>>>0,o=4294967296*s+t,t=o/Z>>>0,u=\"\"+(o-Z*t),\nt===0&&e===0)return n+u+i;for(c=\"\",h=6-u.length,l=0;l<h;l++)c+=\"0\";i=c+u+i}return s=\ne%Z,o=4294967296*s+t,u=\"\"+o%Z,n+u+i}a(Ta,\"readInt8\");_i.exports=Ta});var Bi=I((Uh,Pi)=>{p();var Ia=Ai(),F=a(function(r,e,t,n,i){t=t||0,n=n||!1,i=i||function(C,B,W){\nreturn C*Math.pow(2,W)+B};var s=t>>3,o=a(function(C){return n?~C&255:C},\"inv\"),u=255,\nc=8-t%8;e<c&&(u=255<<8-e&255,c=e),t&&(u=u>>t%8);var h=0;t%8+e>=8&&(h=i(0,o(r[s])&\nu,c));for(var l=e+t>>3,d=s+1;d<l;d++)h=i(h,o(r[d]),8);var b=(e+t)%8;return b>0&&\n(h=i(h,o(r[l])>>8-b,b)),h},\"parseBits\"),Ii=a(function(r,e,t){var n=Math.pow(2,t-\n1)-1,i=F(r,1),s=F(r,t,1);if(s===0)return 0;var o=1,u=a(function(h,l,d){h===0&&(h=\n1);for(var b=1;b<=d;b++)o/=2,(l&1<<d-b)>0&&(h+=o);return h},\"parsePrecisionBits\"),\nc=F(r,e,t+1,!1,u);return s==Math.pow(2,t+1)-1?c===0?i===0?1/0:-1/0:NaN:(i===0?1:\n-1)*Math.pow(2,s-n)*c},\"parseFloatFromBits\"),Pa=a(function(r){return F(r,1)==1?-1*\n(F(r,15,1,!0)+1):F(r,15,1)},\"parseInt16\"),Ci=a(function(r){return F(r,1)==1?-1*(F(\nr,31,1,!0)+1):F(r,31,1)},\"parseInt32\"),Ba=a(function(r){return Ii(r,23,8)},\"pars\\\neFloat32\"),La=a(function(r){return Ii(r,52,11)},\"parseFloat64\"),Ra=a(function(r){\nvar e=F(r,16,32);if(e==49152)return NaN;for(var t=Math.pow(1e4,F(r,16,16)),n=0,i=[],\ns=F(r,16),o=0;o<s;o++)n+=F(r,16,64+16*o)*t,t/=1e4;var u=Math.pow(10,F(r,16,48));\nreturn(e===0?1:-1)*Math.round(n*u)/u},\"parseNumeric\"),Ti=a(function(r,e){var t=F(\ne,1),n=F(e,63,1),i=new Date((t===0?1:-1)*n/1e3+9466848e5);return r||i.setTime(i.\ngetTime()+i.getTimezoneOffset()*6e4),i.usec=n%1e3,i.getMicroSeconds=function(){return this.\nusec},i.setMicroSeconds=function(s){this.usec=s},i.getUTCMicroSeconds=function(){\nreturn this.usec},i},\"parseDate\"),ze=a(function(r){for(var e=F(r,32),t=F(r,32,32),\nn=F(r,32,64),i=96,s=[],o=0;o<e;o++)s[o]=F(r,32,i),i+=32,i+=32;var u=a(function(h){\nvar l=F(r,32,i);if(i+=32,l==4294967295)return null;var d;if(h==23||h==20)return d=\nF(r,l*8,i),i+=l*8,d;if(h==25)return d=r.toString(this.encoding,i>>3,(i+=l<<3)>>3),\nd;console.log(\"ERROR: ElementType not implemented: \"+h)},\"parseElement\"),c=a(function(h,l){\nvar d=[],b;if(h.length>1){var C=h.shift();for(b=0;b<C;b++)d[b]=c(h,l);h.unshift(\nC)}else for(b=0;b<h[0];b++)d[b]=u(l);return d},\"parse\");return c(s,n)},\"parseArr\\\nay\"),Fa=a(function(r){return r.toString(\"utf8\")},\"parseText\"),Ma=a(function(r){return r===\nnull?null:F(r,8)>0},\"parseBool\"),Da=a(function(r){r(20,Ia),r(21,Pa),r(23,Ci),r(26,\nCi),r(1700,Ra),r(700,Ba),r(701,La),r(16,Ma),r(1114,Ti.bind(null,!1)),r(1184,Ti.bind(\nnull,!0)),r(1e3,ze),r(1007,ze),r(1016,ze),r(1008,ze),r(1009,ze),r(25,Fa)},\"init\");\nPi.exports={init:Da}});var Ri=I((qh,Li)=>{p();Li.exports={BOOL:16,BYTEA:17,CHAR:18,INT8:20,INT2:21,INT4:23,\nREGPROC:24,TEXT:25,OID:26,TID:27,XID:28,CID:29,JSON:114,XML:142,PG_NODE_TREE:194,\nSMGR:210,PATH:602,POLYGON:604,CIDR:650,FLOAT4:700,FLOAT8:701,ABSTIME:702,RELTIME:703,\nTINTERVAL:704,CIRCLE:718,MACADDR8:774,MONEY:790,MACADDR:829,INET:869,ACLITEM:1033,\nBPCHAR:1042,VARCHAR:1043,DATE:1082,TIME:1083,TIMESTAMP:1114,TIMESTAMPTZ:1184,INTERVAL:1186,\nTIMETZ:1266,BIT:1560,VARBIT:1562,NUMERIC:1700,REFCURSOR:1790,REGPROCEDURE:2202,REGOPER:2203,\nREGOPERATOR:2204,REGCLASS:2205,REGTYPE:2206,UUID:2950,TXID_SNAPSHOT:2970,PG_LSN:3220,\nPG_NDISTINCT:3361,PG_DEPENDENCIES:3402,TSVECTOR:3614,TSQUERY:3615,GTSVECTOR:3642,\nREGCONFIG:3734,REGDICTIONARY:3769,JSONB:3802,REGNAMESPACE:4089,REGROLE:4096}});var Je=I(Ze=>{p();var ka=Ei(),Ua=Bi(),Oa=Ht(),Na=Ri();Ze.getTypeParser=qa;Ze.setTypeParser=\nQa;Ze.arrayParser=Oa;Ze.builtins=Na;var Ye={text:{},binary:{}};function Fi(r){return String(\nr)}a(Fi,\"noParse\");function qa(r,e){return e=e||\"text\",Ye[e]&&Ye[e][r]||Fi}a(qa,\n\"getTypeParser\");function Qa(r,e,t){typeof e==\"function\"&&(t=e,e=\"text\"),Ye[e][r]=\nt}a(Qa,\"setTypeParser\");ka.init(function(r,e){Ye.text[r]=e});Ua.init(function(r,e){\nYe.binary[r]=e})});var Xe=I((Gh,Jt)=>{\"use strict\";p();Jt.exports={host:\"localhost\",user:m.platform===\n\"win32\"?m.env.USERNAME:m.env.USER,database:void 0,password:null,connectionString:void 0,\nport:5432,rows:0,binary:!1,max:10,idleTimeoutMillis:3e4,client_encoding:\"\",ssl:!1,\napplication_name:void 0,fallback_application_name:void 0,options:void 0,parseInputDatesAsUTC:!1,\nstatement_timeout:!1,lock_timeout:!1,idle_in_transaction_session_timeout:!1,query_timeout:!1,\nconnect_timeout:0,keepalives:1,keepalives_idle:0};var Me=Je(),Wa=Me.getTypeParser(\n20,\"text\"),ja=Me.getTypeParser(1016,\"text\");Jt.exports.__defineSetter__(\"parseIn\\\nt8\",function(r){Me.setTypeParser(20,\"text\",r?Me.getTypeParser(23,\"text\"):Wa),Me.\nsetTypeParser(1016,\"text\",r?Me.getTypeParser(1007,\"text\"):ja)})});var et=I((Vh,Di)=>{\"use strict\";p();var Ha=(Qt(),N(qt)),Ga=Xe();function $a(r){var e=r.\nreplace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"');return'\"'+e+'\"'}a($a,\"escapeElement\");\nfunction Mi(r){for(var e=\"{\",t=0;t<r.length;t++)t>0&&(e=e+\",\"),r[t]===null||typeof r[t]>\n\"u\"?e=e+\"NULL\":Array.isArray(r[t])?e=e+Mi(r[t]):r[t]instanceof y?e+=\"\\\\\\\\x\"+r[t].\ntoString(\"hex\"):e+=$a(lt(r[t]));return e=e+\"}\",e}a(Mi,\"arrayString\");var lt=a(function(r,e){\nif(r==null)return null;if(r instanceof y)return r;if(ArrayBuffer.isView(r)){var t=y.\nfrom(r.buffer,r.byteOffset,r.byteLength);return t.length===r.byteLength?t:t.slice(\nr.byteOffset,r.byteOffset+r.byteLength)}return r instanceof Date?Ga.parseInputDatesAsUTC?\nza(r):Ka(r):Array.isArray(r)?Mi(r):typeof r==\"object\"?Va(r,e):r.toString()},\"pre\\\npareValue\");function Va(r,e){if(r&&typeof r.toPostgres==\"function\"){if(e=e||[],e.\nindexOf(r)!==-1)throw new Error('circular reference detected while preparing \"'+\nr+'\" for query');return e.push(r),lt(r.toPostgres(lt),e)}return JSON.stringify(r)}\na(Va,\"prepareObject\");function H(r,e){for(r=\"\"+r;r.length<e;)r=\"0\"+r;return r}a(\nH,\"pad\");function Ka(r){var e=-r.getTimezoneOffset(),t=r.getFullYear(),n=t<1;n&&\n(t=Math.abs(t)+1);var i=H(t,4)+\"-\"+H(r.getMonth()+1,2)+\"-\"+H(r.getDate(),2)+\"T\"+\nH(r.getHours(),2)+\":\"+H(r.getMinutes(),2)+\":\"+H(r.getSeconds(),2)+\".\"+H(r.getMilliseconds(),\n3);return e<0?(i+=\"-\",e*=-1):i+=\"+\",i+=H(Math.floor(e/60),2)+\":\"+H(e%60,2),n&&(i+=\n\" BC\"),i}a(Ka,\"dateToString\");function za(r){var e=r.getUTCFullYear(),t=e<1;t&&(e=\nMath.abs(e)+1);var n=H(e,4)+\"-\"+H(r.getUTCMonth()+1,2)+\"-\"+H(r.getUTCDate(),2)+\"\\\nT\"+H(r.getUTCHours(),2)+\":\"+H(r.getUTCMinutes(),2)+\":\"+H(r.getUTCSeconds(),2)+\".\"+\nH(r.getUTCMilliseconds(),3);return n+=\"+00:00\",t&&(n+=\" BC\"),n}a(za,\"dateToStrin\\\ngUTC\");function Ya(r,e,t){return r=typeof r==\"string\"?{text:r}:r,e&&(typeof e==\"\\\nfunction\"?r.callback=e:r.values=e),t&&(r.callback=t),r}a(Ya,\"normalizeQueryConfi\\\ng\");var Xt=a(function(r){return Ha.createHash(\"md5\").update(r,\"utf-8\").digest(\"h\\\nex\")},\"md5\"),Za=a(function(r,e,t){var n=Xt(e+r),i=Xt(y.concat([y.from(n),t]));return\"\\\nmd5\"+i},\"postgresMd5PasswordHash\");Di.exports={prepareValue:a(function(e){return lt(\ne)},\"prepareValueWrapper\"),normalizeQueryConfig:Ya,postgresMd5PasswordHash:Za,md5:Xt}});var qi=I((Yh,Ni)=>{\"use strict\";p();var er=(Qt(),N(qt));function Ja(r){if(r.indexOf(\n\"SCRAM-SHA-256\")===-1)throw new Error(\"SASL: Only mechanism SCRAM-SHA-256 is cur\\\nrently supported\");let e=er.randomBytes(18).toString(\"base64\");return{mechanism:\"\\\nSCRAM-SHA-256\",clientNonce:e,response:\"n,,n=*,r=\"+e,message:\"SASLInitialResponse\"}}\na(Ja,\"startSession\");function Xa(r,e,t){if(r.message!==\"SASLInitialResponse\")throw new Error(\n\"SASL: Last message was not SASLInitialResponse\");if(typeof e!=\"string\")throw new Error(\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string\");if(typeof t!=\n\"string\")throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a\\\n string\");let n=ru(t);if(n.nonce.startsWith(r.clientNonce)){if(n.nonce.length===\nr.clientNonce.length)throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server n\\\nonce is too short\")}else throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: serv\\\ner nonce does not start with client nonce\");var i=y.from(n.salt,\"base64\"),s=su(e,\ni,n.iteration),o=De(s,\"Client Key\"),u=iu(o),c=\"n=*,r=\"+r.clientNonce,h=\"r=\"+n.nonce+\n\",s=\"+n.salt+\",i=\"+n.iteration,l=\"c=biws,r=\"+n.nonce,d=c+\",\"+h+\",\"+l,b=De(u,d),C=Oi(\no,b),B=C.toString(\"base64\"),W=De(s,\"Server Key\"),X=De(W,d);r.message=\"SASLRespon\\\nse\",r.serverSignature=X.toString(\"base64\"),r.response=l+\",p=\"+B}a(Xa,\"continueSe\\\nssion\");function eu(r,e){if(r.message!==\"SASLResponse\")throw new Error(\"SASL: La\\\nst message was not SASLResponse\");if(typeof e!=\"string\")throw new Error(\"SASL: S\\\nCRAM-SERVER-FINAL-MESSAGE: serverData must be a string\");let{serverSignature:t}=nu(\ne);if(t!==r.serverSignature)throw new Error(\"SASL: SCRAM-SERVER-FINAL-MESSAGE: s\\\nerver signature does not match\")}a(eu,\"finalizeSession\");function tu(r){if(typeof r!=\n\"string\")throw new TypeError(\"SASL: text must be a string\");return r.split(\"\").map(\n(e,t)=>r.charCodeAt(t)).every(e=>e>=33&&e<=43||e>=45&&e<=126)}a(tu,\"isPrintableC\\\nhars\");function ki(r){return/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.\ntest(r)}a(ki,\"isBase64\");function Ui(r){if(typeof r!=\"string\")throw new TypeError(\n\"SASL: attribute pairs text must be a string\");return new Map(r.split(\",\").map(e=>{\nif(!/^.=/.test(e))throw new Error(\"SASL: Invalid attribute pair entry\");let t=e[0],\nn=e.substring(2);return[t,n]}))}a(Ui,\"parseAttributePairs\");function ru(r){let e=Ui(\nr),t=e.get(\"r\");if(t){if(!tu(t))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAG\\\nE: nonce must only contain printable characters\")}else throw new Error(\"SASL: SC\\\nRAM-SERVER-FIRST-MESSAGE: nonce missing\");let n=e.get(\"s\");if(n){if(!ki(n))throw new Error(\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64\")}else throw new Error(\"S\\\nASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing\");let i=e.get(\"i\");if(i){if(!/^[1-9][0-9]*$/.\ntest(i))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration cou\\\nnt\")}else throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing\");\nlet s=parseInt(i,10);return{nonce:t,salt:n,iteration:s}}a(ru,\"parseServerFirstMe\\\nssage\");function nu(r){let t=Ui(r).get(\"v\");if(t){if(!ki(t))throw new Error(\"SAS\\\nL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64\")}else throw new Error(\n\"SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing\");return{serverSignature:t}}\na(nu,\"parseServerFinalMessage\");function Oi(r,e){if(!y.isBuffer(r))throw new TypeError(\n\"first argument must be a Buffer\");if(!y.isBuffer(e))throw new TypeError(\"second\\\n argument must be a Buffer\");if(r.length!==e.length)throw new Error(\"Buffer leng\\\nths must match\");if(r.length===0)throw new Error(\"Buffers cannot be empty\");return y.\nfrom(r.map((t,n)=>r[n]^e[n]))}a(Oi,\"xorBuffers\");function iu(r){return er.createHash(\n\"sha256\").update(r).digest()}a(iu,\"sha256\");function De(r,e){return er.createHmac(\n\"sha256\",r).update(e).digest()}a(De,\"hmacSha256\");function su(r,e,t){for(var n=De(\nr,y.concat([e,y.from([0,0,0,1])])),i=n,s=0;s<t-1;s++)n=De(r,n),i=Oi(i,n);return i}\na(su,\"Hi\");Ni.exports={startSession:Ja,continueSession:Xa,finalizeSession:eu}});var tr={};ie(tr,{join:()=>ou});function ou(...r){return r.join(\"/\")}var rr=z(()=>{\n\"use strict\";p();a(ou,\"join\")});var nr={};ie(nr,{stat:()=>au});function au(r,e){e(new Error(\"No filesystem\"))}var ir=z(\n()=>{\"use strict\";p();a(au,\"stat\")});var sr={};ie(sr,{default:()=>uu});var uu,or=z(()=>{\"use strict\";p();uu={}});var Qi={};ie(Qi,{StringDecoder:()=>ar});var ur,ar,Wi=z(()=>{\"use strict\";p();ur=\nclass ur{constructor(e){_(this,\"td\");this.td=new TextDecoder(e)}write(e){return this.\ntd.decode(e,{stream:!0})}end(e){return this.td.decode(e)}};a(ur,\"StringDecoder\");\nar=ur});var $i=I((ol,Gi)=>{\"use strict\";p();var{Transform:cu}=(or(),N(sr)),{StringDecoder:hu}=(Wi(),N(Qi)),\nbe=Symbol(\"last\"),ft=Symbol(\"decoder\");function lu(r,e,t){let n;if(this.overflow){\nif(n=this[ft].write(r).split(this.matcher),n.length===1)return t();n.shift(),this.\noverflow=!1}else this[be]+=this[ft].write(r),n=this[be].split(this.matcher);this[be]=\nn.pop();for(let i=0;i<n.length;i++)try{Hi(this,this.mapper(n[i]))}catch(s){return t(\ns)}if(this.overflow=this[be].length>this.maxLength,this.overflow&&!this.skipOverflow){\nt(new Error(\"maximum buffer reached\"));return}t()}a(lu,\"transform\");function fu(r){\nif(this[be]+=this[ft].end(),this[be])try{Hi(this,this.mapper(this[be]))}catch(e){\nreturn r(e)}r()}a(fu,\"flush\");function Hi(r,e){e!==void 0&&r.push(e)}a(Hi,\"push\");\nfunction ji(r){return r}a(ji,\"noop\");function pu(r,e,t){switch(r=r||/\\r?\\n/,e=e||\nji,t=t||{},arguments.length){case 1:typeof r==\"function\"?(e=r,r=/\\r?\\n/):typeof r==\n\"object\"&&!(r instanceof RegExp)&&!r[Symbol.split]&&(t=r,r=/\\r?\\n/);break;case 2:\ntypeof r==\"function\"?(t=e,e=r,r=/\\r?\\n/):typeof e==\"object\"&&(t=e,e=ji)}t=Object.\nassign({},t),t.autoDestroy=!0,t.transform=lu,t.flush=fu,t.readableObjectMode=!0;\nlet n=new cu(t);return n[be]=\"\",n[ft]=new hu(\"utf8\"),n.matcher=r,n.mapper=e,n.maxLength=\nt.maxLength,n.skipOverflow=t.skipOverflow||!1,n.overflow=!1,n._destroy=function(i,s){\nthis._writableState.errorEmitted=!1,s(i)},n}a(pu,\"split\");Gi.exports=pu});var zi=I((cl,pe)=>{\"use strict\";p();var Vi=(rr(),N(tr)),du=(or(),N(sr)).Stream,yu=$i(),\nKi=(He(),N(je)),mu=5432,pt=m.platform===\"win32\",tt=m.stderr,gu=56,wu=7,bu=61440,\nSu=32768;function xu(r){return(r&bu)==Su}a(xu,\"isRegFile\");var ke=[\"host\",\"port\",\n\"database\",\"user\",\"password\"],cr=ke.length,vu=ke[cr-1];function hr(){var r=tt instanceof\ndu&&tt.writable===!0;if(r){var e=Array.prototype.slice.call(arguments).concat(`\n`);tt.write(Ki.format.apply(Ki,e))}}a(hr,\"warn\");Object.defineProperty(pe.exports,\n\"isWin\",{get:a(function(){return pt},\"get\"),set:a(function(r){pt=r},\"set\")});pe.\nexports.warnTo=function(r){var e=tt;return tt=r,e};pe.exports.getFileName=function(r){\nvar e=r||m.env,t=e.PGPASSFILE||(pt?Vi.join(e.APPDATA||\"./\",\"postgresql\",\"pgpass.\\\nconf\"):Vi.join(e.HOME||\"./\",\".pgpass\"));return t};pe.exports.usePgPass=function(r,e){\nreturn Object.prototype.hasOwnProperty.call(m.env,\"PGPASSWORD\")?!1:pt?!0:(e=e||\"\\\n<unkn>\",xu(r.mode)?r.mode&(gu|wu)?(hr('WARNING: password file \"%s\" has group or \\\nworld access; permissions should be u=rw (0600) or less',e),!1):!0:(hr('WARNING:\\\n password file \"%s\" is not a plain file',e),!1))};var Eu=pe.exports.match=function(r,e){\nreturn ke.slice(0,-1).reduce(function(t,n,i){return i==1&&Number(r[n]||mu)===Number(\ne[n])?t&&!0:t&&(e[n]===\"*\"||e[n]===r[n])},!0)};pe.exports.getPassword=function(r,e,t){\nvar n,i=e.pipe(yu());function s(c){var h=_u(c);h&&Au(h)&&Eu(r,h)&&(n=h[vu],i.end())}\na(s,\"onLine\");var o=a(function(){e.destroy(),t(n)},\"onEnd\"),u=a(function(c){e.destroy(),\nhr(\"WARNING: error on reading file: %s\",c),t(void 0)},\"onErr\");e.on(\"error\",u),i.\non(\"data\",s).on(\"end\",o).on(\"error\",u)};var _u=pe.exports.parseLine=function(r){\nif(r.length<11||r.match(/^\\s+#/))return null;for(var e=\"\",t=\"\",n=0,i=0,s=0,o={},\nu=!1,c=a(function(l,d,b){var C=r.substring(d,b);Object.hasOwnProperty.call(m.env,\n\"PGPASS_NO_DEESCAPE\")||(C=C.replace(/\\\\([:\\\\])/g,\"$1\")),o[ke[l]]=C},\"addToObj\"),\nh=0;h<r.length-1;h+=1){if(e=r.charAt(h+1),t=r.charAt(h),u=n==cr-1,u){c(n,i);break}\nh>=0&&e==\":\"&&t!==\"\\\\\"&&(c(n,i,h+1),i=h+2,n+=1)}return o=Object.keys(o).length===\ncr?o:null,o},Au=pe.exports.isValidEntry=function(r){for(var e={0:function(o){return o.\nlength>0},1:function(o){return o===\"*\"?!0:(o=Number(o),isFinite(o)&&o>0&&o<9007199254740992&&\nMath.floor(o)===o)},2:function(o){return o.length>0},3:function(o){return o.length>\n0},4:function(o){return o.length>0}},t=0;t<ke.length;t+=1){var n=e[t],i=r[ke[t]]||\n\"\",s=n(i);if(!s)return!1}return!0}});var Zi=I((pl,lr)=>{\"use strict\";p();var fl=(rr(),N(tr)),Yi=(ir(),N(nr)),dt=zi();\nlr.exports=function(r,e){var t=dt.getFileName();Yi.stat(t,function(n,i){if(n||!dt.\nusePgPass(i,t))return e(void 0);var s=Yi.createReadStream(t);dt.getPassword(r,s,\ne)})};lr.exports.warnTo=dt.warnTo});var mt=I((yl,Ji)=>{\"use strict\";p();var Cu=Je();function yt(r){this._types=r||Cu,\nthis.text={},this.binary={}}a(yt,\"TypeOverrides\");yt.prototype.getOverrides=function(r){\nswitch(r){case\"text\":return this.text;case\"binary\":return this.binary;default:return{}}};\nyt.prototype.setTypeParser=function(r,e,t){typeof e==\"function\"&&(t=e,e=\"text\"),\nthis.getOverrides(e)[r]=t};yt.prototype.getTypeParser=function(r,e){return e=e||\n\"text\",this.getOverrides(e)[r]||this._types.getTypeParser(r,e)};Ji.exports=yt});var Xi={};ie(Xi,{default:()=>Tu});var Tu,es=z(()=>{\"use strict\";p();Tu={}});var ts={};ie(ts,{parse:()=>fr});function fr(r,e=!1){let{protocol:t}=new URL(r),n=\"\\\nhttp:\"+r.substring(t.length),{username:i,password:s,host:o,hostname:u,port:c,pathname:h,\nsearch:l,searchParams:d,hash:b}=new URL(n);s=decodeURIComponent(s),i=decodeURIComponent(\ni),h=decodeURIComponent(h);let C=i+\":\"+s,B=e?Object.fromEntries(d.entries()):l;return{\nhref:r,protocol:t,auth:C,username:i,password:s,host:o,hostname:u,port:c,pathname:h,\nsearch:l,query:B,hash:b}}var pr=z(()=>{\"use strict\";p();a(fr,\"parse\")});var ns=I((xl,rs)=>{\"use strict\";p();var Iu=(pr(),N(ts)),dr=(ir(),N(nr));function yr(r){\nif(r.charAt(0)===\"/\"){var t=r.split(\" \");return{host:t[0],database:t[1]}}var e=Iu.\nparse(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(r)?encodeURI(r).replace(/\\%25(\\d\\d)/g,\n\"%$1\"):r,!0),t=e.query;for(var n in t)Array.isArray(t[n])&&(t[n]=t[n][t[n].length-\n1]);var i=(e.auth||\":\").split(\":\");if(t.user=i[0],t.password=i.splice(1).join(\":\"),\nt.port=e.port,e.protocol==\"socket:\")return t.host=decodeURI(e.pathname),t.database=\ne.query.db,t.client_encoding=e.query.encoding,t;t.host||(t.host=e.hostname);var s=e.\npathname;if(!t.host&&s&&/^%2f/i.test(s)){var o=s.split(\"/\");t.host=decodeURIComponent(\no[0]),s=o.splice(1).join(\"/\")}switch(s&&s.charAt(0)===\"/\"&&(s=s.slice(1)||null),\nt.database=s&&decodeURI(s),(t.ssl===\"true\"||t.ssl===\"1\")&&(t.ssl=!0),t.ssl===\"0\"&&\n(t.ssl=!1),(t.sslcert||t.sslkey||t.sslrootcert||t.sslmode)&&(t.ssl={}),t.sslcert&&\n(t.ssl.cert=dr.readFileSync(t.sslcert).toString()),t.sslkey&&(t.ssl.key=dr.readFileSync(\nt.sslkey).toString()),t.sslrootcert&&(t.ssl.ca=dr.readFileSync(t.sslrootcert).toString()),\nt.sslmode){case\"disable\":{t.ssl=!1;break}case\"prefer\":case\"require\":case\"verify-\\\nca\":case\"verify-full\":break;case\"no-verify\":{t.ssl.rejectUnauthorized=!1;break}}\nreturn t}a(yr,\"parse\");rs.exports=yr;yr.parse=yr});var gt=I((_l,os)=>{\"use strict\";p();var Pu=(es(),N(Xi)),ss=Xe(),is=ns().parse,$=a(\nfunction(r,e,t){return t===void 0?t=m.env[\"PG\"+r.toUpperCase()]:t===!1||(t=m.env[t]),\ne[r]||t||ss[r]},\"val\"),Bu=a(function(){switch(m.env.PGSSLMODE){case\"disable\":return!1;case\"\\\nprefer\":case\"require\":case\"verify-ca\":case\"verify-full\":return!0;case\"no-verify\":\nreturn{rejectUnauthorized:!1}}return ss.ssl},\"readSSLConfigFromEnvironment\"),Ue=a(\nfunction(r){return\"'\"+(\"\"+r).replace(/\\\\/g,\"\\\\\\\\\").replace(/'/g,\"\\\\'\")+\"'\"},\"quo\\\nteParamValue\"),ne=a(function(r,e,t){var n=e[t];n!=null&&r.push(t+\"=\"+Ue(n))},\"ad\\\nd\"),gr=class gr{constructor(e){e=typeof e==\"string\"?is(e):e||{},e.connectionString&&\n(e=Object.assign({},e,is(e.connectionString))),this.user=$(\"user\",e),this.database=\n$(\"database\",e),this.database===void 0&&(this.database=this.user),this.port=parseInt(\n$(\"port\",e),10),this.host=$(\"host\",e),Object.defineProperty(this,\"password\",{configurable:!0,\nenumerable:!1,writable:!0,value:$(\"password\",e)}),this.binary=$(\"binary\",e),this.\noptions=$(\"options\",e),this.ssl=typeof e.ssl>\"u\"?Bu():e.ssl,typeof this.ssl==\"st\\\nring\"&&this.ssl===\"true\"&&(this.ssl=!0),this.ssl===\"no-verify\"&&(this.ssl={rejectUnauthorized:!1}),\nthis.ssl&&this.ssl.key&&Object.defineProperty(this.ssl,\"key\",{enumerable:!1}),this.\nclient_encoding=$(\"client_encoding\",e),this.replication=$(\"replication\",e),this.\nisDomainSocket=!(this.host||\"\").indexOf(\"/\"),this.application_name=$(\"applicatio\\\nn_name\",e,\"PGAPPNAME\"),this.fallback_application_name=$(\"fallback_application_na\\\nme\",e,!1),this.statement_timeout=$(\"statement_timeout\",e,!1),this.lock_timeout=$(\n\"lock_timeout\",e,!1),this.idle_in_transaction_session_timeout=$(\"idle_in_transac\\\ntion_session_timeout\",e,!1),this.query_timeout=$(\"query_timeout\",e,!1),e.connectionTimeoutMillis===\nvoid 0?this.connect_timeout=m.env.PGCONNECT_TIMEOUT||0:this.connect_timeout=Math.\nfloor(e.connectionTimeoutMillis/1e3),e.keepAlive===!1?this.keepalives=0:e.keepAlive===\n!0&&(this.keepalives=1),typeof e.keepAliveInitialDelayMillis==\"number\"&&(this.keepalives_idle=\nMath.floor(e.keepAliveInitialDelayMillis/1e3))}getLibpqConnectionString(e){var t=[];\nne(t,this,\"user\"),ne(t,this,\"password\"),ne(t,this,\"port\"),ne(t,this,\"application\\\n_name\"),ne(t,this,\"fallback_application_name\"),ne(t,this,\"connect_timeout\"),ne(t,\nthis,\"options\");var n=typeof this.ssl==\"object\"?this.ssl:this.ssl?{sslmode:this.\nssl}:{};if(ne(t,n,\"sslmode\"),ne(t,n,\"sslca\"),ne(t,n,\"sslkey\"),ne(t,n,\"sslcert\"),\nne(t,n,\"sslrootcert\"),this.database&&t.push(\"dbname=\"+Ue(this.database)),this.replication&&\nt.push(\"replication=\"+Ue(this.replication)),this.host&&t.push(\"host=\"+Ue(this.host)),\nthis.isDomainSocket)return e(null,t.join(\" \"));this.client_encoding&&t.push(\"cli\\\nent_encoding=\"+Ue(this.client_encoding)),Pu.lookup(this.host,function(i,s){return i?\ne(i,null):(t.push(\"hostaddr=\"+Ue(s)),e(null,t.join(\" \")))})}};a(gr,\"ConnectionPa\\\nrameters\");var mr=gr;os.exports=mr});var cs=I((Tl,us)=>{\"use strict\";p();var Lu=Je(),as=/^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/,\nbr=class br{constructor(e,t){this.command=null,this.rowCount=null,this.oid=null,\nthis.rows=[],this.fields=[],this._parsers=void 0,this._types=t,this.RowCtor=null,\nthis.rowAsArray=e===\"array\",this.rowAsArray&&(this.parseRow=this._parseRowAsArray)}addCommandComplete(e){\nvar t;e.text?t=as.exec(e.text):t=as.exec(e.command),t&&(this.command=t[1],t[3]?(this.\noid=parseInt(t[2],10),this.rowCount=parseInt(t[3],10)):t[2]&&(this.rowCount=parseInt(\nt[2],10)))}_parseRowAsArray(e){for(var t=new Array(e.length),n=0,i=e.length;n<i;n++){\nvar s=e[n];s!==null?t[n]=this._parsers[n](s):t[n]=null}return t}parseRow(e){for(var t={},\nn=0,i=e.length;n<i;n++){var s=e[n],o=this.fields[n].name;s!==null?t[o]=this._parsers[n](\ns):t[o]=null}return t}addRow(e){this.rows.push(e)}addFields(e){this.fields=e,this.\nfields.length&&(this._parsers=new Array(e.length));for(var t=0;t<e.length;t++){var n=e[t];\nthis._types?this._parsers[t]=this._types.getTypeParser(n.dataTypeID,n.format||\"t\\\next\"):this._parsers[t]=Lu.getTypeParser(n.dataTypeID,n.format||\"text\")}}};a(br,\"\\\nResult\");var wr=br;us.exports=wr});var ps=I((Bl,fs)=>{\"use strict\";p();var{EventEmitter:Ru}=we(),hs=cs(),ls=et(),xr=class xr extends Ru{constructor(e,t,n){\nsuper(),e=ls.normalizeQueryConfig(e,t,n),this.text=e.text,this.values=e.values,this.\nrows=e.rows,this.types=e.types,this.name=e.name,this.binary=e.binary,this.portal=\ne.portal||\"\",this.callback=e.callback,this._rowMode=e.rowMode,m.domain&&e.callback&&\n(this.callback=m.domain.bind(e.callback)),this._result=new hs(this._rowMode,this.\ntypes),this._results=this._result,this.isPreparedStatement=!1,this._canceledDueToError=\n!1,this._promise=null}requiresPreparation(){return this.name||this.rows?!0:!this.\ntext||!this.values?!1:this.values.length>0}_checkForMultirow(){this._result.command&&\n(Array.isArray(this._results)||(this._results=[this._result]),this._result=new hs(\nthis._rowMode,this.types),this._results.push(this._result))}handleRowDescription(e){\nthis._checkForMultirow(),this._result.addFields(e.fields),this._accumulateRows=this.\ncallback||!this.listeners(\"row\").length}handleDataRow(e){let t;if(!this._canceledDueToError){\ntry{t=this._result.parseRow(e.fields)}catch(n){this._canceledDueToError=n;return}\nthis.emit(\"row\",t,this._result),this._accumulateRows&&this._result.addRow(t)}}handleCommandComplete(e,t){\nthis._checkForMultirow(),this._result.addCommandComplete(e),this.rows&&t.sync()}handleEmptyQuery(e){\nthis.rows&&e.sync()}handleError(e,t){if(this._canceledDueToError&&(e=this._canceledDueToError,\nthis._canceledDueToError=!1),this.callback)return this.callback(e);this.emit(\"er\\\nror\",e)}handleReadyForQuery(e){if(this._canceledDueToError)return this.handleError(\nthis._canceledDueToError,e);if(this.callback)try{this.callback(null,this._results)}catch(t){\nm.nextTick(()=>{throw t})}this.emit(\"end\",this._results)}submit(e){if(typeof this.\ntext!=\"string\"&&typeof this.name!=\"string\")return new Error(\"A query must have e\\\nither text or a name. Supplying neither is unsupported.\");let t=e.parsedStatements[this.\nname];return this.text&&t&&this.text!==t?new Error(`Prepared statements must be \\\nunique - '${this.name}' was used for a different statement`):this.values&&!Array.\nisArray(this.values)?new Error(\"Query values must be an array\"):(this.requiresPreparation()?\nthis.prepare(e):e.query(this.text),null)}hasBeenParsed(e){return this.name&&e.parsedStatements[this.\nname]}handlePortalSuspended(e){this._getRows(e,this.rows)}_getRows(e,t){e.execute(\n{portal:this.portal,rows:t}),t?e.flush():e.sync()}prepare(e){this.isPreparedStatement=\n!0,this.hasBeenParsed(e)||e.parse({text:this.text,name:this.name,types:this.types});\ntry{e.bind({portal:this.portal,statement:this.name,values:this.values,binary:this.\nbinary,valueMapper:ls.prepareValue})}catch(t){this.handleError(t,e);return}e.describe(\n{type:\"P\",name:this.portal||\"\"}),this._getRows(e,this.rows)}handleCopyInResponse(e){\ne.sendCopyFail(\"No source stream defined\")}handleCopyData(e,t){}};a(xr,\"Query\");\nvar Sr=xr;fs.exports=Sr});var ys={};ie(ys,{Socket:()=>_e,isIP:()=>Fu});function Fu(r){return 0}var ds,Mu,E,\n_e,wt=z(()=>{\"use strict\";p();ds=Te(we(),1);a(Fu,\"isIP\");Mu=a(r=>r.replace(/^[^.]+\\./,\n\"api.\"),\"transformHost\"),E=class E extends ds.EventEmitter{constructor(){super(...arguments);\n_(this,\"opts\",{});_(this,\"connecting\",!1);_(this,\"pending\",!0);_(this,\"writable\",\n!0);_(this,\"encrypted\",!1);_(this,\"authorized\",!1);_(this,\"destroyed\",!1);_(this,\n\"ws\",null);_(this,\"writeBuffer\");_(this,\"tlsState\",0);_(this,\"tlsRead\");_(this,\"\\\ntlsWrite\")}static get poolQueryViaFetch(){return E.opts.poolQueryViaFetch??E.defaults.\npoolQueryViaFetch}static set poolQueryViaFetch(t){E.opts.poolQueryViaFetch=t}static get fetchEndpoint(){\nreturn E.opts.fetchEndpoint??E.defaults.fetchEndpoint}static set fetchEndpoint(t){\nE.opts.fetchEndpoint=t}static get fetchConnectionCache(){return!0}static set fetchConnectionCache(t){\nconsole.warn(\"The `fetchConnectionCache` option is deprecated (now always `true`\\\n)\")}static get fetchFunction(){return E.opts.fetchFunction??E.defaults.fetchFunction}static set fetchFunction(t){\nE.opts.fetchFunction=t}static get webSocketConstructor(){return E.opts.webSocketConstructor??\nE.defaults.webSocketConstructor}static set webSocketConstructor(t){E.opts.webSocketConstructor=\nt}get webSocketConstructor(){return this.opts.webSocketConstructor??E.webSocketConstructor}set webSocketConstructor(t){\nthis.opts.webSocketConstructor=t}static get wsProxy(){return E.opts.wsProxy??E.defaults.\nwsProxy}static set wsProxy(t){E.opts.wsProxy=t}get wsProxy(){return this.opts.wsProxy??\nE.wsProxy}set wsProxy(t){this.opts.wsProxy=t}static get coalesceWrites(){return E.\nopts.coalesceWrites??E.defaults.coalesceWrites}static set coalesceWrites(t){E.opts.\ncoalesceWrites=t}get coalesceWrites(){return this.opts.coalesceWrites??E.coalesceWrites}set coalesceWrites(t){\nthis.opts.coalesceWrites=t}static get useSecureWebSocket(){return E.opts.useSecureWebSocket??\nE.defaults.useSecureWebSocket}static set useSecureWebSocket(t){E.opts.useSecureWebSocket=\nt}get useSecureWebSocket(){return this.opts.useSecureWebSocket??E.useSecureWebSocket}set useSecureWebSocket(t){\nthis.opts.useSecureWebSocket=t}static get forceDisablePgSSL(){return E.opts.forceDisablePgSSL??\nE.defaults.forceDisablePgSSL}static set forceDisablePgSSL(t){E.opts.forceDisablePgSSL=\nt}get forceDisablePgSSL(){return this.opts.forceDisablePgSSL??E.forceDisablePgSSL}set forceDisablePgSSL(t){\nthis.opts.forceDisablePgSSL=t}static get disableSNI(){return E.opts.disableSNI??\nE.defaults.disableSNI}static set disableSNI(t){E.opts.disableSNI=t}get disableSNI(){\nreturn this.opts.disableSNI??E.disableSNI}set disableSNI(t){this.opts.disableSNI=\nt}static get pipelineConnect(){return E.opts.pipelineConnect??E.defaults.pipelineConnect}static set pipelineConnect(t){\nE.opts.pipelineConnect=t}get pipelineConnect(){return this.opts.pipelineConnect??\nE.pipelineConnect}set pipelineConnect(t){this.opts.pipelineConnect=t}static get subtls(){\nreturn E.opts.subtls??E.defaults.subtls}static set subtls(t){E.opts.subtls=t}get subtls(){\nreturn this.opts.subtls??E.subtls}set subtls(t){this.opts.subtls=t}static get pipelineTLS(){\nreturn E.opts.pipelineTLS??E.defaults.pipelineTLS}static set pipelineTLS(t){E.opts.\npipelineTLS=t}get pipelineTLS(){return this.opts.pipelineTLS??E.pipelineTLS}set pipelineTLS(t){\nthis.opts.pipelineTLS=t}static get rootCerts(){return E.opts.rootCerts??E.defaults.\nrootCerts}static set rootCerts(t){E.opts.rootCerts=t}get rootCerts(){return this.\nopts.rootCerts??E.rootCerts}set rootCerts(t){this.opts.rootCerts=t}wsProxyAddrForHost(t,n){\nlet i=this.wsProxy;if(i===void 0)throw new Error(\"No WebSocket proxy is configur\\\ned. Please see https://github.com/neondatabase/serverless/blob/main/CONFIG.md#ws\\\nproxy-string--host-string-port-number--string--string\");return typeof i==\"functi\\\non\"?i(t,n):`${i}?address=${t}:${n}`}setNoDelay(){return this}setKeepAlive(){return this}ref(){\nreturn this}unref(){return this}connect(t,n,i){this.connecting=!0,i&&this.once(\"\\\nconnect\",i);let s=a(()=>{this.connecting=!1,this.pending=!1,this.emit(\"connect\"),\nthis.emit(\"ready\")},\"handleWebSocketOpen\"),o=a((c,h=!1)=>{c.binaryType=\"arraybuf\\\nfer\",c.addEventListener(\"error\",l=>{this.emit(\"error\",l),this.emit(\"close\")}),c.\naddEventListener(\"message\",l=>{if(this.tlsState===0){let d=y.from(l.data);this.emit(\n\"data\",d)}}),c.addEventListener(\"close\",()=>{this.emit(\"close\")}),h?s():c.addEventListener(\n\"open\",s)},\"configureWebSocket\"),u;try{u=this.wsProxyAddrForHost(n,typeof t==\"st\\\nring\"?parseInt(t,10):t)}catch(c){this.emit(\"error\",c),this.emit(\"close\");return}\ntry{let h=(this.useSecureWebSocket?\"wss:\":\"ws:\")+\"//\"+u;if(this.webSocketConstructor!==\nvoid 0)this.ws=new this.webSocketConstructor(h),o(this.ws);else try{this.ws=new WebSocket(\nh),o(this.ws)}catch{this.ws=new __unstable_WebSocket(h),o(this.ws)}}catch(c){let l=(this.\nuseSecureWebSocket?\"https:\":\"http:\")+\"//\"+u;fetch(l,{headers:{Upgrade:\"websocket\"}}).\nthen(d=>{if(this.ws=d.webSocket,this.ws==null)throw c;this.ws.accept(),o(this.ws,\n!0)}).catch(d=>{this.emit(\"error\",new Error(`All attempts to open a WebSocket to\\\n connect to the database failed. Please refer to https://github.com/neondatabase\\\n/serverless/blob/main/CONFIG.md#websocketconstructor-typeof-websocket--undefined\\\n. Details: ${d.message}`)),this.emit(\"close\")})}}async startTls(t){if(this.subtls===\nvoid 0)throw new Error(\"For Postgres SSL connections, you must set `neonConfig.s\\\nubtls` to the subtls library. See https://github.com/neondatabase/serverless/blo\\\nb/main/CONFIG.md for more information.\");this.tlsState=1;let n=this.subtls.TrustedCert.\nfromPEM(this.rootCerts),i=new this.subtls.WebSocketReadQueue(this.ws),s=i.read.bind(\ni),o=this.rawWrite.bind(this),[u,c]=await this.subtls.startTls(t,n,s,o,{useSNI:!this.\ndisableSNI,expectPreData:this.pipelineTLS?new Uint8Array([83]):void 0});this.tlsRead=\nu,this.tlsWrite=c,this.tlsState=2,this.encrypted=!0,this.authorized=!0,this.emit(\n\"secureConnection\",this),this.tlsReadLoop()}async tlsReadLoop(){for(;;){let t=await this.\ntlsRead();if(t===void 0)break;{let n=y.from(t);this.emit(\"data\",n)}}}rawWrite(t){\nif(!this.coalesceWrites){this.ws.send(t);return}if(this.writeBuffer===void 0)this.\nwriteBuffer=t,setTimeout(()=>{this.ws.send(this.writeBuffer),this.writeBuffer=void 0},\n0);else{let n=new Uint8Array(this.writeBuffer.length+t.length);n.set(this.writeBuffer),\nn.set(t,this.writeBuffer.length),this.writeBuffer=n}}write(t,n=\"utf8\",i=s=>{}){return t.\nlength===0?(i(),!0):(typeof t==\"string\"&&(t=y.from(t,n)),this.tlsState===0?(this.\nrawWrite(t),i()):this.tlsState===1?this.once(\"secureConnection\",()=>{this.write(\nt,n,i)}):(this.tlsWrite(t),i()),!0)}end(t=y.alloc(0),n=\"utf8\",i=()=>{}){return this.\nwrite(t,n,()=>{this.ws.close(),i()}),this}destroy(){return this.destroyed=!0,this.\nend()}};a(E,\"Socket\"),_(E,\"defaults\",{poolQueryViaFetch:!1,fetchEndpoint:a(t=>\"h\\\nttps://\"+Mu(t)+\"/sql\",\"fetchEndpoint\"),fetchConnectionCache:!0,fetchFunction:void 0,\nwebSocketConstructor:void 0,wsProxy:a(t=>t+\"/v2\",\"wsProxy\"),useSecureWebSocket:!0,\nforceDisablePgSSL:!0,coalesceWrites:!0,pipelineConnect:\"password\",subtls:void 0,\nrootCerts:\"\",pipelineTLS:!1,disableSNI:!1}),_(E,\"opts\",{});_e=E});var Yr=I(T=>{\"use strict\";p();Object.defineProperty(T,\"__esModule\",{value:!0});T.\nNoticeMessage=T.DataRowMessage=T.CommandCompleteMessage=T.ReadyForQueryMessage=T.\nNotificationResponseMessage=T.BackendKeyDataMessage=T.AuthenticationMD5Password=\nT.ParameterStatusMessage=T.ParameterDescriptionMessage=T.RowDescriptionMessage=T.\nField=T.CopyResponse=T.CopyDataMessage=T.DatabaseError=T.copyDone=T.emptyQuery=T.\nreplicationStart=T.portalSuspended=T.noData=T.closeComplete=T.bindComplete=T.parseComplete=\nvoid 0;T.parseComplete={name:\"parseComplete\",length:5};T.bindComplete={name:\"bin\\\ndComplete\",length:5};T.closeComplete={name:\"closeComplete\",length:5};T.noData={name:\"\\\nnoData\",length:5};T.portalSuspended={name:\"portalSuspended\",length:5};T.replicationStart=\n{name:\"replicationStart\",length:4};T.emptyQuery={name:\"emptyQuery\",length:4};T.copyDone=\n{name:\"copyDone\",length:4};var kr=class kr extends Error{constructor(e,t,n){super(\ne),this.length=t,this.name=n}};a(kr,\"DatabaseError\");var vr=kr;T.DatabaseError=vr;\nvar Ur=class Ur{constructor(e,t){this.length=e,this.chunk=t,this.name=\"copyData\"}};\na(Ur,\"CopyDataMessage\");var Er=Ur;T.CopyDataMessage=Er;var Or=class Or{constructor(e,t,n,i){\nthis.length=e,this.name=t,this.binary=n,this.columnTypes=new Array(i)}};a(Or,\"Co\\\npyResponse\");var _r=Or;T.CopyResponse=_r;var Nr=class Nr{constructor(e,t,n,i,s,o,u){\nthis.name=e,this.tableID=t,this.columnID=n,this.dataTypeID=i,this.dataTypeSize=s,\nthis.dataTypeModifier=o,this.format=u}};a(Nr,\"Field\");var Ar=Nr;T.Field=Ar;var qr=class qr{constructor(e,t){\nthis.length=e,this.fieldCount=t,this.name=\"rowDescription\",this.fields=new Array(\nthis.fieldCount)}};a(qr,\"RowDescriptionMessage\");var Cr=qr;T.RowDescriptionMessage=\nCr;var Qr=class Qr{constructor(e,t){this.length=e,this.parameterCount=t,this.name=\n\"parameterDescription\",this.dataTypeIDs=new Array(this.parameterCount)}};a(Qr,\"P\\\narameterDescriptionMessage\");var Tr=Qr;T.ParameterDescriptionMessage=Tr;var Wr=class Wr{constructor(e,t,n){\nthis.length=e,this.parameterName=t,this.parameterValue=n,this.name=\"parameterSta\\\ntus\"}};a(Wr,\"ParameterStatusMessage\");var Ir=Wr;T.ParameterStatusMessage=Ir;var jr=class jr{constructor(e,t){\nthis.length=e,this.salt=t,this.name=\"authenticationMD5Password\"}};a(jr,\"Authenti\\\ncationMD5Password\");var Pr=jr;T.AuthenticationMD5Password=Pr;var Hr=class Hr{constructor(e,t,n){\nthis.length=e,this.processID=t,this.secretKey=n,this.name=\"backendKeyData\"}};a(Hr,\n\"BackendKeyDataMessage\");var Br=Hr;T.BackendKeyDataMessage=Br;var Gr=class Gr{constructor(e,t,n,i){\nthis.length=e,this.processId=t,this.channel=n,this.payload=i,this.name=\"notifica\\\ntion\"}};a(Gr,\"NotificationResponseMessage\");var Lr=Gr;T.NotificationResponseMessage=\nLr;var $r=class $r{constructor(e,t){this.length=e,this.status=t,this.name=\"ready\\\nForQuery\"}};a($r,\"ReadyForQueryMessage\");var Rr=$r;T.ReadyForQueryMessage=Rr;var Vr=class Vr{constructor(e,t){\nthis.length=e,this.text=t,this.name=\"commandComplete\"}};a(Vr,\"CommandCompleteMes\\\nsage\");var Fr=Vr;T.CommandCompleteMessage=Fr;var Kr=class Kr{constructor(e,t){this.\nlength=e,this.fields=t,this.name=\"dataRow\",this.fieldCount=t.length}};a(Kr,\"Data\\\nRowMessage\");var Mr=Kr;T.DataRowMessage=Mr;var zr=class zr{constructor(e,t){this.\nlength=e,this.message=t,this.name=\"notice\"}};a(zr,\"NoticeMessage\");var Dr=zr;T.NoticeMessage=\nDr});var ms=I(bt=>{\"use strict\";p();Object.defineProperty(bt,\"__esModule\",{value:!0});\nbt.Writer=void 0;var Jr=class Jr{constructor(e=256){this.size=e,this.offset=5,this.\nheaderPosition=0,this.buffer=y.allocUnsafe(e)}ensure(e){var t=this.buffer.length-\nthis.offset;if(t<e){var n=this.buffer,i=n.length+(n.length>>1)+e;this.buffer=y.allocUnsafe(\ni),n.copy(this.buffer)}}addInt32(e){return this.ensure(4),this.buffer[this.offset++]=\ne>>>24&255,this.buffer[this.offset++]=e>>>16&255,this.buffer[this.offset++]=e>>>\n8&255,this.buffer[this.offset++]=e>>>0&255,this}addInt16(e){return this.ensure(2),\nthis.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this}addCString(e){\nif(!e)this.ensure(1);else{var t=y.byteLength(e);this.ensure(t+1),this.buffer.write(\ne,this.offset,\"utf-8\"),this.offset+=t}return this.buffer[this.offset++]=0,this}addString(e=\"\"){\nvar t=y.byteLength(e);return this.ensure(t),this.buffer.write(e,this.offset),this.\noffset+=t,this}add(e){return this.ensure(e.length),e.copy(this.buffer,this.offset),\nthis.offset+=e.length,this}join(e){if(e){this.buffer[this.headerPosition]=e;let t=this.\noffset-(this.headerPosition+1);this.buffer.writeInt32BE(t,this.headerPosition+1)}\nreturn this.buffer.slice(e?0:5,this.offset)}flush(e){var t=this.join(e);return this.\noffset=5,this.headerPosition=0,this.buffer=y.allocUnsafe(this.size),t}};a(Jr,\"Wr\\\niter\");var Zr=Jr;bt.Writer=Zr});var ws=I(xt=>{\"use strict\";p();Object.defineProperty(xt,\"__esModule\",{value:!0});\nxt.serialize=void 0;var Xr=ms(),M=new Xr.Writer,Du=a(r=>{M.addInt16(3).addInt16(\n0);for(let n of Object.keys(r))M.addCString(n).addCString(r[n]);M.addCString(\"cl\\\nient_encoding\").addCString(\"UTF8\");var e=M.addCString(\"\").flush(),t=e.length+4;return new Xr.\nWriter().addInt32(t).add(e).flush()},\"startup\"),ku=a(()=>{let r=y.allocUnsafe(8);\nreturn r.writeInt32BE(8,0),r.writeInt32BE(80877103,4),r},\"requestSsl\"),Uu=a(r=>M.\naddCString(r).flush(112),\"password\"),Ou=a(function(r,e){return M.addCString(r).addInt32(\ny.byteLength(e)).addString(e),M.flush(112)},\"sendSASLInitialResponseMessage\"),Nu=a(\nfunction(r){return M.addString(r).flush(112)},\"sendSCRAMClientFinalMessage\"),qu=a(\nr=>M.addCString(r).flush(81),\"query\"),gs=[],Qu=a(r=>{let e=r.name||\"\";e.length>63&&\n(console.error(\"Warning! Postgres only supports 63 characters for query names.\"),\nconsole.error(\"You supplied %s (%s)\",e,e.length),console.error(\"This can cause c\\\nonflicts and silent errors executing queries\"));let t=r.types||gs;for(var n=t.length,\ni=M.addCString(e).addCString(r.text).addInt16(n),s=0;s<n;s++)i.addInt32(t[s]);return M.\nflush(80)},\"parse\"),Oe=new Xr.Writer,Wu=a(function(r,e){for(let t=0;t<r.length;t++){\nlet n=e?e(r[t],t):r[t];n==null?(M.addInt16(0),Oe.addInt32(-1)):n instanceof y?(M.\naddInt16(1),Oe.addInt32(n.length),Oe.add(n)):(M.addInt16(0),Oe.addInt32(y.byteLength(\nn)),Oe.addString(n))}},\"writeValues\"),ju=a((r={})=>{let e=r.portal||\"\",t=r.statement||\n\"\",n=r.binary||!1,i=r.values||gs,s=i.length;return M.addCString(e).addCString(t),\nM.addInt16(s),Wu(i,r.valueMapper),M.addInt16(s),M.add(Oe.flush()),M.addInt16(n?1:\n0),M.flush(66)},\"bind\"),Hu=y.from([69,0,0,0,9,0,0,0,0,0]),Gu=a(r=>{if(!r||!r.portal&&\n!r.rows)return Hu;let e=r.portal||\"\",t=r.rows||0,n=y.byteLength(e),i=4+n+1+4,s=y.\nallocUnsafe(1+i);return s[0]=69,s.writeInt32BE(i,1),s.write(e,5,\"utf-8\"),s[n+5]=\n0,s.writeUInt32BE(t,s.length-4),s},\"execute\"),$u=a((r,e)=>{let t=y.allocUnsafe(16);\nreturn t.writeInt32BE(16,0),t.writeInt16BE(1234,4),t.writeInt16BE(5678,6),t.writeInt32BE(\nr,8),t.writeInt32BE(e,12),t},\"cancel\"),en=a((r,e)=>{let n=4+y.byteLength(e)+1,i=y.\nallocUnsafe(1+n);return i[0]=r,i.writeInt32BE(n,1),i.write(e,5,\"utf-8\"),i[n]=0,i},\n\"cstringMessage\"),Vu=M.addCString(\"P\").flush(68),Ku=M.addCString(\"S\").flush(68),\nzu=a(r=>r.name?en(68,`${r.type}${r.name||\"\"}`):r.type===\"P\"?Vu:Ku,\"describe\"),Yu=a(\nr=>{let e=`${r.type}${r.name||\"\"}`;return en(67,e)},\"close\"),Zu=a(r=>M.add(r).flush(\n100),\"copyData\"),Ju=a(r=>en(102,r),\"copyFail\"),St=a(r=>y.from([r,0,0,0,4]),\"code\\\nOnlyBuffer\"),Xu=St(72),ec=St(83),tc=St(88),rc=St(99),nc={startup:Du,password:Uu,\nrequestSsl:ku,sendSASLInitialResponseMessage:Ou,sendSCRAMClientFinalMessage:Nu,query:qu,\nparse:Qu,bind:ju,execute:Gu,describe:zu,close:Yu,flush:a(()=>Xu,\"flush\"),sync:a(\n()=>ec,\"sync\"),end:a(()=>tc,\"end\"),copyData:Zu,copyDone:a(()=>rc,\"copyDone\"),copyFail:Ju,\ncancel:$u};xt.serialize=nc});var bs=I(vt=>{\"use strict\";p();Object.defineProperty(vt,\"__esModule\",{value:!0});\nvt.BufferReader=void 0;var ic=y.allocUnsafe(0),rn=class rn{constructor(e=0){this.\noffset=e,this.buffer=ic,this.encoding=\"utf-8\"}setBuffer(e,t){this.offset=e,this.\nbuffer=t}int16(){let e=this.buffer.readInt16BE(this.offset);return this.offset+=\n2,e}byte(){let e=this.buffer[this.offset];return this.offset++,e}int32(){let e=this.\nbuffer.readInt32BE(this.offset);return this.offset+=4,e}string(e){let t=this.buffer.\ntoString(this.encoding,this.offset,this.offset+e);return this.offset+=e,t}cstring(){\nlet e=this.offset,t=e;for(;this.buffer[t++]!==0;);return this.offset=t,this.buffer.\ntoString(this.encoding,e,t-1)}bytes(e){let t=this.buffer.slice(this.offset,this.\noffset+e);return this.offset+=e,t}};a(rn,\"BufferReader\");var tn=rn;vt.BufferReader=\ntn});var vs=I(Et=>{\"use strict\";p();Object.defineProperty(Et,\"__esModule\",{value:!0});\nEt.Parser=void 0;var D=Yr(),sc=bs(),nn=1,oc=4,Ss=nn+oc,xs=y.allocUnsafe(0),on=class on{constructor(e){\nif(this.buffer=xs,this.bufferLength=0,this.bufferOffset=0,this.reader=new sc.BufferReader,\ne?.mode===\"binary\")throw new Error(\"Binary mode not supported yet\");this.mode=e?.\nmode||\"text\"}parse(e,t){this.mergeBuffer(e);let n=this.bufferOffset+this.bufferLength,\ni=this.bufferOffset;for(;i+Ss<=n;){let s=this.buffer[i],o=this.buffer.readUInt32BE(\ni+nn),u=nn+o;if(u+i<=n){let c=this.handlePacket(i+Ss,s,o,this.buffer);t(c),i+=u}else\nbreak}i===n?(this.buffer=xs,this.bufferLength=0,this.bufferOffset=0):(this.bufferLength=\nn-i,this.bufferOffset=i)}mergeBuffer(e){if(this.bufferLength>0){let t=this.bufferLength+\ne.byteLength;if(t+this.bufferOffset>this.buffer.byteLength){let i;if(t<=this.buffer.\nbyteLength&&this.bufferOffset>=this.bufferLength)i=this.buffer;else{let s=this.buffer.\nbyteLength*2;for(;t>=s;)s*=2;i=y.allocUnsafe(s)}this.buffer.copy(i,0,this.bufferOffset,\nthis.bufferOffset+this.bufferLength),this.buffer=i,this.bufferOffset=0}e.copy(this.\nbuffer,this.bufferOffset+this.bufferLength),this.bufferLength=t}else this.buffer=\ne,this.bufferOffset=0,this.bufferLength=e.byteLength}handlePacket(e,t,n,i){switch(t){case 50:\nreturn D.bindComplete;case 49:return D.parseComplete;case 51:return D.closeComplete;case 110:\nreturn D.noData;case 115:return D.portalSuspended;case 99:return D.copyDone;case 87:\nreturn D.replicationStart;case 73:return D.emptyQuery;case 68:return this.parseDataRowMessage(\ne,n,i);case 67:return this.parseCommandCompleteMessage(e,n,i);case 90:return this.\nparseReadyForQueryMessage(e,n,i);case 65:return this.parseNotificationMessage(e,\nn,i);case 82:return this.parseAuthenticationResponse(e,n,i);case 83:return this.\nparseParameterStatusMessage(e,n,i);case 75:return this.parseBackendKeyData(e,n,i);case 69:\nreturn this.parseErrorMessage(e,n,i,\"error\");case 78:return this.parseErrorMessage(\ne,n,i,\"notice\");case 84:return this.parseRowDescriptionMessage(e,n,i);case 116:return this.\nparseParameterDescriptionMessage(e,n,i);case 71:return this.parseCopyInMessage(e,\nn,i);case 72:return this.parseCopyOutMessage(e,n,i);case 100:return this.parseCopyData(\ne,n,i);default:return new D.DatabaseError(\"received invalid response: \"+t.toString(\n16),n,\"error\")}}parseReadyForQueryMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.\nreader.string(1);return new D.ReadyForQueryMessage(t,i)}parseCommandCompleteMessage(e,t,n){\nthis.reader.setBuffer(e,n);let i=this.reader.cstring();return new D.CommandCompleteMessage(\nt,i)}parseCopyData(e,t,n){let i=n.slice(e,e+(t-4));return new D.CopyDataMessage(\nt,i)}parseCopyInMessage(e,t,n){return this.parseCopyMessage(e,t,n,\"copyInRespons\\\ne\")}parseCopyOutMessage(e,t,n){return this.parseCopyMessage(e,t,n,\"copyOutRespon\\\nse\")}parseCopyMessage(e,t,n,i){this.reader.setBuffer(e,n);let s=this.reader.byte()!==\n0,o=this.reader.int16(),u=new D.CopyResponse(t,i,s,o);for(let c=0;c<o;c++)u.columnTypes[c]=\nthis.reader.int16();return u}parseNotificationMessage(e,t,n){this.reader.setBuffer(\ne,n);let i=this.reader.int32(),s=this.reader.cstring(),o=this.reader.cstring();return new D.\nNotificationResponseMessage(t,i,s,o)}parseRowDescriptionMessage(e,t,n){this.reader.\nsetBuffer(e,n);let i=this.reader.int16(),s=new D.RowDescriptionMessage(t,i);for(let o=0;o<\ni;o++)s.fields[o]=this.parseField();return s}parseField(){let e=this.reader.cstring(),\nt=this.reader.int32(),n=this.reader.int16(),i=this.reader.int32(),s=this.reader.\nint16(),o=this.reader.int32(),u=this.reader.int16()===0?\"text\":\"binary\";return new D.\nField(e,t,n,i,s,o,u)}parseParameterDescriptionMessage(e,t,n){this.reader.setBuffer(\ne,n);let i=this.reader.int16(),s=new D.ParameterDescriptionMessage(t,i);for(let o=0;o<\ni;o++)s.dataTypeIDs[o]=this.reader.int32();return s}parseDataRowMessage(e,t,n){this.\nreader.setBuffer(e,n);let i=this.reader.int16(),s=new Array(i);for(let o=0;o<i;o++){\nlet u=this.reader.int32();s[o]=u===-1?null:this.reader.string(u)}return new D.DataRowMessage(\nt,s)}parseParameterStatusMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.\ncstring(),s=this.reader.cstring();return new D.ParameterStatusMessage(t,i,s)}parseBackendKeyData(e,t,n){\nthis.reader.setBuffer(e,n);let i=this.reader.int32(),s=this.reader.int32();return new D.\nBackendKeyDataMessage(t,i,s)}parseAuthenticationResponse(e,t,n){this.reader.setBuffer(\ne,n);let i=this.reader.int32(),s={name:\"authenticationOk\",length:t};switch(i){case 0:\nbreak;case 3:s.length===8&&(s.name=\"authenticationCleartextPassword\");break;case 5:\nif(s.length===12){s.name=\"authenticationMD5Password\";let u=this.reader.bytes(4);\nreturn new D.AuthenticationMD5Password(t,u)}break;case 10:s.name=\"authentication\\\nSASL\",s.mechanisms=[];let o;do o=this.reader.cstring(),o&&s.mechanisms.push(o);while(o);\nbreak;case 11:s.name=\"authenticationSASLContinue\",s.data=this.reader.string(t-8);\nbreak;case 12:s.name=\"authenticationSASLFinal\",s.data=this.reader.string(t-8);break;default:\nthrow new Error(\"Unknown authenticationOk message type \"+i)}return s}parseErrorMessage(e,t,n,i){\nthis.reader.setBuffer(e,n);let s={},o=this.reader.string(1);for(;o!==\"\\0\";)s[o]=\nthis.reader.cstring(),o=this.reader.string(1);let u=s.M,c=i===\"notice\"?new D.NoticeMessage(\nt,u):new D.DatabaseError(u,t,i);return c.severity=s.S,c.code=s.C,c.detail=s.D,c.\nhint=s.H,c.position=s.P,c.internalPosition=s.p,c.internalQuery=s.q,c.where=s.W,c.\nschema=s.s,c.table=s.t,c.column=s.c,c.dataType=s.d,c.constraint=s.n,c.file=s.F,c.\nline=s.L,c.routine=s.R,c}};a(on,\"Parser\");var sn=on;Et.Parser=sn});var an=I(Se=>{\"use strict\";p();Object.defineProperty(Se,\"__esModule\",{value:!0});\nSe.DatabaseError=Se.serialize=Se.parse=void 0;var ac=Yr();Object.defineProperty(\nSe,\"DatabaseError\",{enumerable:!0,get:a(function(){return ac.DatabaseError},\"get\")});\nvar uc=ws();Object.defineProperty(Se,\"serialize\",{enumerable:!0,get:a(function(){\nreturn uc.serialize},\"get\")});var cc=vs();function hc(r,e){let t=new cc.Parser;return r.\non(\"data\",n=>t.parse(n,e)),new Promise(n=>r.on(\"end\",()=>n()))}a(hc,\"parse\");Se.\nparse=hc});var Es={};ie(Es,{connect:()=>lc});function lc({socket:r,servername:e}){return r.\nstartTls(e),r}var _s=z(()=>{\"use strict\";p();a(lc,\"connect\")});var hn=I((tf,Ts)=>{\"use strict\";p();var As=(wt(),N(ys)),fc=we().EventEmitter,{parse:pc,\nserialize:Q}=an(),Cs=Q.flush(),dc=Q.sync(),yc=Q.end(),cn=class cn extends fc{constructor(e){\nsuper(),e=e||{},this.stream=e.stream||new As.Socket,this._keepAlive=e.keepAlive,\nthis._keepAliveInitialDelayMillis=e.keepAliveInitialDelayMillis,this.lastBuffer=\n!1,this.parsedStatements={},this.ssl=e.ssl||!1,this._ending=!1,this._emitMessage=\n!1;var t=this;this.on(\"newListener\",function(n){n===\"message\"&&(t._emitMessage=!0)})}connect(e,t){\nvar n=this;this._connecting=!0,this.stream.setNoDelay(!0),this.stream.connect(e,\nt),this.stream.once(\"connect\",function(){n._keepAlive&&n.stream.setKeepAlive(!0,\nn._keepAliveInitialDelayMillis),n.emit(\"connect\")});let i=a(function(s){n._ending&&\n(s.code===\"ECONNRESET\"||s.code===\"EPIPE\")||n.emit(\"error\",s)},\"reportStreamError\");\nif(this.stream.on(\"error\",i),this.stream.on(\"close\",function(){n.emit(\"end\")}),!this.\nssl)return this.attachListeners(this.stream);this.stream.once(\"data\",function(s){\nvar o=s.toString(\"utf8\");switch(o){case\"S\":break;case\"N\":return n.stream.end(),n.\nemit(\"error\",new Error(\"The server does not support SSL connections\"));default:return n.\nstream.end(),n.emit(\"error\",new Error(\"There was an error establishing an SSL co\\\nnnection\"))}var u=(_s(),N(Es));let c={socket:n.stream};n.ssl!==!0&&(Object.assign(\nc,n.ssl),\"key\"in n.ssl&&(c.key=n.ssl.key)),As.isIP(t)===0&&(c.servername=t);try{\nn.stream=u.connect(c)}catch(h){return n.emit(\"error\",h)}n.attachListeners(n.stream),\nn.stream.on(\"error\",i),n.emit(\"sslconnect\")})}attachListeners(e){e.on(\"end\",()=>{\nthis.emit(\"end\")}),pc(e,t=>{var n=t.name===\"error\"?\"errorMessage\":t.name;this._emitMessage&&\nthis.emit(\"message\",t),this.emit(n,t)})}requestSsl(){this.stream.write(Q.requestSsl())}startup(e){\nthis.stream.write(Q.startup(e))}cancel(e,t){this._send(Q.cancel(e,t))}password(e){\nthis._send(Q.password(e))}sendSASLInitialResponseMessage(e,t){this._send(Q.sendSASLInitialResponseMessage(\ne,t))}sendSCRAMClientFinalMessage(e){this._send(Q.sendSCRAMClientFinalMessage(e))}_send(e){\nreturn this.stream.writable?this.stream.write(e):!1}query(e){this._send(Q.query(\ne))}parse(e){this._send(Q.parse(e))}bind(e){this._send(Q.bind(e))}execute(e){this.\n_send(Q.execute(e))}flush(){this.stream.writable&&this.stream.write(Cs)}sync(){this.\n_ending=!0,this._send(Cs),this._send(dc)}ref(){this.stream.ref()}unref(){this.stream.\nunref()}end(){if(this._ending=!0,!this._connecting||!this.stream.writable){this.\nstream.end();return}return this.stream.write(yc,()=>{this.stream.end()})}close(e){\nthis._send(Q.close(e))}describe(e){this._send(Q.describe(e))}sendCopyFromChunk(e){\nthis._send(Q.copyData(e))}endCopyFrom(){this._send(Q.copyDone())}sendCopyFail(e){\nthis._send(Q.copyFail(e))}};a(cn,\"Connection\");var un=cn;Ts.exports=un});var Bs=I((of,Ps)=>{\"use strict\";p();var mc=we().EventEmitter,sf=(He(),N(je)),gc=et(),\nln=qi(),wc=Zi(),bc=mt(),Sc=gt(),Is=ps(),xc=Xe(),vc=hn(),fn=class fn extends mc{constructor(e){\nsuper(),this.connectionParameters=new Sc(e),this.user=this.connectionParameters.\nuser,this.database=this.connectionParameters.database,this.port=this.connectionParameters.\nport,this.host=this.connectionParameters.host,Object.defineProperty(this,\"passwo\\\nrd\",{configurable:!0,enumerable:!1,writable:!0,value:this.connectionParameters.password}),\nthis.replication=this.connectionParameters.replication;var t=e||{};this._Promise=\nt.Promise||S.Promise,this._types=new bc(t.types),this._ending=!1,this._connecting=\n!1,this._connected=!1,this._connectionError=!1,this._queryable=!0,this.connection=\nt.connection||new vc({stream:t.stream,ssl:this.connectionParameters.ssl,keepAlive:t.\nkeepAlive||!1,keepAliveInitialDelayMillis:t.keepAliveInitialDelayMillis||0,encoding:this.\nconnectionParameters.client_encoding||\"utf8\"}),this.queryQueue=[],this.binary=t.\nbinary||xc.binary,this.processID=null,this.secretKey=null,this.ssl=this.connectionParameters.\nssl||!1,this.ssl&&this.ssl.key&&Object.defineProperty(this.ssl,\"key\",{enumerable:!1}),\nthis._connectionTimeoutMillis=t.connectionTimeoutMillis||0}_errorAllQueries(e){let t=a(\nn=>{m.nextTick(()=>{n.handleError(e,this.connection)})},\"enqueueError\");this.activeQuery&&\n(t(this.activeQuery),this.activeQuery=null),this.queryQueue.forEach(t),this.queryQueue.\nlength=0}_connect(e){var t=this,n=this.connection;if(this._connectionCallback=e,\nthis._connecting||this._connected){let i=new Error(\"Client has already been conn\\\nected. You cannot reuse a client.\");m.nextTick(()=>{e(i)});return}this._connecting=\n!0,this.connectionTimeoutHandle,this._connectionTimeoutMillis>0&&(this.connectionTimeoutHandle=\nsetTimeout(()=>{n._ending=!0,n.stream.destroy(new Error(\"timeout expired\"))},this.\n_connectionTimeoutMillis)),this.host&&this.host.indexOf(\"/\")===0?n.connect(this.\nhost+\"/.s.PGSQL.\"+this.port):n.connect(this.port,this.host),n.on(\"connect\",function(){\nt.ssl?n.requestSsl():n.startup(t.getStartupConf())}),n.on(\"sslconnect\",function(){\nn.startup(t.getStartupConf())}),this._attachListeners(n),n.once(\"end\",()=>{let i=this.\n_ending?new Error(\"Connection terminated\"):new Error(\"Connection terminated unex\\\npectedly\");clearTimeout(this.connectionTimeoutHandle),this._errorAllQueries(i),this.\n_ending||(this._connecting&&!this._connectionError?this._connectionCallback?this.\n_connectionCallback(i):this._handleErrorEvent(i):this._connectionError||this._handleErrorEvent(\ni)),m.nextTick(()=>{this.emit(\"end\")})})}connect(e){if(e){this._connect(e);return}\nreturn new this._Promise((t,n)=>{this._connect(i=>{i?n(i):t()})})}_attachListeners(e){\ne.on(\"authenticationCleartextPassword\",this._handleAuthCleartextPassword.bind(this)),\ne.on(\"authenticationMD5Password\",this._handleAuthMD5Password.bind(this)),e.on(\"a\\\nuthenticationSASL\",this._handleAuthSASL.bind(this)),e.on(\"authenticationSASLCont\\\ninue\",this._handleAuthSASLContinue.bind(this)),e.on(\"authenticationSASLFinal\",this.\n_handleAuthSASLFinal.bind(this)),e.on(\"backendKeyData\",this._handleBackendKeyData.\nbind(this)),e.on(\"error\",this._handleErrorEvent.bind(this)),e.on(\"errorMessage\",\nthis._handleErrorMessage.bind(this)),e.on(\"readyForQuery\",this._handleReadyForQuery.\nbind(this)),e.on(\"notice\",this._handleNotice.bind(this)),e.on(\"rowDescription\",this.\n_handleRowDescription.bind(this)),e.on(\"dataRow\",this._handleDataRow.bind(this)),\ne.on(\"portalSuspended\",this._handlePortalSuspended.bind(this)),e.on(\"emptyQuery\",\nthis._handleEmptyQuery.bind(this)),e.on(\"commandComplete\",this._handleCommandComplete.\nbind(this)),e.on(\"parseComplete\",this._handleParseComplete.bind(this)),e.on(\"cop\\\nyInResponse\",this._handleCopyInResponse.bind(this)),e.on(\"copyData\",this._handleCopyData.\nbind(this)),e.on(\"notification\",this._handleNotification.bind(this))}_checkPgPass(e){\nlet t=this.connection;typeof this.password==\"function\"?this._Promise.resolve().then(\n()=>this.password()).then(n=>{if(n!==void 0){if(typeof n!=\"string\"){t.emit(\"erro\\\nr\",new TypeError(\"Password must be a string\"));return}this.connectionParameters.\npassword=this.password=n}else this.connectionParameters.password=this.password=null;\ne()}).catch(n=>{t.emit(\"error\",n)}):this.password!==null?e():wc(this.connectionParameters,\nn=>{n!==void 0&&(this.connectionParameters.password=this.password=n),e()})}_handleAuthCleartextPassword(e){\nthis._checkPgPass(()=>{this.connection.password(this.password)})}_handleAuthMD5Password(e){\nthis._checkPgPass(()=>{let t=gc.postgresMd5PasswordHash(this.user,this.password,\ne.salt);this.connection.password(t)})}_handleAuthSASL(e){this._checkPgPass(()=>{\nthis.saslSession=ln.startSession(e.mechanisms),this.connection.sendSASLInitialResponseMessage(\nthis.saslSession.mechanism,this.saslSession.response)})}_handleAuthSASLContinue(e){\nln.continueSession(this.saslSession,this.password,e.data),this.connection.sendSCRAMClientFinalMessage(\nthis.saslSession.response)}_handleAuthSASLFinal(e){ln.finalizeSession(this.saslSession,\ne.data),this.saslSession=null}_handleBackendKeyData(e){this.processID=e.processID,\nthis.secretKey=e.secretKey}_handleReadyForQuery(e){this._connecting&&(this._connecting=\n!1,this._connected=!0,clearTimeout(this.connectionTimeoutHandle),this._connectionCallback&&\n(this._connectionCallback(null,this),this._connectionCallback=null),this.emit(\"c\\\nonnect\"));let{activeQuery:t}=this;this.activeQuery=null,this.readyForQuery=!0,t&&\nt.handleReadyForQuery(this.connection),this._pulseQueryQueue()}_handleErrorWhileConnecting(e){\nif(!this._connectionError){if(this._connectionError=!0,clearTimeout(this.connectionTimeoutHandle),\nthis._connectionCallback)return this._connectionCallback(e);this.emit(\"error\",e)}}_handleErrorEvent(e){\nif(this._connecting)return this._handleErrorWhileConnecting(e);this._queryable=!1,\nthis._errorAllQueries(e),this.emit(\"error\",e)}_handleErrorMessage(e){if(this._connecting)\nreturn this._handleErrorWhileConnecting(e);let t=this.activeQuery;if(!t){this._handleErrorEvent(\ne);return}this.activeQuery=null,t.handleError(e,this.connection)}_handleRowDescription(e){\nthis.activeQuery.handleRowDescription(e)}_handleDataRow(e){this.activeQuery.handleDataRow(\ne)}_handlePortalSuspended(e){this.activeQuery.handlePortalSuspended(this.connection)}_handleEmptyQuery(e){\nthis.activeQuery.handleEmptyQuery(this.connection)}_handleCommandComplete(e){this.\nactiveQuery.handleCommandComplete(e,this.connection)}_handleParseComplete(e){this.\nactiveQuery.name&&(this.connection.parsedStatements[this.activeQuery.name]=this.\nactiveQuery.text)}_handleCopyInResponse(e){this.activeQuery.handleCopyInResponse(\nthis.connection)}_handleCopyData(e){this.activeQuery.handleCopyData(e,this.connection)}_handleNotification(e){\nthis.emit(\"notification\",e)}_handleNotice(e){this.emit(\"notice\",e)}getStartupConf(){\nvar e=this.connectionParameters,t={user:e.user,database:e.database},n=e.application_name||\ne.fallback_application_name;return n&&(t.application_name=n),e.replication&&(t.replication=\n\"\"+e.replication),e.statement_timeout&&(t.statement_timeout=String(parseInt(e.statement_timeout,\n10))),e.lock_timeout&&(t.lock_timeout=String(parseInt(e.lock_timeout,10))),e.idle_in_transaction_session_timeout&&\n(t.idle_in_transaction_session_timeout=String(parseInt(e.idle_in_transaction_session_timeout,\n10))),e.options&&(t.options=e.options),t}cancel(e,t){if(e.activeQuery===t){var n=this.\nconnection;this.host&&this.host.indexOf(\"/\")===0?n.connect(this.host+\"/.s.PGSQL.\"+\nthis.port):n.connect(this.port,this.host),n.on(\"connect\",function(){n.cancel(e.processID,\ne.secretKey)})}else e.queryQueue.indexOf(t)!==-1&&e.queryQueue.splice(e.queryQueue.\nindexOf(t),1)}setTypeParser(e,t,n){return this._types.setTypeParser(e,t,n)}getTypeParser(e,t){\nreturn this._types.getTypeParser(e,t)}escapeIdentifier(e){return'\"'+e.replace(/\"/g,\n'\"\"')+'\"'}escapeLiteral(e){for(var t=!1,n=\"'\",i=0;i<e.length;i++){var s=e[i];s===\n\"'\"?n+=s+s:s===\"\\\\\"?(n+=s+s,t=!0):n+=s}return n+=\"'\",t===!0&&(n=\" E\"+n),n}_pulseQueryQueue(){\nif(this.readyForQuery===!0)if(this.activeQuery=this.queryQueue.shift(),this.activeQuery){\nthis.readyForQuery=!1,this.hasExecuted=!0;let e=this.activeQuery.submit(this.connection);\ne&&m.nextTick(()=>{this.activeQuery.handleError(e,this.connection),this.readyForQuery=\n!0,this._pulseQueryQueue()})}else this.hasExecuted&&(this.activeQuery=null,this.\nemit(\"drain\"))}query(e,t,n){var i,s,o,u,c;if(e==null)throw new TypeError(\"Client\\\n was passed a null or undefined query\");return typeof e.submit==\"function\"?(o=e.\nquery_timeout||this.connectionParameters.query_timeout,s=i=e,typeof t==\"function\"&&\n(i.callback=i.callback||t)):(o=this.connectionParameters.query_timeout,i=new Is(\ne,t,n),i.callback||(s=new this._Promise((h,l)=>{i.callback=(d,b)=>d?l(d):h(b)}))),\no&&(c=i.callback,u=setTimeout(()=>{var h=new Error(\"Query read timeout\");m.nextTick(\n()=>{i.handleError(h,this.connection)}),c(h),i.callback=()=>{};var l=this.queryQueue.\nindexOf(i);l>-1&&this.queryQueue.splice(l,1),this._pulseQueryQueue()},o),i.callback=\n(h,l)=>{clearTimeout(u),c(h,l)}),this.binary&&!i.binary&&(i.binary=!0),i._result&&\n!i._result._types&&(i._result._types=this._types),this._queryable?this._ending?(m.\nnextTick(()=>{i.handleError(new Error(\"Client was closed and is not queryable\"),\nthis.connection)}),s):(this.queryQueue.push(i),this._pulseQueryQueue(),s):(m.nextTick(\n()=>{i.handleError(new Error(\"Client has encountered a connection error and is n\\\not queryable\"),this.connection)}),s)}ref(){this.connection.ref()}unref(){this.connection.\nunref()}end(e){if(this._ending=!0,!this.connection._connecting)if(e)e();else return this.\n_Promise.resolve();if(this.activeQuery||!this._queryable?this.connection.stream.\ndestroy():this.connection.end(),e)this.connection.once(\"end\",e);else return new this.\n_Promise(t=>{this.connection.once(\"end\",t)})}};a(fn,\"Client\");var _t=fn;_t.Query=\nIs;Ps.exports=_t});var Ms=I((cf,Fs)=>{\"use strict\";p();var Ec=we().EventEmitter,Ls=a(function(){},\"\\\nNOOP\"),Rs=a((r,e)=>{let t=r.findIndex(e);return t===-1?void 0:r.splice(t,1)[0]},\n\"removeWhere\"),yn=class yn{constructor(e,t,n){this.client=e,this.idleListener=t,\nthis.timeoutId=n}};a(yn,\"IdleItem\");var pn=yn,mn=class mn{constructor(e){this.callback=\ne}};a(mn,\"PendingItem\");var Ne=mn;function _c(){throw new Error(\"Release called \\\non client which has already been released to the pool.\")}a(_c,\"throwOnDoubleRele\\\nase\");function At(r,e){if(e)return{callback:e,result:void 0};let t,n,i=a(function(o,u){\no?t(o):n(u)},\"cb\"),s=new r(function(o,u){n=o,t=u}).catch(o=>{throw Error.captureStackTrace(\no),o});return{callback:i,result:s}}a(At,\"promisify\");function Ac(r,e){return a(function t(n){\nn.client=e,e.removeListener(\"error\",t),e.on(\"error\",()=>{r.log(\"additional clien\\\nt error after disconnection due to error\",n)}),r._remove(e),r.emit(\"error\",n,e)},\n\"idleListener\")}a(Ac,\"makeIdleListener\");var gn=class gn extends Ec{constructor(e,t){\nsuper(),this.options=Object.assign({},e),e!=null&&\"password\"in e&&Object.defineProperty(\nthis.options,\"password\",{configurable:!0,enumerable:!1,writable:!0,value:e.password}),\ne!=null&&e.ssl&&e.ssl.key&&Object.defineProperty(this.options.ssl,\"key\",{enumerable:!1}),\nthis.options.max=this.options.max||this.options.poolSize||10,this.options.maxUses=\nthis.options.maxUses||1/0,this.options.allowExitOnIdle=this.options.allowExitOnIdle||\n!1,this.options.maxLifetimeSeconds=this.options.maxLifetimeSeconds||0,this.log=this.\noptions.log||function(){},this.Client=this.options.Client||t||Ct().Client,this.Promise=\nthis.options.Promise||S.Promise,typeof this.options.idleTimeoutMillis>\"u\"&&(this.\noptions.idleTimeoutMillis=1e4),this._clients=[],this._idle=[],this._expired=new WeakSet,\nthis._pendingQueue=[],this._endCallback=void 0,this.ending=!1,this.ended=!1}_isFull(){\nreturn this._clients.length>=this.options.max}_pulseQueue(){if(this.log(\"pulse q\\\nueue\"),this.ended){this.log(\"pulse queue ended\");return}if(this.ending){this.log(\n\"pulse queue on ending\"),this._idle.length&&this._idle.slice().map(t=>{this._remove(\nt.client)}),this._clients.length||(this.ended=!0,this._endCallback());return}if(!this.\n_pendingQueue.length){this.log(\"no queued requests\");return}if(!this._idle.length&&\nthis._isFull())return;let e=this._pendingQueue.shift();if(this._idle.length){let t=this.\n_idle.pop();clearTimeout(t.timeoutId);let n=t.client;n.ref&&n.ref();let i=t.idleListener;\nreturn this._acquireClient(n,e,i,!1)}if(!this._isFull())return this.newClient(e);\nthrow new Error(\"unexpected condition\")}_remove(e){let t=Rs(this._idle,n=>n.client===\ne);t!==void 0&&clearTimeout(t.timeoutId),this._clients=this._clients.filter(n=>n!==\ne),e.end(),this.emit(\"remove\",e)}connect(e){if(this.ending){let i=new Error(\"Can\\\nnot use a pool after calling end on the pool\");return e?e(i):this.Promise.reject(\ni)}let t=At(this.Promise,e),n=t.result;if(this._isFull()||this._idle.length){if(this.\n_idle.length&&m.nextTick(()=>this._pulseQueue()),!this.options.connectionTimeoutMillis)\nreturn this._pendingQueue.push(new Ne(t.callback)),n;let i=a((u,c,h)=>{clearTimeout(\no),t.callback(u,c,h)},\"queueCallback\"),s=new Ne(i),o=setTimeout(()=>{Rs(this._pendingQueue,\nu=>u.callback===i),s.timedOut=!0,t.callback(new Error(\"timeout exceeded when try\\\ning to connect\"))},this.options.connectionTimeoutMillis);return this._pendingQueue.\npush(s),n}return this.newClient(new Ne(t.callback)),n}newClient(e){let t=new this.\nClient(this.options);this._clients.push(t);let n=Ac(this,t);this.log(\"checking c\\\nlient timeout\");let i,s=!1;this.options.connectionTimeoutMillis&&(i=setTimeout(()=>{\nthis.log(\"ending client due to timeout\"),s=!0,t.connection?t.connection.stream.destroy():\nt.end()},this.options.connectionTimeoutMillis)),this.log(\"connecting new client\"),\nt.connect(o=>{if(i&&clearTimeout(i),t.on(\"error\",n),o)this.log(\"client failed to\\\n connect\",o),this._clients=this._clients.filter(u=>u!==t),s&&(o.message=\"Connect\\\nion terminated due to connection timeout\"),this._pulseQueue(),e.timedOut||e.callback(\no,void 0,Ls);else{if(this.log(\"new client connected\"),this.options.maxLifetimeSeconds!==\n0){let u=setTimeout(()=>{this.log(\"ending client due to expired lifetime\"),this.\n_expired.add(t),this._idle.findIndex(h=>h.client===t)!==-1&&this._acquireClient(\nt,new Ne((h,l,d)=>d()),n,!1)},this.options.maxLifetimeSeconds*1e3);u.unref(),t.once(\n\"end\",()=>clearTimeout(u))}return this._acquireClient(t,e,n,!0)}})}_acquireClient(e,t,n,i){\ni&&this.emit(\"connect\",e),this.emit(\"acquire\",e),e.release=this._releaseOnce(e,n),\ne.removeListener(\"error\",n),t.timedOut?i&&this.options.verify?this.options.verify(\ne,e.release):e.release():i&&this.options.verify?this.options.verify(e,s=>{if(s)return e.\nrelease(s),t.callback(s,void 0,Ls);t.callback(void 0,e,e.release)}):t.callback(void 0,\ne,e.release)}_releaseOnce(e,t){let n=!1;return i=>{n&&_c(),n=!0,this._release(e,\nt,i)}}_release(e,t,n){if(e.on(\"error\",t),e._poolUseCount=(e._poolUseCount||0)+1,\nthis.emit(\"release\",n,e),n||this.ending||!e._queryable||e._ending||e._poolUseCount>=\nthis.options.maxUses){e._poolUseCount>=this.options.maxUses&&this.log(\"remove ex\\\npended client\"),this._remove(e),this._pulseQueue();return}if(this._expired.has(e)){\nthis.log(\"remove expired client\"),this._expired.delete(e),this._remove(e),this._pulseQueue();\nreturn}let s;this.options.idleTimeoutMillis&&(s=setTimeout(()=>{this.log(\"remove\\\n idle client\"),this._remove(e)},this.options.idleTimeoutMillis),this.options.allowExitOnIdle&&\ns.unref()),this.options.allowExitOnIdle&&e.unref(),this._idle.push(new pn(e,t,s)),\nthis._pulseQueue()}query(e,t,n){if(typeof e==\"function\"){let s=At(this.Promise,e);\nreturn x(function(){return s.callback(new Error(\"Passing a function as the first\\\n parameter to pool.query is not supported\"))}),s.result}typeof t==\"function\"&&(n=\nt,t=void 0);let i=At(this.Promise,n);return n=i.callback,this.connect((s,o)=>{if(s)\nreturn n(s);let u=!1,c=a(h=>{u||(u=!0,o.release(h),n(h))},\"onError\");o.once(\"err\\\nor\",c),this.log(\"dispatching query\");try{o.query(e,t,(h,l)=>{if(this.log(\"query \\\ndispatched\"),o.removeListener(\"error\",c),!u)return u=!0,o.release(h),h?n(h):n(void 0,\nl)})}catch(h){return o.release(h),n(h)}}),i.result}end(e){if(this.log(\"ending\"),\nthis.ending){let n=new Error(\"Called end on pool more than once\");return e?e(n):\nthis.Promise.reject(n)}this.ending=!0;let t=At(this.Promise,e);return this._endCallback=\nt.callback,this._pulseQueue(),t.result}get waitingCount(){return this._pendingQueue.\nlength}get idleCount(){return this._idle.length}get expiredCount(){return this._clients.\nreduce((e,t)=>e+(this._expired.has(t)?1:0),0)}get totalCount(){return this._clients.\nlength}};a(gn,\"Pool\");var dn=gn;Fs.exports=dn});var Ds={};ie(Ds,{default:()=>Cc});var Cc,ks=z(()=>{\"use strict\";p();Cc={}});var Us=I((pf,Tc)=>{Tc.exports={name:\"pg\",version:\"8.8.0\",description:\"PostgreSQL\\\n client - pure javascript & libpq with the same API\",keywords:[\"database\",\"libpq\",\n\"pg\",\"postgre\",\"postgres\",\"postgresql\",\"rdbms\"],homepage:\"https://github.com/bri\\\nanc/node-postgres\",repository:{type:\"git\",url:\"git://github.com/brianc/node-post\\\ngres.git\",directory:\"packages/pg\"},author:\"Brian Carlson <brian.m.carlson@gmail.\\\ncom>\",main:\"./lib\",dependencies:{\"buffer-writer\":\"2.0.0\",\"packet-reader\":\"1.0.0\",\n\"pg-connection-string\":\"^2.5.0\",\"pg-pool\":\"^3.5.2\",\"pg-protocol\":\"^1.5.0\",\"pg-ty\\\npes\":\"^2.1.0\",pgpass:\"1.x\"},devDependencies:{async:\"2.6.4\",bluebird:\"3.5.2\",co:\"\\\n4.6.0\",\"pg-copy-streams\":\"0.3.0\"},peerDependencies:{\"pg-native\":\">=3.0.1\"},peerDependenciesMeta:{\n\"pg-native\":{optional:!0}},scripts:{test:\"make test-all\"},files:[\"lib\",\"SPONSORS\\\n.md\"],license:\"MIT\",engines:{node:\">= 8.0.0\"},gitHead:\"c99fb2c127ddf8d712500db2c\\\n7b9a5491a178655\"}});var qs=I((df,Ns)=>{\"use strict\";p();var Os=we().EventEmitter,Ic=(He(),N(je)),wn=et(),\nqe=Ns.exports=function(r,e,t){Os.call(this),r=wn.normalizeQueryConfig(r,e,t),this.\ntext=r.text,this.values=r.values,this.name=r.name,this.callback=r.callback,this.\nstate=\"new\",this._arrayMode=r.rowMode===\"array\",this._emitRowEvents=!1,this.on(\"\\\nnewListener\",function(n){n===\"row\"&&(this._emitRowEvents=!0)}.bind(this))};Ic.inherits(\nqe,Os);var Pc={sqlState:\"code\",statementPosition:\"position\",messagePrimary:\"mess\\\nage\",context:\"where\",schemaName:\"schema\",tableName:\"table\",columnName:\"column\",dataTypeName:\"\\\ndataType\",constraintName:\"constraint\",sourceFile:\"file\",sourceLine:\"line\",sourceFunction:\"\\\nroutine\"};qe.prototype.handleError=function(r){var e=this.native.pq.resultErrorFields();\nif(e)for(var t in e){var n=Pc[t]||t;r[n]=e[t]}this.callback?this.callback(r):this.\nemit(\"error\",r),this.state=\"error\"};qe.prototype.then=function(r,e){return this.\n_getPromise().then(r,e)};qe.prototype.catch=function(r){return this._getPromise().\ncatch(r)};qe.prototype._getPromise=function(){return this._promise?this._promise:\n(this._promise=new Promise(function(r,e){this._once(\"end\",r),this._once(\"error\",\ne)}.bind(this)),this._promise)};qe.prototype.submit=function(r){this.state=\"runn\\\ning\";var e=this;this.native=r.native,r.native.arrayMode=this._arrayMode;var t=a(\nfunction(s,o,u){if(r.native.arrayMode=!1,x(function(){e.emit(\"_done\")}),s)return e.\nhandleError(s);e._emitRowEvents&&(u.length>1?o.forEach((c,h)=>{c.forEach(l=>{e.emit(\n\"row\",l,u[h])})}):o.forEach(function(c){e.emit(\"row\",c,u)})),e.state=\"end\",e.emit(\n\"end\",u),e.callback&&e.callback(null,u)},\"after\");if(m.domain&&(t=m.domain.bind(\nt)),this.name){this.name.length>63&&(console.error(\"Warning! Postgres only suppo\\\nrts 63 characters for query names.\"),console.error(\"You supplied %s (%s)\",this.name,\nthis.name.length),console.error(\"This can cause conflicts and silent errors exec\\\nuting queries\"));var n=(this.values||[]).map(wn.prepareValue);if(r.namedQueries[this.\nname]){if(this.text&&r.namedQueries[this.name]!==this.text){let s=new Error(`Pre\\\npared statements must be unique - '${this.name}' was used for a different statem\\\nent`);return t(s)}return r.native.execute(this.name,n,t)}return r.native.prepare(\nthis.name,this.text,n.length,function(s){return s?t(s):(r.namedQueries[e.name]=e.\ntext,e.native.execute(e.name,n,t))})}else if(this.values){if(!Array.isArray(this.\nvalues)){let s=new Error(\"Query values must be an array\");return t(s)}var i=this.\nvalues.map(wn.prepareValue);r.native.query(this.text,i,t)}else r.native.query(this.\ntext,t)}});var Hs=I((wf,js)=>{\"use strict\";p();var Bc=(ks(),N(Ds)),Lc=mt(),gf=Us(),Qs=we().\nEventEmitter,Rc=(He(),N(je)),Fc=gt(),Ws=qs(),J=js.exports=function(r){Qs.call(this),\nr=r||{},this._Promise=r.Promise||S.Promise,this._types=new Lc(r.types),this.native=\nnew Bc({types:this._types}),this._queryQueue=[],this._ending=!1,this._connecting=\n!1,this._connected=!1,this._queryable=!0;var e=this.connectionParameters=new Fc(\nr);this.user=e.user,Object.defineProperty(this,\"password\",{configurable:!0,enumerable:!1,\nwritable:!0,value:e.password}),this.database=e.database,this.host=e.host,this.port=\ne.port,this.namedQueries={}};J.Query=Ws;Rc.inherits(J,Qs);J.prototype._errorAllQueries=\nfunction(r){let e=a(t=>{m.nextTick(()=>{t.native=this.native,t.handleError(r)})},\n\"enqueueError\");this._hasActiveQuery()&&(e(this._activeQuery),this._activeQuery=\nnull),this._queryQueue.forEach(e),this._queryQueue.length=0};J.prototype._connect=\nfunction(r){var e=this;if(this._connecting){m.nextTick(()=>r(new Error(\"Client h\\\nas already been connected. You cannot reuse a client.\")));return}this._connecting=\n!0,this.connectionParameters.getLibpqConnectionString(function(t,n){if(t)return r(\nt);e.native.connect(n,function(i){if(i)return e.native.end(),r(i);e._connected=!0,\ne.native.on(\"error\",function(s){e._queryable=!1,e._errorAllQueries(s),e.emit(\"er\\\nror\",s)}),e.native.on(\"notification\",function(s){e.emit(\"notification\",{channel:s.\nrelname,payload:s.extra})}),e.emit(\"connect\"),e._pulseQueryQueue(!0),r()})})};J.\nprototype.connect=function(r){if(r){this._connect(r);return}return new this._Promise(\n(e,t)=>{this._connect(n=>{n?t(n):e()})})};J.prototype.query=function(r,e,t){var n,\ni,s,o,u;if(r==null)throw new TypeError(\"Client was passed a null or undefined qu\\\nery\");if(typeof r.submit==\"function\")s=r.query_timeout||this.connectionParameters.\nquery_timeout,i=n=r,typeof e==\"function\"&&(r.callback=e);else if(s=this.connectionParameters.\nquery_timeout,n=new Ws(r,e,t),!n.callback){let c,h;i=new this._Promise((l,d)=>{c=\nl,h=d}),n.callback=(l,d)=>l?h(l):c(d)}return s&&(u=n.callback,o=setTimeout(()=>{\nvar c=new Error(\"Query read timeout\");m.nextTick(()=>{n.handleError(c,this.connection)}),\nu(c),n.callback=()=>{};var h=this._queryQueue.indexOf(n);h>-1&&this._queryQueue.\nsplice(h,1),this._pulseQueryQueue()},s),n.callback=(c,h)=>{clearTimeout(o),u(c,h)}),\nthis._queryable?this._ending?(n.native=this.native,m.nextTick(()=>{n.handleError(\nnew Error(\"Client was closed and is not queryable\"))}),i):(this._queryQueue.push(\nn),this._pulseQueryQueue(),i):(n.native=this.native,m.nextTick(()=>{n.handleError(\nnew Error(\"Client has encountered a connection error and is not queryable\"))}),i)};\nJ.prototype.end=function(r){var e=this;this._ending=!0,this._connected||this.once(\n\"connect\",this.end.bind(this,r));var t;return r||(t=new this._Promise(function(n,i){\nr=a(s=>s?i(s):n(),\"cb\")})),this.native.end(function(){e._errorAllQueries(new Error(\n\"Connection terminated\")),m.nextTick(()=>{e.emit(\"end\"),r&&r()})}),t};J.prototype.\n_hasActiveQuery=function(){return this._activeQuery&&this._activeQuery.state!==\"\\\nerror\"&&this._activeQuery.state!==\"end\"};J.prototype._pulseQueryQueue=function(r){\nif(this._connected&&!this._hasActiveQuery()){var e=this._queryQueue.shift();if(!e){\nr||this.emit(\"drain\");return}this._activeQuery=e,e.submit(this);var t=this;e.once(\n\"_done\",function(){t._pulseQueryQueue()})}};J.prototype.cancel=function(r){this.\n_activeQuery===r?this.native.cancel(function(){}):this._queryQueue.indexOf(r)!==\n-1&&this._queryQueue.splice(this._queryQueue.indexOf(r),1)};J.prototype.ref=function(){};\nJ.prototype.unref=function(){};J.prototype.setTypeParser=function(r,e,t){return this.\n_types.setTypeParser(r,e,t)};J.prototype.getTypeParser=function(r,e){return this.\n_types.getTypeParser(r,e)}});var bn=I((xf,Gs)=>{\"use strict\";p();Gs.exports=Hs()});var Ct=I((Ef,rt)=>{\"use strict\";p();var Mc=Bs(),Dc=Xe(),kc=hn(),Uc=Ms(),{DatabaseError:Oc}=an(),\nNc=a(r=>{var e;return e=class extends Uc{constructor(n){super(n,r)}},a(e,\"BoundP\\\nool\"),e},\"poolFactory\"),Sn=a(function(r){this.defaults=Dc,this.Client=r,this.Query=\nthis.Client.Query,this.Pool=Nc(this.Client),this._pools=[],this.Connection=kc,this.\ntypes=Je(),this.DatabaseError=Oc},\"PG\");typeof m.env.NODE_PG_FORCE_NATIVE<\"u\"?rt.\nexports=new Sn(bn()):(rt.exports=new Sn(Mc),Object.defineProperty(rt.exports,\"na\\\ntive\",{configurable:!0,enumerable:!1,get(){var r=null;try{r=new Sn(bn())}catch(e){\nif(e.code!==\"MODULE_NOT_FOUND\")throw e}return Object.defineProperty(rt.exports,\"\\\nnative\",{value:r}),r}}))});p();var Tt=Te(Ct());wt();p();pr();wt();var Ks=Te(et()),zs=Te(mt());var xn=class xn extends Error{constructor(){super(...arguments);_(this,\"name\",\"N\\\neonDbError\");_(this,\"severity\");_(this,\"code\");_(this,\"detail\");_(this,\"hint\");_(\nthis,\"position\");_(this,\"internalPosition\");_(this,\"internalQuery\");_(this,\"wher\\\ne\");_(this,\"schema\");_(this,\"table\");_(this,\"column\");_(this,\"dataType\");_(this,\n\"constraint\");_(this,\"file\");_(this,\"line\");_(this,\"routine\");_(this,\"sourceErro\\\nr\")}};a(xn,\"NeonDbError\");var Ae=xn,$s=\"transaction() expects an array of querie\\\ns, or a function returning an array of queries\",qc=[\"severity\",\"code\",\"detail\",\"\\\nhint\",\"position\",\"internalPosition\",\"internalQuery\",\"where\",\"schema\",\"table\",\"co\\\nlumn\",\"dataType\",\"constraint\",\"file\",\"line\",\"routine\"];function Ys(r,{arrayMode:e,\nfullResults:t,fetchOptions:n,isolationLevel:i,readOnly:s,deferrable:o,queryCallback:u,\nresultCallback:c}={}){if(!r)throw new Error(\"No database connection string was p\\\nrovided to `neon()`. Perhaps an environment variable has not been set?\");let h;try{\nh=fr(r)}catch{throw new Error(\"Database connection string provided to `neon()` i\\\ns not a valid URL. Connection string: \"+String(r))}let{protocol:l,username:d,password:b,\nhostname:C,port:B,pathname:W}=h;if(l!==\"postgres:\"&&l!==\"postgresql:\"||!d||!b||!C||\n!W)throw new Error(\"Database connection string format for `neon()` should be: po\\\nstgresql://user:password@host.tld/dbname?option=value\");function X(A,...w){let P,\nV;if(typeof A==\"string\")P=A,V=w[1],w=w[0]??[];else{P=\"\";for(let j=0;j<A.length;j++)\nP+=A[j],j<w.length&&(P+=\"$\"+(j+1))}w=w.map(j=>(0,Ks.prepareValue)(j));let k={query:P,\nparams:w};return u&&u(k),Qc(de,k,V)}a(X,\"resolve\"),X.transaction=async(A,w)=>{if(typeof A==\n\"function\"&&(A=A(X)),!Array.isArray(A))throw new Error($s);A.forEach(k=>{if(k[Symbol.\ntoStringTag]!==\"NeonQueryPromise\")throw new Error($s)});let P=A.map(k=>k.parameterizedQuery),\nV=A.map(k=>k.opts??{});return de(P,V,w)};async function de(A,w,P){let{fetchEndpoint:V,\nfetchFunction:k}=_e,j=typeof V==\"function\"?V(C,B):V,ce=Array.isArray(A)?{queries:A}:\nA,ee=n??{},R=e??!1,G=t??!1,he=i,ye=s,xe=o;P!==void 0&&(P.fetchOptions!==void 0&&\n(ee={...ee,...P.fetchOptions}),P.arrayMode!==void 0&&(R=P.arrayMode),P.fullResults!==\nvoid 0&&(G=P.fullResults),P.isolationLevel!==void 0&&(he=P.isolationLevel),P.readOnly!==\nvoid 0&&(ye=P.readOnly),P.deferrable!==void 0&&(xe=P.deferrable)),w!==void 0&&!Array.\nisArray(w)&&w.fetchOptions!==void 0&&(ee={...ee,...w.fetchOptions});let me={\"Neo\\\nn-Connection-String\":r,\"Neon-Raw-Text-Output\":\"true\",\"Neon-Array-Mode\":\"true\"};Array.\nisArray(A)&&(he!==void 0&&(me[\"Neon-Batch-Isolation-Level\"]=he),ye!==void 0&&(me[\"\\\nNeon-Batch-Read-Only\"]=String(ye)),xe!==void 0&&(me[\"Neon-Batch-Deferrable\"]=String(\nxe)));let se;try{se=await(k??fetch)(j,{method:\"POST\",body:JSON.stringify(ce),headers:me,\n...ee})}catch(oe){let U=new Ae(`Error connecting to database: ${oe.message}`);throw U.\nsourceError=oe,U}if(se.ok){let oe=await se.json();if(Array.isArray(A)){let U=oe.\nresults;if(!Array.isArray(U))throw new Ae(\"Neon internal error: unexpected resul\\\nt format\");return U.map((K,le)=>{let It=w[le]??{},Xs=It.arrayMode??R,eo=It.fullResults??\nG;return Vs(K,{arrayMode:Xs,fullResults:eo,parameterizedQuery:A[le],resultCallback:c,\ntypes:It.types})})}else{let U=w??{},K=U.arrayMode??R,le=U.fullResults??G;return Vs(\noe,{arrayMode:K,fullResults:le,parameterizedQuery:A,resultCallback:c,types:U.types})}}else{\nlet{status:oe}=se;if(oe===400){let U=await se.json(),K=new Ae(U.message);for(let le of qc)\nK[le]=U[le]??void 0;throw K}else{let U=await se.text();throw new Ae(`Server erro\\\nr (HTTP status ${oe}): ${U}`)}}}return a(de,\"execute\"),X}a(Ys,\"neon\");function Qc(r,e,t){\nreturn{[Symbol.toStringTag]:\"NeonQueryPromise\",parameterizedQuery:e,opts:t,then:a(\n(n,i)=>r(e,t).then(n,i),\"then\"),catch:a(n=>r(e,t).catch(n),\"catch\"),finally:a(n=>r(\ne,t).finally(n),\"finally\")}}a(Qc,\"createNeonQueryPromise\");function Vs(r,{arrayMode:e,\nfullResults:t,parameterizedQuery:n,resultCallback:i,types:s}){let o=new zs.default(\ns),u=r.fields.map(l=>l.name),c=r.fields.map(l=>o.getTypeParser(l.dataTypeID)),h=e===\n!0?r.rows.map(l=>l.map((d,b)=>d===null?null:c[b](d))):r.rows.map(l=>Object.fromEntries(\nl.map((d,b)=>[u[b],d===null?null:c[b](d)])));return i&&i(n,r,h,{arrayMode:e,fullResults:t}),\nt?(r.viaNeonFetch=!0,r.rowAsArray=e,r.rows=h,r._parsers=c,r._types=o,r):h}a(Vs,\"\\\nprocessQueryResult\");var Js=Te(gt()),Qe=Te(Ct());var En=class En extends Tt.Client{constructor(t){super(t);this.config=t}get neonConfig(){\nreturn this.connection.stream}connect(t){let{neonConfig:n}=this;n.forceDisablePgSSL&&\n(this.ssl=this.connection.ssl=!1),this.ssl&&n.useSecureWebSocket&&console.warn(\"\\\nSSL is enabled for both Postgres (e.g. ?sslmode=require in the connection string\\\n + forceDisablePgSSL = false) and the WebSocket tunnel (useSecureWebSocket = tru\\\ne). Double encryption will increase latency and CPU usage. It may be appropriate\\\n to disable SSL in the Postgres connection parameters or set forceDisablePgSSL =\\\n true.\");let i=this.config?.host!==void 0||this.config?.connectionString!==void 0||\nm.env.PGHOST!==void 0,s=m.env.USER??m.env.USERNAME;if(!i&&this.host===\"localhost\"&&\nthis.user===s&&this.database===s&&this.password===null)throw new Error(`No datab\\\nase host or connection string was set, and key parameters have default values (h\\\nost: localhost, user: ${s}, db: ${s}, password: null). Is an environment variabl\\\ne missing? Alternatively, if you intended to connect with these parameters, plea\\\nse set the host to 'localhost' explicitly.`);let o=super.connect(t),u=n.pipelineTLS&&\nthis.ssl,c=n.pipelineConnect===\"password\";if(!u&&!n.pipelineConnect)return o;let h=this.\nconnection;if(u&&h.on(\"connect\",()=>h.stream.emit(\"data\",\"S\")),c){h.removeAllListeners(\n\"authenticationCleartextPassword\"),h.removeAllListeners(\"readyForQuery\"),h.once(\n\"readyForQuery\",()=>h.on(\"readyForQuery\",this._handleReadyForQuery.bind(this)));\nlet l=this.ssl?\"sslconnect\":\"connect\";h.on(l,()=>{this._handleAuthCleartextPassword(),\nthis._handleReadyForQuery()})}return o}async _handleAuthSASLContinue(t){let n=this.\nsaslSession,i=this.password,s=t.data;if(n.message!==\"SASLInitialResponse\"||typeof i!=\n\"string\"||typeof s!=\"string\")throw new Error(\"SASL: protocol error\");let o=Object.\nfromEntries(s.split(\",\").map(U=>{if(!/^.=/.test(U))throw new Error(\"SASL: Invali\\\nd attribute pair entry\");let K=U[0],le=U.substring(2);return[K,le]})),u=o.r,c=o.\ns,h=o.i;if(!u||!/^[!-+--~]+$/.test(u))throw new Error(\"SASL: SCRAM-SERVER-FIRST-\\\nMESSAGE: nonce missing/unprintable\");if(!c||!/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.\ntest(c))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing/not base\\\n64\");if(!h||!/^[1-9][0-9]*$/.test(h))throw new Error(\"SASL: SCRAM-SERVER-FIRST-M\\\nESSAGE: missing/invalid iteration count\");if(!u.startsWith(n.clientNonce))throw new Error(\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce\");\nif(u.length===n.clientNonce.length)throw new Error(\"SASL: SCRAM-SERVER-FIRST-MES\\\nSAGE: server nonce is too short\");let l=parseInt(h,10),d=y.from(c,\"base64\"),b=new TextEncoder,\nC=b.encode(i),B=await g.subtle.importKey(\"raw\",C,{name:\"HMAC\",hash:{name:\"SHA-25\\\n6\"}},!1,[\"sign\"]),W=new Uint8Array(await g.subtle.sign(\"HMAC\",B,y.concat([d,y.from(\n[0,0,0,1])]))),X=W;for(var de=0;de<l-1;de++)W=new Uint8Array(await g.subtle.sign(\n\"HMAC\",B,W)),X=y.from(X.map((U,K)=>X[K]^W[K]));let A=X,w=await g.subtle.importKey(\n\"raw\",A,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),P=new Uint8Array(await g.\nsubtle.sign(\"HMAC\",w,b.encode(\"Client Key\"))),V=await g.subtle.digest(\"SHA-256\",\nP),k=\"n=*,r=\"+n.clientNonce,j=\"r=\"+u+\",s=\"+c+\",i=\"+l,ce=\"c=biws,r=\"+u,ee=k+\",\"+j+\n\",\"+ce,R=await g.subtle.importKey(\"raw\",V,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,\n[\"sign\"]);var G=new Uint8Array(await g.subtle.sign(\"HMAC\",R,b.encode(ee))),he=y.\nfrom(P.map((U,K)=>P[K]^G[K])),ye=he.toString(\"base64\");let xe=await g.subtle.importKey(\n\"raw\",A,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),me=await g.subtle.sign(\n\"HMAC\",xe,b.encode(\"Server Key\")),se=await g.subtle.importKey(\"raw\",me,{name:\"HM\\\nAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]);var oe=y.from(await g.subtle.sign(\"HMAC\",\nse,b.encode(ee)));n.message=\"SASLResponse\",n.serverSignature=oe.toString(\"base64\"),\nn.response=ce+\",p=\"+ye,this.connection.sendSCRAMClientFinalMessage(this.saslSession.\nresponse)}};a(En,\"NeonClient\");var vn=En;function Wc(r,e){if(e)return{callback:e,\nresult:void 0};let t,n,i=a(function(o,u){o?t(o):n(u)},\"cb\"),s=new r(function(o,u){\nn=o,t=u});return{callback:i,result:s}}a(Wc,\"promisify\");var _n=class _n extends Tt.Pool{constructor(){\nsuper(...arguments);_(this,\"Client\",vn);_(this,\"hasFetchUnsupportedListeners\",!1)}on(t,n){\nreturn t!==\"error\"&&(this.hasFetchUnsupportedListeners=!0),super.on(t,n)}query(t,n,i){\nif(!_e.poolQueryViaFetch||this.hasFetchUnsupportedListeners||typeof t==\"function\")\nreturn super.query(t,n,i);typeof n==\"function\"&&(i=n,n=void 0);let s=Wc(this.Promise,\ni);i=s.callback;try{let o=new Js.default(this.options),u=encodeURIComponent,c=encodeURI,\nh=`postgresql://${u(o.user)}:${u(o.password)}@${u(o.host)}/${c(o.database)}`,l=typeof t==\n\"string\"?t:t.text,d=n??t.values??[];Ys(h,{fullResults:!0,arrayMode:t.rowMode===\"\\\narray\"})(l,d,{types:t.types??this.options?.types}).then(C=>i(void 0,C)).catch(C=>i(\nC))}catch(o){i(o)}return s.result}};a(_n,\"NeonPool\");var Zs=_n;var export_ClientBase=Qe.ClientBase;var export_Connection=Qe.Connection;var export_DatabaseError=Qe.DatabaseError;\nvar export_Query=Qe.Query;var export_defaults=Qe.defaults;var export_types=Qe.types;\nexport{vn as Client,export_ClientBase as ClientBase,export_Connection as Connection,\nexport_DatabaseError as DatabaseError,Ae as NeonDbError,Zs as Pool,export_Query as Query,\nexport_defaults as defaults,Ys as neon,_e as neonConfig,export_types as types};\n/*! Bundled license information:\n\nieee754/index.js:\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\n\nbuffer/index.js:\n  (*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   *)\n*/\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5175, "column": 3}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5181, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/src/create-pool.ts","file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/src/error.ts","file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/src/postgres-connection-string.ts","file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/src/sql-template.ts","file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/src/create-client.ts","file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/src/index.ts"],"sourcesContent":["import type {\n  PoolClient,\n  QueryResult,\n  QueryResultRow,\n} from '@neondatabase/serverless';\nimport { Pool, neon } from '@neondatabase/serverless';\nimport type { VercelPoolClient, VercelPostgresPoolConfig } from './types';\nimport {\n  isLocalhostConnectionString,\n  isPooledConnectionString,\n  postgresConnectionString,\n} from './postgres-connection-string';\nimport { VercelPostgresError } from './error';\nimport type { Primitive } from './sql-template';\nimport { sqlTemplate } from './sql-template';\nimport { VercelClient } from './create-client';\n\nexport class VercelPool extends Pool {\n  Client = VercelClient;\n  private connectionString: string;\n\n  constructor(config: VercelPostgresPoolConfig) {\n    super(config);\n    this.connectionString = config.connectionString ?? '';\n  }\n\n  /**\n   * A template literal tag providing safe, easy to use SQL parameterization.\n   * Parameters are substituted using the underlying Postgres database, and so must follow\n   * the rules of Postgres parameterization.\n   * @example\n   * ```ts\n   * const pool = createPool();\n   * const userId = 123;\n   * const result = await pool.sql`SELECT * FROM users WHERE id = ${userId}`;\n   * // Equivalent to: await pool.query('SELECT * FROM users WHERE id = $1', [id]);\n   * ```\n   * @returns A promise that resolves to the query result.\n   */\n  async sql<O extends QueryResultRow>(\n    strings: TemplateStringsArray,\n    ...values: Primitive[]\n  ): Promise<QueryResult<O>> {\n    const [query, params] = sqlTemplate(strings, ...values);\n\n    const sql = neon(this.connectionString, {\n      fullResults: true,\n    });\n    return sql(query, params) as unknown as Promise<QueryResult<O>>;\n  }\n\n  connect(): Promise<VercelPoolClient>;\n  connect(\n    callback: (\n      err: Error,\n      client: VercelPoolClient,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any -- [@vercel/style-guide@5 migration]\n      done: (release?: any) => void,\n    ) => void,\n  ): void;\n  connect(\n    callback?: (\n      err: Error,\n      client: VercelPoolClient,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any -- [@vercel/style-guide@5 migration]\n      done: (release?: any) => void,\n    ) => void,\n    // eslint-disable-next-line @typescript-eslint/no-invalid-void-type -- [@vercel/style-guide@5 migration]\n  ): void | Promise<VercelPoolClient> {\n    // eslint-disable-next-line @typescript-eslint/no-confusing-void-expression -- [@vercel/style-guide@5 migration]\n    return super.connect(\n      callback as (\n        err: Error,\n        client: PoolClient,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any -- [@vercel/style-guide@5 migration]\n        done: (release?: any) => void,\n      ) => void,\n    );\n  }\n}\n\nexport function createPool(config?: VercelPostgresPoolConfig): VercelPool {\n  const connectionString =\n    config?.connectionString ?? postgresConnectionString('pool');\n  if (!connectionString)\n    throw new VercelPostgresError(\n      'missing_connection_string',\n      \"You did not supply a 'connectionString' and no 'POSTGRES_URL' env var was found.\",\n    );\n\n  if (\n    !isLocalhostConnectionString(connectionString) &&\n    !isPooledConnectionString(connectionString)\n  )\n    throw new VercelPostgresError(\n      'invalid_connection_string',\n      'This connection string is meant to be used with a direct connection. Make sure to use a pooled connection string or try `createClient()` instead.',\n    );\n\n  let maxUses = config?.maxUses;\n  let max = config?.max;\n  if (typeof EdgeRuntime !== 'undefined') {\n    if (maxUses && maxUses !== 1) {\n      // eslint-disable-next-line no-console -- [@vercel/style-guide@5 migration]\n      console.warn(\n        '@vercel/postgres: Overriding `maxUses` to 1 because the EdgeRuntime does not support client reuse.',\n      );\n    }\n    if (max && max !== 10_000) {\n      // eslint-disable-next-line no-console -- [@vercel/style-guide@5 migration]\n      console.warn(\n        '@vercel/postgres: Overriding `max` to 10,000 because the EdgeRuntime does not support client reuse.',\n      );\n    }\n    // Client reuse is not supported in the EdgeRuntime because it does not support IO across requests.\n    maxUses = 1;\n    // Since we do not allow client reuse, we need a higher max number of clients to avoid running out of\n    // connections.\n    // Usecase: a website that needs more than 10 concurrent connections\n    // https://node-postgres.com/apis/pool#new-pool\n    max = 10_000;\n  }\n\n  const pool = new VercelPool({\n    ...config,\n    connectionString,\n    maxUses,\n    max,\n  });\n  return pool;\n}\n","type VercelPostgresErrorCode =\n  | 'invalid_connection_string'\n  | 'missing_connection_string'\n  | 'invalid_connection_type'\n  | 'incorrect_tagged_template_call';\n\nexport class VercelPostgresError extends Error {\n  public constructor(\n    public code: VercelPostgresErrorCode,\n    message: string,\n  ) {\n    super(`VercelPostgresError - '${code}': ${message}`);\n    this.name = 'VercelPostgresError';\n  }\n}\n","import { VercelPostgresError } from './error';\n\nexport type ConnectionStringType = 'pool' | 'direct';\n\nexport function postgresConnectionString(\n  type: ConnectionStringType = 'pool',\n): string | undefined {\n  let connectionString: string | undefined;\n\n  switch (type) {\n    case 'pool': {\n      connectionString = process.env.POSTGRES_URL;\n      break;\n    }\n    case 'direct': {\n      connectionString = process.env.POSTGRES_URL_NON_POOLING;\n      break;\n    }\n    default: {\n      const _exhaustiveCheck: never = type;\n      const str = _exhaustiveCheck as string;\n      throw new VercelPostgresError(\n        'invalid_connection_type',\n        `Unhandled type: ${str}`,\n      );\n    }\n  }\n\n  if (connectionString === 'undefined') connectionString = undefined;\n  return connectionString;\n}\n\nexport function isPooledConnectionString(connectionString: string): boolean {\n  return connectionString.includes('-pooler.');\n}\n\nexport function isDirectConnectionString(connectionString: string): boolean {\n  return !isPooledConnectionString(connectionString);\n}\n\nexport function isLocalhostConnectionString(connectionString: string): boolean {\n  try {\n    // This seems silly, but we can use all of the hard work put into URL parsing\n    // if we just convert `postgresql://` to `https://` and then parse it as a URL.\n    const withHttpsProtocol = connectionString.replace(\n      /^postgresql:\\/\\//,\n      'https://',\n    );\n    return new URL(withHttpsProtocol).hostname === 'localhost';\n  } catch (err) {\n    if (err instanceof TypeError) {\n      return false;\n    }\n    // ok typescript\n    if (\n      typeof err === 'object' &&\n      err !== null &&\n      'message' in err &&\n      typeof err.message === 'string' &&\n      err.message === 'Invalid URL'\n    ) {\n      return false;\n    }\n    throw err;\n  }\n}\n","import { VercelPostgresError } from './error';\n\nexport type Primitive = string | number | boolean | undefined | null;\n\nexport function sqlTemplate(\n  strings: TemplateStringsArray,\n  ...values: Primitive[]\n): [string, Primitive[]] {\n  if (!isTemplateStringsArray(strings) || !Array.isArray(values)) {\n    throw new VercelPostgresError(\n      'incorrect_tagged_template_call',\n      \"It looks like you tried to call `sql` as a function. Make sure to use it as a tagged template.\\n\\tExample: sql`SELECT * FROM users`, not sql('SELECT * FROM users')\",\n    );\n  }\n\n  let result = strings[0] ?? '';\n\n  for (let i = 1; i < strings.length; i++) {\n    result += `$${i}${strings[i] ?? ''}`;\n  }\n\n  return [result, values];\n}\n\nfunction isTemplateStringsArray(\n  strings: unknown,\n): strings is TemplateStringsArray {\n  return (\n    Array.isArray(strings) && 'raw' in strings && Array.isArray(strings.raw)\n  );\n}\n","import type { QueryResult, QueryResultRow } from '@neondatabase/serverless';\nimport { Client } from '@neondatabase/serverless';\nimport type { VercelPostgresClientConfig } from './types';\nimport {\n  isDirectConnectionString,\n  isLocalhostConnectionString,\n  postgresConnectionString,\n} from './postgres-connection-string';\nimport { VercelPostgresError } from './error';\nimport type { Primitive } from './sql-template';\nimport { sqlTemplate } from './sql-template';\n\nexport class VercelClient extends Client {\n  /**\n   * A template literal tag providing safe, easy to use SQL parameterization.\n   * Parameters are substituted using the underlying Postgres database, and so must follow\n   * the rules of Postgres parameterization.\n   * @example\n   * ```ts\n   * const pool = createClient();\n   * const userId = 123;\n   * await client.connect();\n   * const result = await pool.sql`SELECT * FROM users WHERE id = ${userId}`;\n   * // Equivalent to: await pool.query('SELECT * FROM users WHERE id = $1', [id]);\n   * await client.end();\n   * ```\n   * @returns A promise that resolves to the query result.\n   */\n  async sql<O extends QueryResultRow>(\n    strings: TemplateStringsArray,\n    ...values: Primitive[]\n  ): Promise<QueryResult<O>> {\n    const [query, params] = sqlTemplate(strings, ...values);\n    return this.query(query, params);\n  }\n}\n\nexport function createClient(\n  config?: VercelPostgresClientConfig,\n): VercelClient {\n  const connectionString =\n    config?.connectionString ?? postgresConnectionString('direct');\n  if (!connectionString)\n    throw new VercelPostgresError(\n      'missing_connection_string',\n      \"You did not supply a 'connectionString' and no 'POSTGRES_URL_NON_POOLING' env var was found.\",\n    );\n  if (\n    !isLocalhostConnectionString(connectionString) &&\n    !isDirectConnectionString(connectionString)\n  )\n    throw new VercelPostgresError(\n      'invalid_connection_string',\n      'This connection string is meant to be used with a pooled connection. Try `createPool()` instead.',\n    );\n  return new VercelClient({\n    ...config,\n    connectionString,\n  });\n}\n","import type { QueryResult, QueryResultRow } from '@neondatabase/serverless';\nimport { type VercelPool, createPool } from './create-pool';\nimport type { Primitive } from './sql-template';\n\nexport * from './create-client';\nexport * from './create-pool';\nexport * from './types';\nexport { types } from '@neondatabase/serverless';\nexport { postgresConnectionString } from './postgres-connection-string';\n\nlet pool: VercelPool | undefined;\n\n// for future peons who aren't briliant like Malte, this means\n// \"make an object that will pretend to be a pool but not initialize itself\n// until someone tries to access a property on it\"\n// this also makes it callable, so you can call `sql` as a function\nexport const sql = new Proxy(\n  // eslint-disable-next-line @typescript-eslint/no-empty-function -- [@vercel/style-guide@5 migration]\n  () => {},\n  {\n    get(_, prop) {\n      if (!pool) {\n        pool = createPool();\n      }\n\n      // keep an eye on this -- it'll fail on certain cases, like private property access, which can\n      // require weird things like binding or calling with an explicit `this` arg.\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- [@vercel/style-guide@5 migration]\n      const val = Reflect.get(pool, prop);\n      if (typeof val === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call -- [@vercel/style-guide@5 migration]\n        return val.bind(pool);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return -- [@vercel/style-guide@5 migration]\n      return val;\n    },\n    apply(_, __, argumentsList) {\n      if (!pool) {\n        pool = createPool();\n      }\n\n      // @ts-expect-error - we're breaking all kinds of rules\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- [@vercel/style-guide@5 migration]\n      return pool.sql(...argumentsList);\n    },\n  },\n) as unknown as VercelPool &\n  (<O extends QueryResultRow>(\n    strings: TemplateStringsArray,\n    ...values: Primitive[]\n  ) => Promise<QueryResult<O>>);\n\nexport const db = sql;\n"],"names":["sql","pool"],"mappings":"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","ignoreList":[0,1,2,3,4,5]}},
    {"offset": {"line": 5375, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5389, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/stream.js"],"sourcesContent":["'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5523, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/node-gyp-build/node-gyp-build.js"],"sourcesContent":["var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.resolve(dir))\n}\n\nload.resolve = load.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi && tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5701, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5706, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/node-gyp-build/index.js"],"sourcesContent":["const runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\nif (typeof runtimeRequire.addon === 'function') { // if the platform supports native resolving prefer that\n  module.exports = runtimeRequire.addon.bind(runtimeRequire)\n} else { // else use the runtime version here\n  module.exports = require('./node-gyp-build.js')\n}\n"],"names":[],"mappings":"AAAA,MAAM,iBAAiB,OAAO,wBAAwB,aAAa,sFAAkC,sBAAsB;;AAC3H,IAAI,OAAO,eAAe,KAAK,KAAK,YAAY;IAC9C,OAAO,OAAO,GAAG,eAAe,KAAK,CAAC,IAAI,CAAC;AAC7C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0]}},
    {"offset": {"line": 5713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5718, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/bufferutil/fallback.js"],"sourcesContent":["'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n"],"names":[],"mappings":"AAAA;AAEA;;;;;;;;;CASC,GACD,MAAM,OAAO,CAAC,QAAQ,MAAM,QAAQ,QAAQ;IAC1C,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC/B,MAAM,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;IAC9C;AACF;AAEA;;;;;;CAMC,GACD,MAAM,SAAS,CAAC,QAAQ;IACtB,yEAAyE;IACzE,MAAM,SAAS,OAAO,MAAM;IAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC/B,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;IAC1B;AACF;AAEA,OAAO,OAAO,GAAG;IAAE;IAAM;AAAO","ignoreList":[0]}},
    {"offset": {"line": 5750, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5755, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/bufferutil/index.js"],"sourcesContent":["'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;IACF,OAAO,OAAO,GAAG,+FAA0B;AAC7C,EAAE,OAAO,GAAG;IACV,OAAO,OAAO;AAChB","ignoreList":[0]}},
    {"offset": {"line": 5761, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5766, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/constants.js"],"sourcesContent":["'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n"],"names":[],"mappings":"AAAA;AAEA,MAAM,eAAe;IAAC;IAAc;IAAe;CAAY;AAC/D,MAAM,UAAU,OAAO,SAAS;AAEhC,IAAI,SAAS,aAAa,IAAI,CAAC;AAE/B,OAAO,OAAO,GAAG;IACf;IACA,cAAc,OAAO,KAAK,CAAC;IAC3B,MAAM;IACN;IACA,sBAAsB,OAAO;IAC7B,WAAW,OAAO;IAClB,aAAa,OAAO;IACpB,YAAY,OAAO;IACnB,MAAM,KAAO;AACf","ignoreList":[0]}},
    {"offset": {"line": 5785, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5790, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/buffer-util.js"],"sourcesContent":["'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n"],"names":[],"mappings":"AAAA;AAEA,MAAM,EAAE,YAAY,EAAE;AAEtB,MAAM,aAAa,MAAM,CAAC,OAAO,OAAO,CAAC;AAEzC;;;;;;;CAOC,GACD,SAAS,OAAO,IAAI,EAAE,WAAW;IAC/B,IAAI,KAAK,MAAM,KAAK,GAAG,OAAO;IAC9B,IAAI,KAAK,MAAM,KAAK,GAAG,OAAO,IAAI,CAAC,EAAE;IAErC,MAAM,SAAS,OAAO,WAAW,CAAC;IAClC,IAAI,SAAS;IAEb,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;QACpC,MAAM,MAAM,IAAI,CAAC,EAAE;QACnB,OAAO,GAAG,CAAC,KAAK;QAChB,UAAU,IAAI,MAAM;IACtB;IAEA,IAAI,SAAS,aAAa;QACxB,OAAO,IAAI,WAAW,OAAO,MAAM,EAAE,OAAO,UAAU,EAAE;IAC1D;IAEA,OAAO;AACT;AAEA;;;;;;;;;CASC,GACD,SAAS,MAAM,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IACjD,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC/B,MAAM,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;IAC9C;AACF;AAEA;;;;;;CAMC,GACD,SAAS,QAAQ,MAAM,EAAE,IAAI;IAC3B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACtC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;IAC1B;AACF;AAEA;;;;;;CAMC,GACD,SAAS,cAAc,GAAG;IACxB,IAAI,IAAI,MAAM,KAAK,IAAI,MAAM,CAAC,UAAU,EAAE;QACxC,OAAO,IAAI,MAAM;IACnB;IAEA,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,UAAU,EAAE,IAAI,UAAU,GAAG,IAAI,MAAM;AACrE;AAEA;;;;;;;CAOC,GACD,SAAS,SAAS,IAAI;IACpB,SAAS,QAAQ,GAAG;IAEpB,IAAI,OAAO,QAAQ,CAAC,OAAO,OAAO;IAElC,IAAI;IAEJ,IAAI,gBAAgB,aAAa;QAC/B,MAAM,IAAI,WAAW;IACvB,OAAO,IAAI,YAAY,MAAM,CAAC,OAAO;QACnC,MAAM,IAAI,WAAW,KAAK,MAAM,EAAE,KAAK,UAAU,EAAE,KAAK,UAAU;IACpE,OAAO;QACL,MAAM,OAAO,IAAI,CAAC;QAClB,SAAS,QAAQ,GAAG;IACtB;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;IACf;IACA,MAAM;IACN;IACA;IACA,QAAQ;AACV;AAEA,yBAAyB,GACzB,IAAI,CAAC,QAAQ,GAAG,CAAC,iBAAiB,EAAE;IAClC,IAAI;QACF,MAAM;QAEN,OAAO,OAAO,CAAC,IAAI,GAAG,SAAU,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;YAClE,IAAI,SAAS,IAAI,MAAM,QAAQ,MAAM,QAAQ,QAAQ;iBAChD,WAAW,IAAI,CAAC,QAAQ,MAAM,QAAQ,QAAQ;QACrD;QAEA,OAAO,OAAO,CAAC,MAAM,GAAG,SAAU,MAAM,EAAE,IAAI;YAC5C,IAAI,OAAO,MAAM,GAAG,IAAI,QAAQ,QAAQ;iBACnC,WAAW,MAAM,CAAC,QAAQ;QACjC;IACF,EAAE,OAAO,GAAG;IACV,oCAAoC;IACtC;AACF","ignoreList":[0]}},
    {"offset": {"line": 5895, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5900, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/limiter.js"],"sourcesContent":["'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n"],"names":[],"mappings":"AAAA;AAEA,MAAM,QAAQ,OAAO;AACrB,MAAM,OAAO,OAAO;AAEpB;;;CAGC,GACD,MAAM;IACJ;;;;;GAKC,GACD,YAAY,WAAW,CAAE;QACvB,IAAI,CAAC,MAAM,GAAG;YACZ,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,KAAK;QACZ;QACA,IAAI,CAAC,WAAW,GAAG,eAAe;QAClC,IAAI,CAAC,IAAI,GAAG,EAAE;QACd,IAAI,CAAC,OAAO,GAAG;IACjB;IAEA;;;;;GAKC,GACD,IAAI,GAAG,EAAE;QACP,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACf,IAAI,CAAC,KAAK;IACZ;IAEA;;;;GAIC,GACD,CAAC,KAAK,GAAG;QACP,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,WAAW,EAAE;QAEvC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACpB,MAAM,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK;YAE3B,IAAI,CAAC,OAAO;YACZ,IAAI,IAAI,CAAC,MAAM;QACjB;IACF;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 5944, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5949, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/permessage-deflate.js"],"sourcesContent":["'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6335, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/validation.js"],"sourcesContent":["'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n"],"names":[],"mappings":"AAAA;AAEA,MAAM,EAAE,MAAM,EAAE;AAEhB,MAAM,EAAE,OAAO,EAAE;AAEjB,EAAE;AACF,4BAA4B;AAC5B,EAAE;AACF,+CAA+C;AAC/C,8CAA8C;AAC9C,EAAE;AACF,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B,MAAM;AACN,EAAE;AACF,kBAAkB;AAClB,MAAM,aAAa;IACjB;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC7C;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC7C;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC7C;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC7C;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC7C;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC7C;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAC7C;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG,EAAE,YAAY;CAC5D;AAED;;;;;;CAMC,GACD,SAAS,kBAAkB,IAAI;IAC7B,OACE,AAAC,QAAQ,QACP,QAAQ,QACR,SAAS,QACT,SAAS,QACT,SAAS,QACV,QAAQ,QAAQ,QAAQ;AAE7B;AAEA;;;;;;;;CAQC,GACD,SAAS,aAAa,GAAG;IACvB,MAAM,MAAM,IAAI,MAAM;IACtB,IAAI,IAAI;IAER,MAAO,IAAI,IAAK;QACd,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM,GAAG;YACzB,WAAW;YACX;QACF,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM,MAAM;YACnC,oBAAoB;YACpB,IACE,IAAI,MAAM,OACV,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QACxB,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM,KAAK,WAAW;cACpC;gBACA,OAAO;YACT;YAEA,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM,MAAM;YACnC,6BAA6B;YAC7B,IACE,IAAI,KAAK,OACT,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QACxB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QACvB,GAAG,CAAC,EAAE,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QAC3C,GAAG,CAAC,EAAE,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,KAAM,8BAA8B;cAChF;gBACA,OAAO;YACT;YAEA,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM,MAAM;YACnC,sCAAsC;YACtC,IACE,IAAI,KAAK,OACT,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QACxB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QACxB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QACvB,GAAG,CAAC,EAAE,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,MAAM,QAC3C,GAAG,CAAC,EAAE,KAAK,QAAQ,GAAG,CAAC,IAAI,EAAE,GAAG,QACjC,GAAG,CAAC,EAAE,GAAG,KAAK,aAAa;cAC3B;gBACA,OAAO;YACT;YAEA,KAAK;QACP,OAAO;YACL,OAAO;QACT;IACF;IAEA,OAAO;AACT;AAEA;;;;;;CAMC,GACD,SAAS,OAAO,KAAK;IACnB,OACE,WACA,OAAO,UAAU,YACjB,OAAO,MAAM,WAAW,KAAK,cAC7B,OAAO,MAAM,IAAI,KAAK,YACtB,OAAO,MAAM,MAAM,KAAK,cACxB,CAAC,KAAK,CAAC,OAAO,WAAW,CAAC,KAAK,UAC7B,KAAK,CAAC,OAAO,WAAW,CAAC,KAAK,MAAM;AAE1C;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA,aAAa;IACb;AACF;AAEA,IAAI,QAAQ;IACV,OAAO,OAAO,CAAC,WAAW,GAAG,SAAU,GAAG;QACxC,OAAO,IAAI,MAAM,GAAG,KAAK,aAAa,OAAO,OAAO;IACtD;AACF,OAAmC,IAAI,CAAC,QAAQ,GAAG,CAAC,oBAAoB,EAAE;IACxE,IAAI;QACF,MAAM;;;;;QAEN,OAAO,OAAO,CAAC,WAAW,GAAG,SAAU,GAAG;YACxC,OAAO,IAAI,MAAM,GAAG,KAAK,aAAa,OAAO,YAAY;QAC3D;IACF,EAAE,OAAO,GAAG;IACV,oCAAoC;IACtC;AACF","ignoreList":[0]}},
    {"offset": {"line": 6564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6569, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/receiver.js"],"sourcesContent":["'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7032, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7037, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/sender.js"],"sourcesContent":["/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7591, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/event-target.js"],"sourcesContent":["'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7847, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/extension.js"],"sourcesContent":["'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8029, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8034, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/websocket.js"],"sourcesContent":["/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9118, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/subprotocol.js"],"sourcesContent":["'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n"],"names":[],"mappings":"AAAA;AAEA,MAAM,EAAE,UAAU,EAAE;AAEpB;;;;;;CAMC,GACD,SAAS,MAAM,MAAM;IACnB,MAAM,YAAY,IAAI;IACtB,IAAI,QAAQ,CAAC;IACb,IAAI,MAAM,CAAC;IACX,IAAI,IAAI;IAER,IAAK,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QAC9B,MAAM,OAAO,OAAO,UAAU,CAAC;QAE/B,IAAI,QAAQ,CAAC,KAAK,UAAU,CAAC,KAAK,KAAK,GAAG;YACxC,IAAI,UAAU,CAAC,GAAG,QAAQ;QAC5B,OAAO,IACL,MAAM,KACN,CAAC,SAAS,KAAK,OAAO,OAAM,SAAS,IAAI,GACzC;YACA,IAAI,QAAQ,CAAC,KAAK,UAAU,CAAC,GAAG,MAAM;QACxC,OAAO,IAAI,SAAS,KAAK,OAAO,KAAI;YAClC,IAAI,UAAU,CAAC,GAAG;gBAChB,MAAM,IAAI,YAAY,CAAC,8BAA8B,EAAE,GAAG;YAC5D;YAEA,IAAI,QAAQ,CAAC,GAAG,MAAM;YAEtB,MAAM,WAAW,OAAO,KAAK,CAAC,OAAO;YAErC,IAAI,UAAU,GAAG,CAAC,WAAW;gBAC3B,MAAM,IAAI,YAAY,CAAC,KAAK,EAAE,SAAS,2BAA2B,CAAC;YACrE;YAEA,UAAU,GAAG,CAAC;YACd,QAAQ,MAAM,CAAC;QACjB,OAAO;YACL,MAAM,IAAI,YAAY,CAAC,8BAA8B,EAAE,GAAG;QAC5D;IACF;IAEA,IAAI,UAAU,CAAC,KAAK,QAAQ,CAAC,GAAG;QAC9B,MAAM,IAAI,YAAY;IACxB;IAEA,MAAM,WAAW,OAAO,KAAK,CAAC,OAAO;IAErC,IAAI,UAAU,GAAG,CAAC,WAAW;QAC3B,MAAM,IAAI,YAAY,CAAC,KAAK,EAAE,SAAS,2BAA2B,CAAC;IACrE;IAEA,UAAU,GAAG,CAAC;IACd,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;IAAE;AAAM","ignoreList":[0]}},
    {"offset": {"line": 9165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9170, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/lib/websocket-server.js"],"sourcesContent":["/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9592, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/ws/wrapper.mjs"],"sourcesContent":["import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n"],"names":[],"mappings":";;;AAGA;;;;;;;uCAIe,sIAAA,CAAA,UAAS","ignoreList":[0]}},
    {"offset": {"line": 9603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9622, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/%40vercel/postgres/src/index-node.ts"],"sourcesContent":["import { neonConfig } from '@neondatabase/serverless';\nimport ws from 'ws';\n\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- neonConfig is undefined in the test environment... for some reason\nif (neonConfig) {\n  neonConfig.webSocketConstructor = ws;\n}\n\nexport * from './index';\n"],"names":[],"mappings":";;AAAA,SAAS,kBAAkB;AAC3B,OAAO,QAAQ;;;;AAGf,mMAAI,aAAA,EAAY;IACd,8LAAA,CAAA,aAAA,CAAW,oBAAA,kJAAuB,UAAA;AACpC","ignoreList":[0]}},
    {"offset": {"line": 9634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9651, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/entity.ts"],"sourcesContent":["export const entityKind = Symbol.for('drizzle:entityKind');\nexport const hasOwnEntityKind = Symbol.for('drizzle:hasOwnEntityKind');\n\nexport interface DrizzleEntity {\n\t[entityKind]: string;\n}\n\nexport type DrizzleEntityClass<T> =\n\t& ((abstract new(...args: any[]) => T) | (new(...args: any[]) => T))\n\t& DrizzleEntity;\n\nexport function is<T extends DrizzleEntityClass<any>>(value: any, type: T): value is InstanceType<T> {\n\tif (!value || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (value instanceof type) { // eslint-disable-line no-instanceof/no-instanceof\n\t\treturn true;\n\t}\n\n\tif (!Object.prototype.hasOwnProperty.call(type, entityKind)) {\n\t\tthrow new Error(\n\t\t\t`Class \"${\n\t\t\t\ttype.name ?? '<unknown>'\n\t\t\t}\" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`,\n\t\t);\n\t}\n\n\tlet cls = value.constructor;\n\tif (cls) {\n\t\t// Traverse the prototype chain to find the entityKind\n\t\twhile (cls) {\n\t\t\tif (entityKind in cls && cls[entityKind] === type[entityKind]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcls = Object.getPrototypeOf(cls);\n\t\t}\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aAAa,OAAO,GAAA,CAAI,oBAAoB;AAClD,MAAM,mBAAmB,OAAO,GAAA,CAAI,0BAA0B;AAU9D,SAAS,GAAsC,KAAA,EAAY,IAAA,EAAmC;IACpG,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACxC,OAAO;IACR;IAEA,IAAI,iBAAiB,MAAM;QAC1B,OAAO;IACR;IAEA,IAAI,CAAC,OAAO,SAAA,CAAU,cAAA,CAAe,IAAA,CAAK,MAAM,UAAU,GAAG;QAC5D,MAAM,IAAI,MACT,CAAA,OAAA,EACC,KAAK,IAAA,IAAQ,WACd,CAAA,6HAAA,CAAA;IAEF;IAEA,IAAI,MAAM,MAAM,WAAA;IAChB,IAAI,KAAK;QAER,MAAO,IAAK;YACX,IAAI,cAAc,OAAO,GAAA,CAAI,UAAU,CAAA,KAAM,IAAA,CAAK,UAAU,CAAA,EAAG;gBAC9D,OAAO;YACR;YAEA,MAAM,OAAO,cAAA,CAAe,GAAG;QAChC;IACD;IAEA,OAAO;AACR","ignoreList":[0]}},
    {"offset": {"line": 9681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9687, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/table.ts"],"sourcesContent":["import type { Column, GetColumnData } from './column.ts';\nimport { entityKind } from './entity.ts';\nimport type { OptionalKeyOnly, RequiredKeyOnly } from './operations.ts';\nimport type { ExtraConfigColumn } from './pg-core/index.ts';\nimport type { SQLWrapper } from './sql/sql.ts';\nimport type { Simplify, Update } from './utils.ts';\n\nexport interface TableConfig<TColumn extends Column = Column<any>> {\n\tname: string;\n\tschema: string | undefined;\n\tcolumns: Record<string, TColumn>;\n\tdialect: string;\n}\n\nexport type UpdateTableConfig<T extends TableConfig, TUpdate extends Partial<TableConfig>> = Required<\n\tUpdate<T, TUpdate>\n>;\n\n/** @internal */\nexport const TableName = Symbol.for('drizzle:Name');\n\n/** @internal */\nexport const Schema = Symbol.for('drizzle:Schema');\n\n/** @internal */\nexport const Columns = Symbol.for('drizzle:Columns');\n\n/** @internal */\nexport const ExtraConfigColumns = Symbol.for('drizzle:ExtraConfigColumns');\n\n/** @internal */\nexport const OriginalName = Symbol.for('drizzle:OriginalName');\n\n/** @internal */\nexport const BaseName = Symbol.for('drizzle:BaseName');\n\n/** @internal */\nexport const IsAlias = Symbol.for('drizzle:IsAlias');\n\n/** @internal */\nexport const ExtraConfigBuilder = Symbol.for('drizzle:ExtraConfigBuilder');\n\nconst IsDrizzleTable = Symbol.for('drizzle:IsDrizzleTable');\n\nexport interface Table<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tT extends TableConfig = TableConfig,\n> extends SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\n\nexport class Table<T extends TableConfig = TableConfig> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Table';\n\n\tdeclare readonly _: {\n\t\treadonly brand: 'Table';\n\t\treadonly config: T;\n\t\treadonly name: T['name'];\n\t\treadonly schema: T['schema'];\n\t\treadonly columns: T['columns'];\n\t\treadonly inferSelect: InferSelectModel<Table<T>>;\n\t\treadonly inferInsert: InferInsertModel<Table<T>>;\n\t};\n\n\tdeclare readonly $inferSelect: InferSelectModel<Table<T>>;\n\tdeclare readonly $inferInsert: InferInsertModel<Table<T>>;\n\n\t/** @internal */\n\tstatic readonly Symbol = {\n\t\tName: TableName as typeof TableName,\n\t\tSchema: Schema as typeof Schema,\n\t\tOriginalName: OriginalName as typeof OriginalName,\n\t\tColumns: Columns as typeof Columns,\n\t\tExtraConfigColumns: ExtraConfigColumns as typeof ExtraConfigColumns,\n\t\tBaseName: BaseName as typeof BaseName,\n\t\tIsAlias: IsAlias as typeof IsAlias,\n\t\tExtraConfigBuilder: ExtraConfigBuilder as typeof ExtraConfigBuilder,\n\t};\n\n\t/**\n\t * @internal\n\t * Can be changed if the table is aliased.\n\t */\n\t[TableName]: string;\n\n\t/**\n\t * @internal\n\t * Used to store the original name of the table, before any aliasing.\n\t */\n\t[OriginalName]: string;\n\n\t/** @internal */\n\t[Schema]: string | undefined;\n\n\t/** @internal */\n\t[Columns]!: T['columns'];\n\n\t/** @internal */\n\t[ExtraConfigColumns]!: Record<string, ExtraConfigColumn>;\n\n\t/**\n\t *  @internal\n\t * Used to store the table name before the transformation via the `tableCreator` functions.\n\t */\n\t[BaseName]: string;\n\n\t/** @internal */\n\t[IsAlias] = false;\n\n\t/** @internal */\n\t[IsDrizzleTable] = true;\n\n\t/** @internal */\n\t[ExtraConfigBuilder]: ((self: any) => Record<string, unknown>) | undefined = undefined;\n\n\tconstructor(name: string, schema: string | undefined, baseName: string) {\n\t\tthis[TableName] = this[OriginalName] = name;\n\t\tthis[Schema] = schema;\n\t\tthis[BaseName] = baseName;\n\t}\n}\n\nexport function isTable(table: unknown): table is Table {\n\treturn typeof table === 'object' && table !== null && IsDrizzleTable in table;\n}\n\n/**\n * Any table with a specified boundary.\n *\n * @example\n\t```ts\n\t// Any table with a specific name\n\ttype AnyUsersTable = AnyTable<{ name: 'users' }>;\n\t```\n *\n * To describe any table with any config, simply use `Table` without any type arguments, like this:\n *\n\t```ts\n\tfunction needsTable(table: Table) {\n\t\t...\n\t}\n\t```\n */\nexport type AnyTable<TPartial extends Partial<TableConfig>> = Table<UpdateTableConfig<TableConfig, TPartial>>;\n\nexport function getTableName<T extends Table>(table: T): T['_']['name'] {\n\treturn table[TableName];\n}\n\nexport function getTableUniqueName<T extends Table>(table: T): `${T['_']['schema']}.${T['_']['name']}` {\n\treturn `${table[Schema] ?? 'public'}.${table[TableName]}`;\n}\n\nexport type MapColumnName<TName extends string, TColumn extends Column, TDBColumNames extends boolean> =\n\tTDBColumNames extends true ? TColumn['_']['name']\n\t\t: TName;\n\nexport type InferModelFromColumns<\n\tTColumns extends Record<string, Column>,\n\tTInferMode extends 'select' | 'insert' = 'select',\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = Simplify<\n\tTInferMode extends 'insert' ?\n\t\t\t& {\n\t\t\t\t[\n\t\t\t\t\tKey in keyof TColumns & string as RequiredKeyOnly<\n\t\t\t\t\t\tMapColumnName<Key, TColumns[Key], TConfig['dbColumnNames']>,\n\t\t\t\t\t\tTColumns[Key]\n\t\t\t\t\t>\n\t\t\t\t]: GetColumnData<TColumns[Key], 'query'>;\n\t\t\t}\n\t\t\t& {\n\t\t\t\t[\n\t\t\t\t\tKey in keyof TColumns & string as OptionalKeyOnly<\n\t\t\t\t\t\tMapColumnName<Key, TColumns[Key], TConfig['dbColumnNames']>,\n\t\t\t\t\t\tTColumns[Key]\n\t\t\t\t\t>\n\t\t\t\t]?: GetColumnData<TColumns[Key], 'query'>;\n\t\t\t}\n\t\t: {\n\t\t\t[\n\t\t\t\tKey in keyof TColumns & string as MapColumnName<\n\t\t\t\t\tKey,\n\t\t\t\t\tTColumns[Key],\n\t\t\t\t\tTConfig['dbColumnNames']\n\t\t\t\t>\n\t\t\t]: GetColumnData<TColumns[Key], 'query'>;\n\t\t}\n>;\n\n/** @deprecated Use one of the alternatives: {@link InferSelectModel} / {@link InferInsertModel}, or `table.$inferSelect` / `table.$inferInsert`\n */\nexport type InferModel<\n\tTTable extends Table,\n\tTInferMode extends 'select' | 'insert' = 'select',\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = InferModelFromColumns<TTable['_']['columns'], TInferMode, TConfig>;\n\nexport type InferSelectModel<\n\tTTable extends Table,\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = InferModelFromColumns<TTable['_']['columns'], 'select', TConfig>;\n\nexport type InferInsertModel<\n\tTTable extends Table,\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = InferModelFromColumns<TTable['_']['columns'], 'insert', TConfig>;\n"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,SAAS,kBAAkB;;AAkBpB,MAAM,YAAY,OAAO,GAAA,CAAI,cAAc;AAG3C,MAAM,SAAS,OAAO,GAAA,CAAI,gBAAgB;AAG1C,MAAM,UAAU,OAAO,GAAA,CAAI,iBAAiB;AAG5C,MAAM,qBAAqB,OAAO,GAAA,CAAI,4BAA4B;AAGlE,MAAM,eAAe,OAAO,GAAA,CAAI,sBAAsB;AAGtD,MAAM,WAAW,OAAO,GAAA,CAAI,kBAAkB;AAG9C,MAAM,UAAU,OAAO,GAAA,CAAI,iBAAiB;AAG5C,MAAM,qBAAqB,OAAO,GAAA,CAAI,4BAA4B;AAEzE,MAAM,iBAAiB,OAAO,GAAA,CAAI,wBAAwB;AASnD,MAAM,MAAiE;IAC7E,OAAA,0IAAiB,aAAU,CAAA,GAAY,QAAA;IAAA,cAAA,GAgBvC,OAAgB,SAAS;QACxB,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;QACA;IACD,EAAA;IAAA;;;GAAA,GAMA,CAAC,SAAS,CAAA,CAAA;IAAA;;;GAAA,GAMV,CAAC,YAAY,CAAA,CAAA;IAAA,cAAA,GAGb,CAAC,MAAM,CAAA,CAAA;IAAA,cAAA,GAGP,CAAC,OAAO,CAAA,CAAA;IAAA,cAAA,GAGR,CAAC,kBAAkB,CAAA,CAAA;IAAA;;;GAAA,GAMnB,CAAC,QAAQ,CAAA,CAAA;IAAA,cAAA,GAGT,CAAC,OAAO,CAAA,GAAI,MAAA;IAAA,cAAA,GAGZ,CAAC,cAAc,CAAA,GAAI,KAAA;IAAA,cAAA,GAGnB,CAAC,kBAAkB,CAAA,GAA0D,KAAA,EAAA;IAE7E,YAAY,IAAA,EAAc,MAAA,EAA4B,QAAA,CAAkB;QACvE,IAAA,CAAK,SAAS,CAAA,GAAI,IAAA,CAAK,YAAY,CAAA,GAAI;QACvC,IAAA,CAAK,MAAM,CAAA,GAAI;QACf,IAAA,CAAK,QAAQ,CAAA,GAAI;IAClB;AACD;AAEO,SAAS,QAAQ,KAAA,EAAgC;IACvD,OAAO,OAAO,UAAU,YAAY,UAAU,QAAQ,kBAAkB;AACzE;AAqBO,SAAS,aAA8B,KAAA,EAA0B;IACvE,OAAO,KAAA,CAAM,SAAS,CAAA;AACvB;AAEO,SAAS,mBAAoC,KAAA,EAAmD;IACtG,OAAO,GAAG,KAAA,CAAM,MAAM,CAAA,IAAK,QAAQ,CAAA,CAAA,EAAI,KAAA,CAAM,SAAS,CAAC,EAAA;AACxD","ignoreList":[0]}},
    {"offset": {"line": 9759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9765, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/table.ts"],"sourcesContent":["import type { BuildColumns, BuildExtraConfigColumns } from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport { Table, type TableConfig as TableConfigBase, type UpdateTableConfig } from '~/table.ts';\nimport type { CheckBuilder } from './checks.ts';\nimport type { PgColumn, PgColumnBuilder, PgColumnBuilderBase } from './columns/common.ts';\nimport type { ForeignKey, ForeignKeyBuilder } from './foreign-keys.ts';\nimport type { AnyIndexBuilder } from './indexes.ts';\nimport type { PrimaryKeyBuilder } from './primary-keys.ts';\nimport type { UniqueConstraintBuilder } from './unique-constraint.ts';\n\nexport type PgTableExtraConfig = Record<\n\tstring,\n\t| AnyIndexBuilder\n\t| CheckBuilder\n\t| ForeignKeyBuilder\n\t| PrimaryKeyBuilder\n\t| UniqueConstraintBuilder\n>;\n\nexport type TableConfig = TableConfigBase<PgColumn>;\n\n/** @internal */\nexport const InlineForeignKeys = Symbol.for('drizzle:PgInlineForeignKeys');\n\nexport class PgTable<T extends TableConfig = TableConfig> extends Table<T> {\n\tstatic readonly [entityKind]: string = 'PgTable';\n\n\t/** @internal */\n\tstatic override readonly Symbol = Object.assign({}, Table.Symbol, {\n\t\tInlineForeignKeys: InlineForeignKeys as typeof InlineForeignKeys,\n\t});\n\n\t/**@internal */\n\t[InlineForeignKeys]: ForeignKey[] = [];\n\n\t/** @internal */\n\toverride [Table.Symbol.ExtraConfigBuilder]: ((self: Record<string, PgColumn>) => PgTableExtraConfig) | undefined =\n\t\tundefined;\n}\n\nexport type AnyPgTable<TPartial extends Partial<TableConfig> = {}> = PgTable<UpdateTableConfig<TableConfig, TPartial>>;\n\nexport type PgTableWithColumns<T extends TableConfig> =\n\t& PgTable<T>\n\t& {\n\t\t[Key in keyof T['columns']]: T['columns'][Key];\n\t};\n\n/** @internal */\nexport function pgTableWithSchema<\n\tTTableName extends string,\n\tTSchemaName extends string | undefined,\n\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n>(\n\tname: TTableName,\n\tcolumns: TColumnsMap,\n\textraConfig: ((self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfig) | undefined,\n\tschema: TSchemaName,\n\tbaseName = name,\n): PgTableWithColumns<{\n\tname: TTableName;\n\tschema: TSchemaName;\n\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\tdialect: 'pg';\n}> {\n\tconst rawTable = new PgTable<{\n\t\tname: TTableName;\n\t\tschema: TSchemaName;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>(name, schema, baseName);\n\n\tconst builtColumns = Object.fromEntries(\n\t\tObject.entries(columns).map(([name, colBuilderBase]) => {\n\t\t\tconst colBuilder = colBuilderBase as PgColumnBuilder;\n\t\t\tconst column = colBuilder.build(rawTable);\n\t\t\trawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));\n\t\t\treturn [name, column];\n\t\t}),\n\t) as unknown as BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\n\tconst builtColumnsForExtraConfig = Object.fromEntries(\n\t\tObject.entries(columns).map(([name, colBuilderBase]) => {\n\t\t\tconst colBuilder = colBuilderBase as PgColumnBuilder;\n\t\t\tconst column = colBuilder.buildExtraConfigColumn(rawTable);\n\t\t\treturn [name, column];\n\t\t}),\n\t) as unknown as BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>;\n\n\tconst table = Object.assign(rawTable, builtColumns);\n\n\ttable[Table.Symbol.Columns] = builtColumns;\n\ttable[Table.Symbol.ExtraConfigColumns] = builtColumnsForExtraConfig;\n\n\tif (extraConfig) {\n\t\ttable[PgTable.Symbol.ExtraConfigBuilder] = extraConfig as any;\n\t}\n\n\treturn table;\n}\n\nexport interface PgTableFn<TSchema extends string | undefined = undefined> {\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: TColumnsMap,\n\t\textraConfig?: (self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfig,\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n}\n\nexport const pgTable: PgTableFn = (name, columns, extraConfig) => {\n\treturn pgTableWithSchema(name, columns, extraConfig, undefined);\n};\n\nexport function pgTableCreator(customizeTableName: (name: string) => string): PgTableFn {\n\treturn (name, columns, extraConfig) => {\n\t\treturn pgTableWithSchema(customizeTableName(name) as typeof name, columns, extraConfig, undefined, name);\n\t};\n}\n"],"names":["name"],"mappings":";;;;;;;AACA,SAAS,kBAAkB;AAC3B,SAAS,aAA0E;;;AAoB5E,MAAM,oBAAoB,OAAO,GAAA,CAAI,6BAA6B;AAElE,MAAM,wJAAqD,QAAA,CAAS;IAC1E,OAAA,0IAAiB,aAAU,CAAA,GAAY,UAAA;IAAA,cAAA,GAGvC,OAAyB,SAAS,OAAO,MAAA,CAAO,CAAC,2IAAG,QAAA,CAAM,MAAA,EAAQ;QACjE;IACD,CAAC,EAAA;IAAA,aAAA,GAGD,CAAC,iBAAiB,CAAA,GAAkB,CAAC,CAAA,CAAA;IAAA,cAAA,GAGrC,yIAAU,QAAA,CAAM,MAAA,CAAO,kBAAkB,CAAA,GACxC,KAAA,EAAA;AACF;AAWO,SAAS,kBAKf,IAAA,EACA,OAAA,EACA,WAAA,EACA,MAAA,EACA,WAAW,IAAA,EAMT;IACF,MAAM,WAAW,IAAI,QAKlB,MAAM,QAAQ,QAAQ;IAEzB,MAAM,eAAe,OAAO,WAAA,CAC3B,OAAO,OAAA,CAAQ,OAAO,EAAE,GAAA,CAAI,CAAC,CAACA,OAAM,cAAc,CAAA,KAAM;QACvD,MAAM,aAAa;QACnB,MAAM,SAAS,WAAW,KAAA,CAAM,QAAQ;QACxC,QAAA,CAAS,iBAAiB,CAAA,CAAE,IAAA,CAAK,GAAG,WAAW,gBAAA,CAAiB,QAAQ,QAAQ,CAAC;QACjF,OAAO;YAACA;YAAM,MAAM;SAAA;IACrB,CAAC;IAGF,MAAM,6BAA6B,OAAO,WAAA,CACzC,OAAO,OAAA,CAAQ,OAAO,EAAE,GAAA,CAAI,CAAC,CAACA,OAAM,cAAc,CAAA,KAAM;QACvD,MAAM,aAAa;QACnB,MAAM,SAAS,WAAW,sBAAA,CAAuB,QAAQ;QACzD,OAAO;YAACA;YAAM,MAAM;SAAA;IACrB,CAAC;IAGF,MAAM,QAAQ,OAAO,MAAA,CAAO,UAAU,YAAY;IAElD,KAAA,yIAAM,QAAA,CAAM,MAAA,CAAO,OAAO,CAAA,GAAI;IAC9B,KAAA,yIAAM,QAAA,CAAM,MAAA,CAAO,kBAAkB,CAAA,GAAI;IAEzC,IAAI,aAAa;QAChB,KAAA,CAAM,QAAQ,MAAA,CAAO,kBAAkB,CAAA,GAAI;IAC5C;IAEA,OAAO;AACR;AAkBO,MAAM,UAAqB,CAAC,MAAM,SAAS,gBAAgB;IACjE,OAAO,kBAAkB,MAAM,SAAS,aAAa,KAAA,CAAS;AAC/D;AAEO,SAAS,eAAe,kBAAA,EAAyD;IACvF,OAAO,CAAC,MAAM,SAAS,gBAAgB;QACtC,OAAO,kBAAkB,mBAAmB,IAAI,GAAkB,SAAS,aAAa,KAAA,GAAW,IAAI;IACxG;AACD","ignoreList":[0]}},
    {"offset": {"line": 9822, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9828, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/tracing-utils.ts"],"sourcesContent":["export function iife<T extends unknown[], U>(fn: (...args: T) => U, ...args: T): U {\n\treturn fn(...args);\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,KAA6B,EAAA,EAAA,GAA0B,IAAA,EAAY;IAClF,OAAO,GAAG,GAAG,IAAI;AAClB","ignoreList":[0]}},
    {"offset": {"line": 9836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9842, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/foreign-keys.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { AnyPgColumn, PgColumn } from './columns/index.ts';\nimport { PgTable } from './table.ts';\n\nexport type UpdateDeleteAction = 'cascade' | 'restrict' | 'no action' | 'set null' | 'set default';\n\nexport type Reference = () => {\n\treadonly name?: string;\n\treadonly columns: PgColumn[];\n\treadonly foreignTable: PgTable;\n\treadonly foreignColumns: PgColumn[];\n};\n\nexport class ForeignKeyBuilder {\n\tstatic readonly [entityKind]: string = 'PgForeignKeyBuilder';\n\n\t/** @internal */\n\treference: Reference;\n\n\t/** @internal */\n\t_onUpdate: UpdateDeleteAction | undefined = 'no action';\n\n\t/** @internal */\n\t_onDelete: UpdateDeleteAction | undefined = 'no action';\n\n\tconstructor(\n\t\tconfig: () => {\n\t\t\tname?: string;\n\t\t\tcolumns: PgColumn[];\n\t\t\tforeignColumns: PgColumn[];\n\t\t},\n\t\tactions?: {\n\t\t\tonUpdate?: UpdateDeleteAction;\n\t\t\tonDelete?: UpdateDeleteAction;\n\t\t} | undefined,\n\t) {\n\t\tthis.reference = () => {\n\t\t\tconst { name, columns, foreignColumns } = config();\n\t\t\treturn { name, columns, foreignTable: foreignColumns[0]!.table as PgTable, foreignColumns };\n\t\t};\n\t\tif (actions) {\n\t\t\tthis._onUpdate = actions.onUpdate;\n\t\t\tthis._onDelete = actions.onDelete;\n\t\t}\n\t}\n\n\tonUpdate(action: UpdateDeleteAction): this {\n\t\tthis._onUpdate = action === undefined ? 'no action' : action;\n\t\treturn this;\n\t}\n\n\tonDelete(action: UpdateDeleteAction): this {\n\t\tthis._onDelete = action === undefined ? 'no action' : action;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): ForeignKey {\n\t\treturn new ForeignKey(table, this);\n\t}\n}\n\nexport type AnyForeignKeyBuilder = ForeignKeyBuilder;\n\nexport class ForeignKey {\n\tstatic readonly [entityKind]: string = 'PgForeignKey';\n\n\treadonly reference: Reference;\n\treadonly onUpdate: UpdateDeleteAction | undefined;\n\treadonly onDelete: UpdateDeleteAction | undefined;\n\n\tconstructor(readonly table: PgTable, builder: ForeignKeyBuilder) {\n\t\tthis.reference = builder.reference;\n\t\tthis.onUpdate = builder._onUpdate;\n\t\tthis.onDelete = builder._onDelete;\n\t}\n\n\tgetName(): string {\n\t\tconst { name, columns, foreignColumns } = this.reference();\n\t\tconst columnNames = columns.map((column) => column.name);\n\t\tconst foreignColumnNames = foreignColumns.map((column) => column.name);\n\t\tconst chunks = [\n\t\t\tthis.table[PgTable.Symbol.Name],\n\t\t\t...columnNames,\n\t\t\tforeignColumns[0]!.table[PgTable.Symbol.Name],\n\t\t\t...foreignColumnNames,\n\t\t];\n\t\treturn name ?? `${chunks.join('_')}_fk`;\n\t}\n}\n\ntype ColumnsWithTable<\n\tTTableName extends string,\n\tTColumns extends PgColumn[],\n> = { [Key in keyof TColumns]: AnyPgColumn<{ tableName: TTableName }> };\n\nexport function foreignKey<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends [AnyPgColumn<{ tableName: TTableName }>, ...AnyPgColumn<{ tableName: TTableName }>[]],\n>(\n\tconfig: {\n\t\tname?: string;\n\t\tcolumns: TColumns;\n\t\tforeignColumns: ColumnsWithTable<TForeignTableName, TColumns>;\n\t},\n): ForeignKeyBuilder {\n\tfunction mappedConfig() {\n\t\tconst { name, columns, foreignColumns } = config;\n\t\treturn {\n\t\t\tname,\n\t\t\tcolumns,\n\t\t\tforeignColumns,\n\t\t};\n\t}\n\n\treturn new ForeignKeyBuilder(mappedConfig);\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,kBAAkB;AAE3B,SAAS,eAAe;;;AAWjB,MAAM,kBAAkB;IAC9B,OAAA,0IAAiB,aAAU,CAAA,GAAY,sBAAA;IAAA,cAAA,GAGvC,UAAA;IAAA,cAAA,GAGA,YAA4C,YAAA;IAAA,cAAA,GAG5C,YAA4C,YAAA;IAE5C,YACC,MAAA,EAKA,OAAA,CAIC;QACD,IAAA,CAAK,SAAA,GAAY,MAAM;YACtB,MAAM,EAAE,IAAA,EAAM,OAAA,EAAS,cAAA,CAAe,CAAA,GAAI,OAAO;YACjD,OAAO;gBAAE;gBAAM;gBAAS,cAAc,cAAA,CAAe,CAAC,CAAA,CAAG,KAAA;gBAAkB;YAAe;QAC3F;QACA,IAAI,SAAS;YACZ,IAAA,CAAK,SAAA,GAAY,QAAQ,QAAA;YACzB,IAAA,CAAK,SAAA,GAAY,QAAQ,QAAA;QAC1B;IACD;IAEA,SAAS,MAAA,EAAkC;QAC1C,IAAA,CAAK,SAAA,GAAY,WAAW,KAAA,IAAY,cAAc;QACtD,OAAO,IAAA;IACR;IAEA,SAAS,MAAA,EAAkC;QAC1C,IAAA,CAAK,SAAA,GAAY,WAAW,KAAA,IAAY,cAAc;QACtD,OAAO,IAAA;IACR;IAAA,cAAA,GAGA,MAAM,KAAA,EAA4B;QACjC,OAAO,IAAI,WAAW,OAAO,IAAI;IAClC;AACD;AAIO,MAAM,WAAW;IAOvB,YAAqB,KAAA,EAAgB,OAAA,CAA4B;QAA5C,IAAA,CAAA,KAAA,GAAA;QACpB,IAAA,CAAK,SAAA,GAAY,QAAQ,SAAA;QACzB,IAAA,CAAK,QAAA,GAAW,QAAQ,SAAA;QACxB,IAAA,CAAK,QAAA,GAAW,QAAQ,SAAA;IACzB;IAVA,OAAA,0IAAiB,aAAU,CAAA,GAAY,eAAA;IAE9B,UAAA;IACA,SAAA;IACA,SAAA;IAQT,UAAkB;QACjB,MAAM,EAAE,IAAA,EAAM,OAAA,EAAS,cAAA,CAAe,CAAA,GAAI,IAAA,CAAK,SAAA,CAAU;QACzD,MAAM,cAAc,QAAQ,GAAA,CAAI,CAAC,SAAW,OAAO,IAAI;QACvD,MAAM,qBAAqB,eAAe,GAAA,CAAI,CAAC,SAAW,OAAO,IAAI;QACrE,MAAM,SAAS;YACd,IAAA,CAAK,KAAA,uJAAM,UAAA,CAAQ,MAAA,CAAO,IAAI,CAAA;eAC3B;YACH,cAAA,CAAe,CAAC,CAAA,CAAG,KAAA,uJAAM,UAAA,CAAQ,MAAA,CAAO,IAAI,CAAA;eACzC;SACJ;QACA,OAAO,QAAQ,GAAG,OAAO,IAAA,CAAK,GAAG,CAAC,CAAA,GAAA,CAAA;IACnC;AACD;AAOO,SAAS,WAKf,MAAA,EAKoB;IACpB,SAAS,eAAe;QACvB,MAAM,EAAE,IAAA,EAAM,OAAA,EAAS,cAAA,CAAe,CAAA,GAAI;QAC1C,OAAO;YACN;YACA;YACA;QACD;IACD;IAEA,OAAO,IAAI,kBAAkB,YAAY;AAC1C","ignoreList":[0]}},
    {"offset": {"line": 9920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9926, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/column-builder.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { Column } from './column.ts';\nimport type { MySqlColumn } from './mysql-core/index.ts';\nimport type { ExtraConfigColumn, PgColumn, PgSequenceOptions } from './pg-core/index.ts';\nimport type { SQL } from './sql/sql.ts';\nimport type { SQLiteColumn } from './sqlite-core/index.ts';\nimport type { Simplify } from './utils.ts';\n\nexport type ColumnDataType =\n\t| 'string'\n\t| 'number'\n\t| 'boolean'\n\t| 'array'\n\t| 'json'\n\t| 'date'\n\t| 'bigint'\n\t| 'custom'\n\t| 'buffer';\n\nexport type Dialect = 'pg' | 'mysql' | 'sqlite' | 'common';\n\nexport type GeneratedStorageMode = 'virtual' | 'stored';\n\nexport type GeneratedType = 'always' | 'byDefault';\n\nexport type GeneratedColumnConfig<TDataType> = {\n\tas: TDataType | SQL | (() => SQL);\n\ttype?: GeneratedType;\n\tmode?: GeneratedStorageMode;\n};\n\nexport type GeneratedIdentityConfig = {\n\tsequenceName?: string;\n\tsequenceOptions?: PgSequenceOptions;\n\ttype: 'always' | 'byDefault';\n};\n\nexport interface ColumnBuilderBaseConfig<TDataType extends ColumnDataType, TColumnType extends string> {\n\tname: string;\n\tdataType: TDataType;\n\tcolumnType: TColumnType;\n\tdata: unknown;\n\tdriverParam: unknown;\n\tenumValues: string[] | undefined;\n\tgenerated: GeneratedColumnConfig<unknown> | undefined;\n}\n\nexport type MakeColumnConfig<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTableName extends string,\n\tTData = T extends { $type: infer U } ? U : T['data'],\n> = {\n\tname: T['name'];\n\ttableName: TTableName;\n\tdataType: T['dataType'];\n\tcolumnType: T['columnType'];\n\tdata: TData;\n\tdriverParam: T['driverParam'];\n\tnotNull: T extends { notNull: true } ? true : false;\n\thasDefault: T extends { hasDefault: true } ? true : false;\n\tisPrimaryKey: T extends { isPrimaryKey: true } ? true : false;\n\tisAutoincrement: T extends { isAutoincrement: true } ? true : false;\n\thasRuntimeDefault: T extends { hasRuntimeDefault: true } ? true : false;\n\tenumValues: T['enumValues'];\n\tbaseColumn: T extends { baseBuilder: infer U extends ColumnBuilderBase } ? BuildColumn<TTableName, U, 'common'>\n\t\t: never;\n\tgenerated: T['generated'] extends object ? T['generated'] : undefined;\n} & {};\n\nexport type ColumnBuilderTypeConfig<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> = Simplify<\n\t& {\n\t\tbrand: 'ColumnBuilder';\n\t\tname: T['name'];\n\t\tdataType: T['dataType'];\n\t\tcolumnType: T['columnType'];\n\t\tdata: T['data'];\n\t\tdriverParam: T['driverParam'];\n\t\tnotNull: T extends { notNull: infer U } ? U : boolean;\n\t\thasDefault: T extends { hasDefault: infer U } ? U : boolean;\n\t\tenumValues: T['enumValues'];\n\t\tgenerated: GeneratedColumnConfig<T['data']> | undefined;\n\t}\n\t& TTypeConfig\n>;\n\nexport type ColumnBuilderRuntimeConfig<TData, TRuntimeConfig extends object = object> = {\n\tname: string;\n\tnotNull: boolean;\n\tdefault: TData | SQL | undefined;\n\tdefaultFn: (() => TData | SQL) | undefined;\n\tonUpdateFn: (() => TData | SQL) | undefined;\n\thasDefault: boolean;\n\tprimaryKey: boolean;\n\tisUnique: boolean;\n\tuniqueName: string | undefined;\n\tuniqueType: string | undefined;\n\tdataType: string;\n\tcolumnType: string;\n\tgenerated: GeneratedColumnConfig<TData> | undefined;\n\tgeneratedIdentity: GeneratedIdentityConfig | undefined;\n} & TRuntimeConfig;\n\nexport interface ColumnBuilderExtraConfig {\n\tprimaryKeyHasDefault?: boolean;\n}\n\nexport type NotNull<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tnotNull: true;\n\t};\n};\n\nexport type HasDefault<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\thasDefault: true;\n\t};\n};\n\nexport type IsPrimaryKey<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tisPrimaryKey: true;\n\t};\n};\n\nexport type IsAutoincrement<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tisAutoincrement: true;\n\t};\n};\n\nexport type HasRuntimeDefault<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\thasRuntimeDefault: true;\n\t};\n};\n\nexport type $Type<T extends ColumnBuilderBase, TType> = T & {\n\t_: {\n\t\t$type: TType;\n\t};\n};\n\nexport type HasGenerated<T extends ColumnBuilderBase, TGenerated extends {} = {}> = T & {\n\t_: {\n\t\thasDefault: true;\n\t\tgenerated: TGenerated;\n\t};\n};\n\nexport type IsIdentityByDefault<\n\tT extends ColumnBuilderBase,\n\tTType extends 'always' | 'byDefault',\n> = T & {\n\t_: {\n\t\tnotNull: true;\n\t\thasDefault: true;\n\t\tgenerated: { as: any; type: TType };\n\t};\n};\n\nexport interface ColumnBuilderBase<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> {\n\t_: ColumnBuilderTypeConfig<T, TTypeConfig>;\n}\n\n// To understand how to use `ColumnBuilder` and `AnyColumnBuilder`, see `Column` and `AnyColumn` documentation.\nexport abstract class ColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n\tTExtraConfig extends ColumnBuilderExtraConfig = ColumnBuilderExtraConfig,\n> implements ColumnBuilderBase<T, TTypeConfig> {\n\tstatic readonly [entityKind]: string = 'ColumnBuilder';\n\n\tdeclare _: ColumnBuilderTypeConfig<T, TTypeConfig>;\n\n\tprotected config: ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>;\n\n\tconstructor(name: T['name'], dataType: T['dataType'], columnType: T['columnType']) {\n\t\tthis.config = {\n\t\t\tname,\n\t\t\tnotNull: false,\n\t\t\tdefault: undefined,\n\t\t\thasDefault: false,\n\t\t\tprimaryKey: false,\n\t\t\tisUnique: false,\n\t\t\tuniqueName: undefined,\n\t\t\tuniqueType: undefined,\n\t\t\tdataType,\n\t\t\tcolumnType,\n\t\t\tgenerated: undefined,\n\t\t} as ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>;\n\t}\n\n\t/**\n\t * Changes the data type of the column. Commonly used with `json` columns. Also, useful for branded types.\n\t *\n\t * @example\n\t * ```ts\n\t * const users = pgTable('users', {\n\t * \tid: integer('id').$type<UserId>().primaryKey(),\n\t * \tdetails: json('details').$type<UserDetails>().notNull(),\n\t * });\n\t * ```\n\t */\n\t$type<TType>(): $Type<this, TType> {\n\t\treturn this as $Type<this, TType>;\n\t}\n\n\t/**\n\t * Adds a `not null` clause to the column definition.\n\t *\n\t * Affects the `select` model of the table - columns *without* `not null` will be nullable on select.\n\t */\n\tnotNull(): NotNull<this> {\n\t\tthis.config.notNull = true;\n\t\treturn this as NotNull<this>;\n\t}\n\n\t/**\n\t * Adds a `default <value>` clause to the column definition.\n\t *\n\t * Affects the `insert` model of the table - columns *with* `default` are optional on insert.\n\t *\n\t * If you need to set a dynamic default value, use {@link $defaultFn} instead.\n\t */\n\tdefault(value: (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL): HasDefault<this> {\n\t\tthis.config.default = value;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasDefault<this>;\n\t}\n\n\t/**\n\t * Adds a dynamic default value to the column.\n\t * The function will be called when the row is inserted, and the returned value will be used as the column value.\n\t *\n\t * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n\t */\n\t$defaultFn(\n\t\tfn: () => (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL,\n\t): HasRuntimeDefault<HasDefault<this>> {\n\t\tthis.config.defaultFn = fn;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasRuntimeDefault<HasDefault<this>>;\n\t}\n\n\t/**\n\t * Alias for {@link $defaultFn}.\n\t */\n\t$default = this.$defaultFn;\n\n\t/**\n\t * Adds a dynamic update value to the column.\n\t * The function will be called when the row is updated, and the returned value will be used as the column value if none is provided.\n\t * If no `default` (or `$defaultFn`) value is provided, the function will be called when the row is inserted as well, and the returned value will be used as the column value.\n\t *\n\t * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n\t */\n\t$onUpdateFn(\n\t\tfn: () => (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL,\n\t): HasDefault<this> {\n\t\tthis.config.onUpdateFn = fn;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasDefault<this>;\n\t}\n\n\t/**\n\t * Alias for {@link $onUpdateFn}.\n\t */\n\t$onUpdate = this.$onUpdateFn;\n\n\t/**\n\t * Adds a `primary key` clause to the column definition. This implicitly makes the column `not null`.\n\t *\n\t * In SQLite, `integer primary key` implicitly makes the column auto-incrementing.\n\t */\n\tprimaryKey(): TExtraConfig['primaryKeyHasDefault'] extends true ? IsPrimaryKey<HasDefault<NotNull<this>>>\n\t\t: IsPrimaryKey<NotNull<this>>\n\t{\n\t\tthis.config.primaryKey = true;\n\t\tthis.config.notNull = true;\n\t\treturn this as TExtraConfig['primaryKeyHasDefault'] extends true ? IsPrimaryKey<HasDefault<NotNull<this>>>\n\t\t\t: IsPrimaryKey<NotNull<this>>;\n\t}\n\n\tabstract generatedAlwaysAs(\n\t\tas: SQL | T['data'] | (() => SQL),\n\t\tconfig?: Partial<GeneratedColumnConfig<unknown>>,\n\t): HasGenerated<this>;\n}\n\nexport type BuildColumn<\n\tTTableName extends string,\n\tTBuilder extends ColumnBuilderBase,\n\tTDialect extends Dialect,\n> = TDialect extends 'pg' ? PgColumn<MakeColumnConfig<TBuilder['_'], TTableName>>\n\t: TDialect extends 'mysql' ? MySqlColumn<MakeColumnConfig<TBuilder['_'], TTableName>>\n\t: TDialect extends 'sqlite' ? SQLiteColumn<MakeColumnConfig<TBuilder['_'], TTableName>>\n\t: TDialect extends 'common' ? Column<MakeColumnConfig<TBuilder['_'], TTableName>>\n\t: never;\n\nexport type BuildIndexColumn<\n\tTDialect extends Dialect,\n> = TDialect extends 'pg' ? ExtraConfigColumn : never;\n\n// TODO\n// try to make sql as well + indexRaw\n\n// optional after everything will be working as expected\n// also try to leave only needed methods for extraConfig\n// make an error if I pass .asc() to fk and so on\n\nexport type BuildColumns<\n\tTTableName extends string,\n\tTConfigMap extends Record<string, ColumnBuilderBase>,\n\tTDialect extends Dialect,\n> =\n\t& {\n\t\t[Key in keyof TConfigMap]: BuildColumn<TTableName, TConfigMap[Key], TDialect>;\n\t}\n\t& {};\n\nexport type BuildExtraConfigColumns<\n\t_TTableName extends string,\n\tTConfigMap extends Record<string, ColumnBuilderBase>,\n\tTDialect extends Dialect,\n> =\n\t& {\n\t\t[Key in keyof TConfigMap]: BuildIndexColumn<TDialect>;\n\t}\n\t& {};\n\nexport type ChangeColumnTableName<TColumn extends Column, TAlias extends string, TDialect extends Dialect> =\n\tTDialect extends 'pg' ? PgColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'mysql' ? MySqlColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'sqlite' ? SQLiteColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: never;\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;;AA4KpB,MAAe,cAKyB;IAC9C,OAAA,0IAAiB,aAAU,CAAA,GAAY,gBAAA;IAI7B,OAAA;IAEV,YAAY,IAAA,EAAiB,QAAA,EAAyB,UAAA,CAA6B;QAClF,IAAA,CAAK,MAAA,GAAS;YACb;YACA,SAAS;YACT,SAAS,KAAA;YACT,YAAY;YACZ,YAAY;YACZ,UAAU;YACV,YAAY,KAAA;YACZ,YAAY,KAAA;YACZ;YACA;YACA,WAAW,KAAA;QACZ;IACD;IAAA;;;;;;;;;;GAAA,GAaA,QAAmC;QAClC,OAAO,IAAA;IACR;IAAA;;;;GAAA,GAOA,UAAyB;QACxB,IAAA,CAAK,MAAA,CAAO,OAAA,GAAU;QACtB,OAAO,IAAA;IACR;IAAA;;;;;;GAAA,GASA,QAAQ,KAAA,EAA+F;QACtG,IAAA,CAAK,MAAA,CAAO,OAAA,GAAU;QACtB,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,OAAO,IAAA;IACR;IAAA;;;;;GAAA,GAQA,WACC,EAAA,EACsC;QACtC,IAAA,CAAK,MAAA,CAAO,SAAA,GAAY;QACxB,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,OAAO,IAAA;IACR;IAAA;;GAAA,GAKA,WAAW,IAAA,CAAK,UAAA,CAAA;IAAA;;;;;;GAAA,GAShB,YACC,EAAA,EACmB;QACnB,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,OAAO,IAAA;IACR;IAAA;;GAAA,GAKA,YAAY,IAAA,CAAK,WAAA,CAAA;IAAA;;;;GAAA,GAOjB,aAEA;QACC,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,IAAA,CAAK,MAAA,CAAO,OAAA,GAAU;QACtB,OAAO,IAAA;IAER;AAMD","ignoreList":[0]}},
    {"offset": {"line": 10020, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10026, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/unique-constraint.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { PgColumn } from './columns/index.ts';\nimport { PgTable } from './table.ts';\n\nexport function unique(name?: string): UniqueOnConstraintBuilder {\n\treturn new UniqueOnConstraintBuilder(name);\n}\n\nexport function uniqueKeyName(table: PgTable, columns: string[]) {\n\treturn `${table[PgTable.Symbol.Name]}_${columns.join('_')}_unique`;\n}\n\nexport class UniqueConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'PgUniqueConstraintBuilder';\n\n\t/** @internal */\n\tcolumns: PgColumn[];\n\t/** @internal */\n\tnullsNotDistinctConfig = false;\n\n\tconstructor(\n\t\tcolumns: PgColumn[],\n\t\tprivate name?: string,\n\t) {\n\t\tthis.columns = columns;\n\t}\n\n\tnullsNotDistinct() {\n\t\tthis.nullsNotDistinctConfig = true;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): UniqueConstraint {\n\t\treturn new UniqueConstraint(table, this.columns, this.nullsNotDistinctConfig, this.name);\n\t}\n}\n\nexport class UniqueOnConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'PgUniqueOnConstraintBuilder';\n\n\t/** @internal */\n\tname?: string;\n\n\tconstructor(\n\t\tname?: string,\n\t) {\n\t\tthis.name = name;\n\t}\n\n\ton(...columns: [PgColumn, ...PgColumn[]]) {\n\t\treturn new UniqueConstraintBuilder(columns, this.name);\n\t}\n}\n\nexport class UniqueConstraint {\n\tstatic readonly [entityKind]: string = 'PgUniqueConstraint';\n\n\treadonly columns: PgColumn[];\n\treadonly name?: string;\n\treadonly nullsNotDistinct: boolean = false;\n\n\tconstructor(readonly table: PgTable, columns: PgColumn[], nullsNotDistinct: boolean, name?: string) {\n\t\tthis.columns = columns;\n\t\tthis.name = name ?? uniqueKeyName(this.table, this.columns.map((column) => column.name));\n\t\tthis.nullsNotDistinct = nullsNotDistinct;\n\t}\n\n\tgetName() {\n\t\treturn this.name;\n\t}\n}\n"],"names":[],"mappings":";;;;;;;AAAA,SAAS,kBAAkB;AAE3B,SAAS,eAAe;;;AAEjB,SAAS,OAAO,IAAA,EAA0C;IAChE,OAAO,IAAI,0BAA0B,IAAI;AAC1C;AAEO,SAAS,cAAc,KAAA,EAAgB,OAAA,EAAmB;IAChE,OAAO,GAAG,KAAA,uJAAM,UAAA,CAAQ,MAAA,CAAO,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,IAAA,CAAK,GAAG,CAAC,CAAA,OAAA,CAAA;AAC1D;AAEO,MAAM,wBAAwB;IAQpC,YACC,OAAA,EACQ,IAAA,CACP;QADO,IAAA,CAAA,IAAA,GAAA;QAER,IAAA,CAAK,OAAA,GAAU;IAChB;IAZA,OAAA,0IAAiB,aAAU,CAAA,GAAY,4BAAA;IAAA,cAAA,GAGvC,QAAA;IAAA,cAAA,GAEA,yBAAyB,MAAA;IASzB,mBAAmB;QAClB,IAAA,CAAK,sBAAA,GAAyB;QAC9B,OAAO,IAAA;IACR;IAAA,cAAA,GAGA,MAAM,KAAA,EAAkC;QACvC,OAAO,IAAI,iBAAiB,OAAO,IAAA,CAAK,OAAA,EAAS,IAAA,CAAK,sBAAA,EAAwB,IAAA,CAAK,IAAI;IACxF;AACD;AAEO,MAAM,0BAA0B;IACtC,OAAA,0IAAiB,aAAU,CAAA,GAAY,8BAAA;IAAA,cAAA,GAGvC,KAAA;IAEA,YACC,IAAA,CACC;QACD,IAAA,CAAK,IAAA,GAAO;IACb;IAEA,GAAA,GAAM,OAAA,EAAoC;QACzC,OAAO,IAAI,wBAAwB,SAAS,IAAA,CAAK,IAAI;IACtD;AACD;AAEO,MAAM,iBAAiB;IAO7B,YAAqB,KAAA,EAAgB,OAAA,EAAqB,gBAAA,EAA2B,IAAA,CAAe;QAA/E,IAAA,CAAA,KAAA,GAAA;QACpB,IAAA,CAAK,OAAA,GAAU;QACf,IAAA,CAAK,IAAA,GAAO,QAAQ,cAAc,IAAA,CAAK,KAAA,EAAO,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAC,SAAW,OAAO,IAAI,CAAC;QACvF,IAAA,CAAK,gBAAA,GAAmB;IACzB;IAVA,OAAA,0IAAiB,aAAU,CAAA,GAAY,qBAAA;IAE9B,QAAA;IACA,KAAA;IACA,mBAA4B,MAAA;IAQrC,UAAU;QACT,OAAO,IAAA,CAAK,IAAA;IACb;AACD","ignoreList":[0]}},
    {"offset": {"line": 10086, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10092, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/column.ts"],"sourcesContent":["import type {\n\tColumnBuilderBaseConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tGeneratedColumnConfig,\n\tGeneratedIdentityConfig,\n} from './column-builder.ts';\nimport { entityKind } from './entity.ts';\nimport type { DriverValueMapper, SQL, SQLWrapper } from './sql/sql.ts';\nimport type { Table } from './table.ts';\nimport type { Update } from './utils.ts';\n\nexport interface ColumnBaseConfig<\n\tTDataType extends ColumnDataType,\n\tTColumnType extends string,\n> extends ColumnBuilderBaseConfig<TDataType, TColumnType> {\n\ttableName: string;\n\tnotNull: boolean;\n\thasDefault: boolean;\n\tisPrimaryKey: boolean;\n\tisAutoincrement: boolean;\n\thasRuntimeDefault: boolean;\n}\n\nexport type ColumnTypeConfig<T extends ColumnBaseConfig<ColumnDataType, string>, TTypeConfig extends object> = T & {\n\tbrand: 'Column';\n\ttableName: T['tableName'];\n\tname: T['name'];\n\tdataType: T['dataType'];\n\tcolumnType: T['columnType'];\n\tdata: T['data'];\n\tdriverParam: T['driverParam'];\n\tnotNull: T['notNull'];\n\thasDefault: T['hasDefault'];\n\tisPrimaryKey: T['isPrimaryKey'];\n\tisAutoincrement: T['isAutoincrement'];\n\thasRuntimeDefault: T['hasRuntimeDefault'];\n\tenumValues: T['enumValues'];\n\tbaseColumn: T extends { baseColumn: infer U } ? U : unknown;\n\tgenerated: GeneratedColumnConfig<T['data']> | undefined;\n} & TTypeConfig;\n\nexport type ColumnRuntimeConfig<TData, TRuntimeConfig extends object> = ColumnBuilderRuntimeConfig<\n\tTData,\n\tTRuntimeConfig\n>;\n\nexport interface Column<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTRuntimeConfig extends object = object,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTTypeConfig extends object = object,\n> extends DriverValueMapper<T['data'], T['driverParam']>, SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\n/*\n\t`Column` only accepts a full `ColumnConfig` as its generic.\n\tTo infer parts of the config, use `AnyColumn` that accepts a partial config.\n\tSee `GetColumnData` for example usage of inferring.\n*/\nexport abstract class Column<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n> implements DriverValueMapper<T['data'], T['driverParam']>, SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Column';\n\n\tdeclare readonly _: ColumnTypeConfig<T, TTypeConfig>;\n\n\treadonly name: string;\n\treadonly primary: boolean;\n\treadonly notNull: boolean;\n\treadonly default: T['data'] | SQL | undefined;\n\treadonly defaultFn: (() => T['data'] | SQL) | undefined;\n\treadonly onUpdateFn: (() => T['data'] | SQL) | undefined;\n\treadonly hasDefault: boolean;\n\treadonly isUnique: boolean;\n\treadonly uniqueName: string | undefined;\n\treadonly uniqueType: string | undefined;\n\treadonly dataType: T['dataType'];\n\treadonly columnType: T['columnType'];\n\treadonly enumValues: T['enumValues'] = undefined;\n\treadonly generated: GeneratedColumnConfig<T['data']> | undefined = undefined;\n\treadonly generatedIdentity: GeneratedIdentityConfig | undefined = undefined;\n\n\tprotected config: ColumnRuntimeConfig<T['data'], TRuntimeConfig>;\n\n\tconstructor(\n\t\treadonly table: Table,\n\t\tconfig: ColumnRuntimeConfig<T['data'], TRuntimeConfig>,\n\t) {\n\t\tthis.config = config;\n\t\tthis.name = config.name;\n\t\tthis.notNull = config.notNull;\n\t\tthis.default = config.default;\n\t\tthis.defaultFn = config.defaultFn;\n\t\tthis.onUpdateFn = config.onUpdateFn;\n\t\tthis.hasDefault = config.hasDefault;\n\t\tthis.primary = config.primaryKey;\n\t\tthis.isUnique = config.isUnique;\n\t\tthis.uniqueName = config.uniqueName;\n\t\tthis.uniqueType = config.uniqueType;\n\t\tthis.dataType = config.dataType as T['dataType'];\n\t\tthis.columnType = config.columnType;\n\t\tthis.generated = config.generated;\n\t\tthis.generatedIdentity = config.generatedIdentity;\n\t}\n\n\tabstract getSQLType(): string;\n\n\tmapFromDriverValue(value: unknown): unknown {\n\t\treturn value;\n\t}\n\n\tmapToDriverValue(value: unknown): unknown {\n\t\treturn value;\n\t}\n\n\t// ** @internal */\n\tshouldDisableInsert(): boolean {\n\t\treturn this.config.generated !== undefined && this.config.generated.type !== 'byDefault';\n\t}\n}\n\nexport type UpdateColConfig<\n\tT extends ColumnBaseConfig<ColumnDataType, string>,\n\tTUpdate extends Partial<ColumnBaseConfig<ColumnDataType, string>>,\n> = Update<T, TUpdate>;\n\nexport type AnyColumn<TPartial extends Partial<ColumnBaseConfig<ColumnDataType, string>> = {}> = Column<\n\tRequired<Update<ColumnBaseConfig<ColumnDataType, string>, TPartial>>\n>;\n\nexport type GetColumnData<TColumn extends Column, TInferMode extends 'query' | 'raw' = 'query'> =\n\t// dprint-ignore\n\tTInferMode extends 'raw' // Raw mode\n\t\t? TColumn['_']['data'] // Just return the underlying type\n\t\t: TColumn['_']['notNull'] extends true // Query mode\n\t\t? TColumn['_']['data'] // Query mode, not null\n\t\t: TColumn['_']['data'] | null; // Query mode, nullable\n\nexport type InferColumnsDataTypes<TColumns extends Record<string, Column>> = {\n\t[Key in keyof TColumns]: GetColumnData<TColumns[Key], 'query'>;\n};\n"],"names":[],"mappings":";;;AAOA,SAAS,kBAAkB;;AAsDpB,MAAe,OAIkD;IAuBvE,YACU,KAAA,EACT,MAAA,CACC;QAFQ,IAAA,CAAA,KAAA,GAAA;QAGT,IAAA,CAAK,MAAA,GAAS;QACd,IAAA,CAAK,IAAA,GAAO,OAAO,IAAA;QACnB,IAAA,CAAK,OAAA,GAAU,OAAO,OAAA;QACtB,IAAA,CAAK,OAAA,GAAU,OAAO,OAAA;QACtB,IAAA,CAAK,SAAA,GAAY,OAAO,SAAA;QACxB,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA;QACzB,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA;QACzB,IAAA,CAAK,OAAA,GAAU,OAAO,UAAA;QACtB,IAAA,CAAK,QAAA,GAAW,OAAO,QAAA;QACvB,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA;QACzB,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA;QACzB,IAAA,CAAK,QAAA,GAAW,OAAO,QAAA;QACvB,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA;QACzB,IAAA,CAAK,SAAA,GAAY,OAAO,SAAA;QACxB,IAAA,CAAK,iBAAA,GAAoB,OAAO,iBAAA;IACjC;IAzCA,OAAA,0IAAiB,aAAU,CAAA,GAAY,SAAA;IAI9B,KAAA;IACA,QAAA;IACA,QAAA;IACA,QAAA;IACA,UAAA;IACA,WAAA;IACA,WAAA;IACA,SAAA;IACA,WAAA;IACA,WAAA;IACA,SAAA;IACA,WAAA;IACA,aAA8B,KAAA,EAAA;IAC9B,YAA0D,KAAA,EAAA;IAC1D,oBAAyD,KAAA,EAAA;IAExD,OAAA;IAyBV,mBAAmB,KAAA,EAAyB;QAC3C,OAAO;IACR;IAEA,iBAAiB,KAAA,EAAyB;QACzC,OAAO;IACR;IAAA,kBAAA;IAGA,sBAA+B;QAC9B,OAAO,IAAA,CAAK,MAAA,CAAO,SAAA,KAAc,KAAA,KAAa,IAAA,CAAK,MAAA,CAAO,SAAA,CAAU,IAAA,KAAS;IAC9E;AACD","ignoreList":[0]}},
    {"offset": {"line": 10146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10152, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/utils/array.ts"],"sourcesContent":["function parsePgArrayValue(arrayString: string, startFrom: number, inQuotes: boolean): [string, number] {\n\tfor (let i = startFrom; i < arrayString.length; i++) {\n\t\tconst char = arrayString[i];\n\n\t\tif (char === '\\\\') {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '\"') {\n\t\t\treturn [arrayString.slice(startFrom, i).replace(/\\\\/g, ''), i + 1];\n\t\t}\n\n\t\tif (inQuotes) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === ',' || char === '}') {\n\t\t\treturn [arrayString.slice(startFrom, i).replace(/\\\\/g, ''), i];\n\t\t}\n\t}\n\n\treturn [arrayString.slice(startFrom).replace(/\\\\/g, ''), arrayString.length];\n}\n\nexport function parsePgNestedArray(arrayString: string, startFrom = 0): [any[], number] {\n\tconst result: any[] = [];\n\tlet i = startFrom;\n\tlet lastCharIsComma = false;\n\n\twhile (i < arrayString.length) {\n\t\tconst char = arrayString[i];\n\n\t\tif (char === ',') {\n\t\t\tif (lastCharIsComma || i === startFrom) {\n\t\t\t\tresult.push('');\n\t\t\t}\n\t\t\tlastCharIsComma = true;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tlastCharIsComma = false;\n\n\t\tif (char === '\\\\') {\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '\"') {\n\t\t\tconst [value, startFrom] = parsePgArrayValue(arrayString, i + 1, true);\n\t\t\tresult.push(value);\n\t\t\ti = startFrom;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '}') {\n\t\t\treturn [result, i + 1];\n\t\t}\n\n\t\tif (char === '{') {\n\t\t\tconst [value, startFrom] = parsePgNestedArray(arrayString, i + 1);\n\t\t\tresult.push(value);\n\t\t\ti = startFrom;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [value, newStartFrom] = parsePgArrayValue(arrayString, i, false);\n\t\tresult.push(value);\n\t\ti = newStartFrom;\n\t}\n\n\treturn [result, i];\n}\n\nexport function parsePgArray(arrayString: string): any[] {\n\tconst [result] = parsePgNestedArray(arrayString, 1);\n\treturn result;\n}\n\nexport function makePgArray(array: any[]): string {\n\treturn `{${\n\t\tarray.map((item) => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn makePgArray(item);\n\t\t\t}\n\n\t\t\tif (typeof item === 'string') {\n\t\t\t\treturn `\"${item.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\"`;\n\t\t\t}\n\n\t\t\treturn `${item}`;\n\t\t}).join(',')\n\t}}`;\n}\n"],"names":["value","startFrom"],"mappings":";;;;;AAAA,SAAS,kBAAkB,WAAA,EAAqB,SAAA,EAAmB,QAAA,EAAqC;IACvG,IAAA,IAAS,IAAI,WAAW,IAAI,YAAY,MAAA,EAAQ,IAAK;QACpD,MAAM,OAAO,WAAA,CAAY,CAAC,CAAA;QAE1B,IAAI,SAAS,MAAM;YAClB;YACA;QACD;QAEA,IAAI,SAAS,KAAK;YACjB,OAAO;gBAAC,YAAY,KAAA,CAAM,WAAW,CAAC,EAAE,OAAA,CAAQ,OAAO,EAAE;gBAAG,IAAI,CAAC;aAAA;QAClE;QAEA,IAAI,UAAU;YACb;QACD;QAEA,IAAI,SAAS,OAAO,SAAS,KAAK;YACjC,OAAO;gBAAC,YAAY,KAAA,CAAM,WAAW,CAAC,EAAE,OAAA,CAAQ,OAAO,EAAE;gBAAG,CAAC;aAAA;QAC9D;IACD;IAEA,OAAO;QAAC,YAAY,KAAA,CAAM,SAAS,EAAE,OAAA,CAAQ,OAAO,EAAE;QAAG,YAAY,MAAM;KAAA;AAC5E;AAEO,SAAS,mBAAmB,WAAA,EAAqB,YAAY,CAAA,EAAoB;IACvF,MAAM,SAAgB,CAAC,CAAA;IACvB,IAAI,IAAI;IACR,IAAI,kBAAkB;IAEtB,MAAO,IAAI,YAAY,MAAA,CAAQ;QAC9B,MAAM,OAAO,WAAA,CAAY,CAAC,CAAA;QAE1B,IAAI,SAAS,KAAK;YACjB,IAAI,mBAAmB,MAAM,WAAW;gBACvC,OAAO,IAAA,CAAK,EAAE;YACf;YACA,kBAAkB;YAClB;YACA;QACD;QAEA,kBAAkB;QAElB,IAAI,SAAS,MAAM;YAClB,KAAK;YACL;QACD;QAEA,IAAI,SAAS,KAAK;YACjB,MAAM,CAACA,QAAOC,UAAS,CAAA,GAAI,kBAAkB,aAAa,IAAI,GAAG,IAAI;YACrE,OAAO,IAAA,CAAKD,MAAK;YACjB,IAAIC;YACJ;QACD;QAEA,IAAI,SAAS,KAAK;YACjB,OAAO;gBAAC;gBAAQ,IAAI,CAAC;aAAA;QACtB;QAEA,IAAI,SAAS,KAAK;YACjB,MAAM,CAACD,QAAOC,UAAS,CAAA,GAAI,mBAAmB,aAAa,IAAI,CAAC;YAChE,OAAO,IAAA,CAAKD,MAAK;YACjB,IAAIC;YACJ;QACD;QAEA,MAAM,CAAC,OAAO,YAAY,CAAA,GAAI,kBAAkB,aAAa,GAAG,KAAK;QACrE,OAAO,IAAA,CAAK,KAAK;QACjB,IAAI;IACL;IAEA,OAAO;QAAC;QAAQ,CAAC;KAAA;AAClB;AAEO,SAAS,aAAa,WAAA,EAA4B;IACxD,MAAM,CAAC,MAAM,CAAA,GAAI,mBAAmB,aAAa,CAAC;IAClD,OAAO;AACR;AAEO,SAAS,YAAY,KAAA,EAAsB;IACjD,OAAO,CAAA,CAAA,EACN,MAAM,GAAA,CAAI,CAAC,SAAS;QACnB,IAAI,MAAM,OAAA,CAAQ,IAAI,GAAG;YACxB,OAAO,YAAY,IAAI;QACxB;QAEA,IAAI,OAAO,SAAS,UAAU;YAC7B,OAAO,CAAA,CAAA,EAAI,KAAK,OAAA,CAAQ,OAAO,MAAM,EAAE,OAAA,CAAQ,MAAM,KAAK,CAAC,CAAA,CAAA,CAAA;QAC5D;QAEA,OAAO,GAAG,IAAI,EAAA;IACf,CAAC,EAAE,IAAA,CAAK,GAAG,CACZ,CAAA,CAAA,CAAA;AACD","ignoreList":[0]}},
    {"offset": {"line": 10248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10254, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/common.ts"],"sourcesContent":["import type {\n\tColumnBuilderBase,\n\tColumnBuilderBaseConfig,\n\tColumnBuilderExtraConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tGeneratedColumnConfig,\n\tHasGenerated,\n\tMakeColumnConfig,\n} from '~/column-builder.ts';\nimport { ColumnBuilder } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { Column } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport type { Update } from '~/utils.ts';\n\nimport type { SQL } from '~/index.ts';\nimport type { ForeignKey, UpdateDeleteAction } from '~/pg-core/foreign-keys.ts';\nimport { ForeignKeyBuilder } from '~/pg-core/foreign-keys.ts';\nimport type { AnyPgTable, PgTable } from '~/pg-core/table.ts';\nimport { iife } from '~/tracing-utils.ts';\nimport type { PgIndexOpClass } from '../indexes.ts';\nimport { uniqueKeyName } from '../unique-constraint.ts';\nimport { makePgArray, parsePgArray } from '../utils/array.ts';\n\nexport interface ReferenceConfig {\n\tref: () => PgColumn;\n\tactions: {\n\t\tonUpdate?: UpdateDeleteAction;\n\t\tonDelete?: UpdateDeleteAction;\n\t};\n}\n\nexport interface PgColumnBuilderBase<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> extends ColumnBuilderBase<T, TTypeConfig & { dialect: 'pg' }> {}\n\nexport abstract class PgColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n\tTExtraConfig extends ColumnBuilderExtraConfig = ColumnBuilderExtraConfig,\n> extends ColumnBuilder<T, TRuntimeConfig, TTypeConfig & { dialect: 'pg' }, TExtraConfig>\n\timplements PgColumnBuilderBase<T, TTypeConfig>\n{\n\tprivate foreignKeyConfigs: ReferenceConfig[] = [];\n\n\tstatic readonly [entityKind]: string = 'PgColumnBuilder';\n\n\tarray(size?: number): PgArrayBuilder<\n\t\t& {\n\t\t\tname: T['name'];\n\t\t\tdataType: 'array';\n\t\t\tcolumnType: 'PgArray';\n\t\t\tdata: T['data'][];\n\t\t\tdriverParam: T['driverParam'][] | string;\n\t\t\tenumValues: T['enumValues'];\n\t\t\tgenerated: GeneratedColumnConfig<T['data']>;\n\t\t}\n\t\t& (T extends { notNull: true } ? { notNull: true } : {})\n\t\t& (T extends { hasDefault: true } ? { hasDefault: true } : {}),\n\t\tT\n\t> {\n\t\treturn new PgArrayBuilder(this.config.name, this as PgColumnBuilder<any, any>, size);\n\t}\n\n\treferences(\n\t\tref: ReferenceConfig['ref'],\n\t\tactions: ReferenceConfig['actions'] = {},\n\t): this {\n\t\tthis.foreignKeyConfigs.push({ ref, actions });\n\t\treturn this;\n\t}\n\n\tunique(\n\t\tname?: string,\n\t\tconfig?: { nulls: 'distinct' | 'not distinct' },\n\t): this {\n\t\tthis.config.isUnique = true;\n\t\tthis.config.uniqueName = name;\n\t\tthis.config.uniqueType = config?.nulls;\n\t\treturn this;\n\t}\n\n\tgeneratedAlwaysAs(as: SQL | T['data'] | (() => SQL)): HasGenerated<this> {\n\t\tthis.config.generated = {\n\t\t\tas,\n\t\t\ttype: 'always',\n\t\t\tmode: 'stored',\n\t\t};\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tbuildForeignKeys(column: PgColumn, table: PgTable): ForeignKey[] {\n\t\treturn this.foreignKeyConfigs.map(({ ref, actions }) => {\n\t\t\treturn iife(\n\t\t\t\t(ref, actions) => {\n\t\t\t\t\tconst builder = new ForeignKeyBuilder(() => {\n\t\t\t\t\t\tconst foreignColumn = ref();\n\t\t\t\t\t\treturn { columns: [column], foreignColumns: [foreignColumn] };\n\t\t\t\t\t});\n\t\t\t\t\tif (actions.onUpdate) {\n\t\t\t\t\t\tbuilder.onUpdate(actions.onUpdate);\n\t\t\t\t\t}\n\t\t\t\t\tif (actions.onDelete) {\n\t\t\t\t\t\tbuilder.onDelete(actions.onDelete);\n\t\t\t\t\t}\n\t\t\t\t\treturn builder.build(table);\n\t\t\t\t},\n\t\t\t\tref,\n\t\t\t\tactions,\n\t\t\t);\n\t\t});\n\t}\n\n\t/** @internal */\n\tabstract build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgColumn<MakeColumnConfig<T, TTableName>>;\n\n\t/** @internal */\n\tbuildExtraConfigColumn<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): ExtraConfigColumn {\n\t\treturn new ExtraConfigColumn(table, this.config);\n\t}\n}\n\n// To understand how to use `PgColumn` and `PgColumn`, see `Column` and `AnyColumn` documentation.\nexport abstract class PgColumn<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = {},\n\tTTypeConfig extends object = {},\n> extends Column<T, TRuntimeConfig, TTypeConfig & { dialect: 'pg' }> {\n\tstatic readonly [entityKind]: string = 'PgColumn';\n\n\tconstructor(\n\t\toverride readonly table: PgTable,\n\t\tconfig: ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>,\n\t) {\n\t\tif (!config.uniqueName) {\n\t\t\tconfig.uniqueName = uniqueKeyName(table, [config.name]);\n\t\t}\n\t\tsuper(table, config);\n\t}\n}\n\nexport type IndexedExtraConfigType = { order?: 'asc' | 'desc'; nulls?: 'first' | 'last'; opClass?: string };\n\nexport class ExtraConfigColumn<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n> extends PgColumn<T, IndexedExtraConfigType> {\n\tstatic readonly [entityKind]: string = 'ExtraConfigColumn';\n\n\toverride getSQLType(): string {\n\t\treturn this.getSQLType();\n\t}\n\n\tindexConfig: IndexedExtraConfigType = {\n\t\torder: this.config.order ?? 'asc',\n\t\tnulls: this.config.nulls ?? 'last',\n\t\topClass: this.config.opClass,\n\t};\n\tdefaultConfig: IndexedExtraConfigType = {\n\t\torder: 'asc',\n\t\tnulls: 'last',\n\t\topClass: undefined,\n\t};\n\n\tasc(): Omit<this, 'asc' | 'desc'> {\n\t\tthis.indexConfig.order = 'asc';\n\t\treturn this;\n\t}\n\n\tdesc(): Omit<this, 'asc' | 'desc'> {\n\t\tthis.indexConfig.order = 'desc';\n\t\treturn this;\n\t}\n\n\tnullsFirst(): Omit<this, 'nullsFirst' | 'nullsLast'> {\n\t\tthis.indexConfig.nulls = 'first';\n\t\treturn this;\n\t}\n\n\tnullsLast(): Omit<this, 'nullsFirst' | 'nullsLast'> {\n\t\tthis.indexConfig.nulls = 'last';\n\t\treturn this;\n\t}\n\n\t/**\n\t * ### PostgreSQL documentation quote\n\t *\n\t * > An operator class with optional parameters can be specified for each column of an index.\n\t * The operator class identifies the operators to be used by the index for that column.\n\t * For example, a B-tree index on four-byte integers would use the int4_ops class;\n\t * this operator class includes comparison functions for four-byte integers.\n\t * In practice the default operator class for the column's data type is usually sufficient.\n\t * The main point of having operator classes is that for some data types, there could be more than one meaningful ordering.\n\t * For example, we might want to sort a complex-number data type either by absolute value or by real part.\n\t * We could do this by defining two operator classes for the data type and then selecting the proper class when creating an index.\n\t * More information about operator classes check:\n\t *\n\t * ### Useful links\n\t * https://www.postgresql.org/docs/current/sql-createindex.html\n\t *\n\t * https://www.postgresql.org/docs/current/indexes-opclass.html\n\t *\n\t * https://www.postgresql.org/docs/current/xindex.html\n\t *\n\t * ### Additional types\n\t * If you have the `pg_vector` extension installed in your database, you can use the\n\t * `vector_l2_ops`, `vector_ip_ops`, `vector_cosine_ops`, `vector_l1_ops`, `bit_hamming_ops`, `bit_jaccard_ops`, `halfvec_l2_ops`, `sparsevec_l2_ops` options, which are predefined types.\n\t *\n\t * **You can always specify any string you want in the operator class, in case Drizzle doesn't have it natively in its types**\n\t *\n\t * @param opClass\n\t * @returns\n\t */\n\top(opClass: PgIndexOpClass): Omit<this, 'op'> {\n\t\tthis.indexConfig.opClass = opClass;\n\t\treturn this;\n\t}\n}\n\nexport class IndexedColumn {\n\tstatic readonly [entityKind]: string = 'IndexedColumn';\n\tconstructor(\n\t\tname: string | undefined,\n\t\ttype: string,\n\t\tindexConfig: IndexedExtraConfigType,\n\t) {\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.indexConfig = indexConfig;\n\t}\n\n\tname: string | undefined;\n\ttype: string;\n\tindexConfig: IndexedExtraConfigType;\n}\n\nexport type AnyPgColumn<TPartial extends Partial<ColumnBaseConfig<ColumnDataType, string>> = {}> = PgColumn<\n\tRequired<Update<ColumnBaseConfig<ColumnDataType, string>, TPartial>>\n>;\n\nexport class PgArrayBuilder<\n\tT extends ColumnBuilderBaseConfig<'array', 'PgArray'>,\n\tTBase extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n> extends PgColumnBuilder<\n\tT,\n\t{\n\t\tbaseBuilder: PgColumnBuilder<TBase>;\n\t\tsize: number | undefined;\n\t},\n\t{\n\t\tbaseBuilder: PgColumnBuilder<TBase>;\n\t}\n> {\n\tstatic override readonly [entityKind] = 'PgArrayBuilder';\n\n\tconstructor(\n\t\tname: string,\n\t\tbaseBuilder: PgArrayBuilder<T, TBase>['config']['baseBuilder'],\n\t\tsize: number | undefined,\n\t) {\n\t\tsuper(name, 'array', 'PgArray');\n\t\tthis.config.baseBuilder = baseBuilder;\n\t\tthis.config.size = size;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgArray<MakeColumnConfig<T, TTableName>, TBase> {\n\t\tconst baseColumn = this.config.baseBuilder.build(table);\n\t\treturn new PgArray<MakeColumnConfig<T, TTableName>, TBase>(\n\t\t\ttable as AnyPgTable<{ name: MakeColumnConfig<T, TTableName>['tableName'] }>,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t\tbaseColumn,\n\t\t);\n\t}\n}\n\nexport class PgArray<\n\tT extends ColumnBaseConfig<'array', 'PgArray'>,\n\tTBase extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n> extends PgColumn<T> {\n\treadonly size: number | undefined;\n\n\tstatic readonly [entityKind]: string = 'PgArray';\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgArrayBuilder<T, TBase>['config'],\n\t\treadonly baseColumn: PgColumn,\n\t\treadonly range?: [number | undefined, number | undefined],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.size = config.size;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn `${this.baseColumn.getSQLType()}[${typeof this.size === 'number' ? this.size : ''}]`;\n\t}\n\n\toverride mapFromDriverValue(value: unknown[] | string): T['data'] {\n\t\tif (typeof value === 'string') {\n\t\t\t// Thank you node-postgres for not parsing enum arrays\n\t\t\tvalue = parsePgArray(value);\n\t\t}\n\t\treturn value.map((v) => this.baseColumn.mapFromDriverValue(v));\n\t}\n\n\toverride mapToDriverValue(value: unknown[], isNestedArray = false): unknown[] | string {\n\t\tconst a = value.map((v) =>\n\t\t\tv === null\n\t\t\t\t? null\n\t\t\t\t: is(this.baseColumn, PgArray)\n\t\t\t\t? this.baseColumn.mapToDriverValue(v as unknown[], true)\n\t\t\t\t: this.baseColumn.mapToDriverValue(v)\n\t\t);\n\t\tif (isNestedArray) return a;\n\t\treturn makePgArray(a);\n\t}\n}\n"],"names":["ref","actions"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10462, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/int.common.ts"],"sourcesContent":["import type {\n\tColumnBuilderBaseConfig,\n\tColumnDataType,\n\tGeneratedIdentityConfig,\n\tIsIdentityByDefault,\n} from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { PgSequenceOptions } from '../sequence.ts';\nimport { PgColumnBuilder } from './common.ts';\n\nexport abstract class PgIntColumnBaseBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n> extends PgColumnBuilder<\n\tT,\n\t{ generatedIdentity: GeneratedIdentityConfig }\n> {\n\tstatic readonly [entityKind]: string = 'PgIntColumnBaseBuilder';\n\n\tgeneratedAlwaysAsIdentity(\n\t\tsequence?: PgSequenceOptions & { name?: string },\n\t): IsIdentityByDefault<this, 'always'> {\n\t\tif (sequence) {\n\t\t\tconst { name, ...options } = sequence;\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'always',\n\t\t\t\tsequenceName: name,\n\t\t\t\tsequenceOptions: options,\n\t\t\t};\n\t\t} else {\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'always',\n\t\t\t};\n\t\t}\n\n\t\tthis.config.hasDefault = true;\n\t\tthis.config.notNull = true;\n\n\t\treturn this as any;\n\t}\n\n\tgeneratedByDefaultAsIdentity(\n\t\tsequence?: PgSequenceOptions & { name?: string },\n\t): IsIdentityByDefault<this, 'byDefault'> {\n\t\tif (sequence) {\n\t\t\tconst { name, ...options } = sequence;\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'byDefault',\n\t\t\t\tsequenceName: name,\n\t\t\t\tsequenceOptions: options,\n\t\t\t};\n\t\t} else {\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'byDefault',\n\t\t\t};\n\t\t}\n\n\t\tthis.config.hasDefault = true;\n\t\tthis.config.notNull = true;\n\n\t\treturn this as any;\n\t}\n}\n"],"names":[],"mappings":";;;AAMA,SAAS,kBAAkB;AAE3B,SAAS,uBAAuB;;;AAEzB,MAAe,iMAEZ,kBAAA,CAGR;IACD,OAAA,0IAAiB,aAAU,CAAA,GAAY,yBAAA;IAEvC,0BACC,QAAA,EACsC;QACtC,IAAI,UAAU;YACb,MAAM,EAAE,IAAA,EAAM,GAAG,QAAQ,CAAA,GAAI;YAC7B,IAAA,CAAK,MAAA,CAAO,iBAAA,GAAoB;gBAC/B,MAAM;gBACN,cAAc;gBACd,iBAAiB;YAClB;QACD,OAAO;YACN,IAAA,CAAK,MAAA,CAAO,iBAAA,GAAoB;gBAC/B,MAAM;YACP;QACD;QAEA,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,IAAA,CAAK,MAAA,CAAO,OAAA,GAAU;QAEtB,OAAO,IAAA;IACR;IAEA,6BACC,QAAA,EACyC;QACzC,IAAI,UAAU;YACb,MAAM,EAAE,IAAA,EAAM,GAAG,QAAQ,CAAA,GAAI;YAC7B,IAAA,CAAK,MAAA,CAAO,iBAAA,GAAoB;gBAC/B,MAAM;gBACN,cAAc;gBACd,iBAAiB;YAClB;QACD,OAAO;YACN,IAAA,CAAK,MAAA,CAAO,iBAAA,GAAoB;gBAC/B,MAAM;YACP;QACD;QAEA,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,IAAA,CAAK,MAAA,CAAO,OAAA,GAAU;QAEtB,OAAO,IAAA;IACR;AACD","ignoreList":[0]}},
    {"offset": {"line": 10508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10514, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/integer.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '../table.ts';\nimport { PgColumn } from './common.ts';\nimport { PgIntColumnBaseBuilder } from './int.common.ts';\n\ntype PgIntegerBuilderInitial<TName extends string> = PgIntegerBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'PgInteger';\n\tdata: number;\n\tdriverParam: number | string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgIntegerBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgInteger'>>\n\textends PgIntColumnBaseBuilder<T>\n{\n\tstatic readonly [entityKind]: string = 'PgIntegerBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'PgInteger');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgInteger<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgInteger<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgInteger<T extends ColumnBaseConfig<'number', 'PgInteger'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgInteger';\n\n\tgetSQLType(): string {\n\t\treturn 'integer';\n\t}\n\n\toverride mapFromDriverValue(value: number | string): number {\n\t\tif (typeof value === 'string') {\n\t\t\treturn Number.parseInt(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport function integer<TName extends string>(name: TName): PgIntegerBuilderInitial<TName> {\n\treturn new PgIntegerBuilder(name);\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAG3B,SAAS,8BAA8B;AADvC,SAAS,gBAAgB;;;;AAalB,MAAM,kMACJ,yBAAA,CACT;IACC,OAAA,0IAAiB,aAAU,CAAA,GAAY,mBAAA;IAEvC,YAAY,IAAA,CAAiB;QAC5B,KAAA,CAAM,MAAM,UAAU,WAAW;IAClC;IAAA,cAAA,GAGS,MACR,KAAA,EAC6C;QAC7C,OAAO,IAAI,UAA2C,OAAO,IAAA,CAAK,MAA8C;IACjH;AACD;AAEO,MAAM,mLAAqE,YAAA,CAAY;IAC7F,OAAA,0IAAiB,aAAU,CAAA,GAAY,YAAA;IAEvC,aAAqB;QACpB,OAAO;IACR;IAES,mBAAmB,KAAA,EAAgC;QAC3D,IAAI,OAAO,UAAU,UAAU;YAC9B,OAAO,OAAO,QAAA,CAAS,KAAK;QAC7B;QACA,OAAO;IACR;AACD;AAEO,SAAS,QAA8B,IAAA,EAA6C;IAC1F,OAAO,IAAI,iBAAiB,IAAI;AACjC","ignoreList":[0]}},
    {"offset": {"line": 10551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10557, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/varchar.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport type { Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgVarcharBuilderInitial<TName extends string, TEnum extends [string, ...string[]]> = PgVarcharBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgVarchar';\n\tdata: TEnum[number];\n\tdriverParam: string;\n\tenumValues: TEnum;\n\tgenerated: undefined;\n}>;\n\nexport class PgVarcharBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgVarchar'>> extends PgColumnBuilder<\n\tT,\n\t{ length: number | undefined; enumValues: T['enumValues'] }\n> {\n\tstatic readonly [entityKind]: string = 'PgVarcharBuilder';\n\n\tconstructor(name: string, config: PgVarcharConfig<T['enumValues']>) {\n\t\tsuper(name, 'string', 'PgVarchar');\n\t\tthis.config.length = config.length;\n\t\tthis.config.enumValues = config.enum;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgVarchar<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgVarchar<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgVarchar<T extends ColumnBaseConfig<'string', 'PgVarchar'>>\n\textends PgColumn<T, { length: number | undefined; enumValues: T['enumValues'] }>\n{\n\tstatic readonly [entityKind]: string = 'PgVarchar';\n\n\treadonly length = this.config.length;\n\toverride readonly enumValues = this.config.enumValues;\n\n\tgetSQLType(): string {\n\t\treturn this.length === undefined ? `varchar` : `varchar(${this.length})`;\n\t}\n}\n\nexport interface PgVarcharConfig<TEnum extends readonly string[] | string[] | undefined> {\n\tlength?: number;\n\tenum?: TEnum;\n}\n\nexport function varchar<TName extends string, U extends string, T extends Readonly<[U, ...U[]]>>(\n\tname: TName,\n\tconfig: PgVarcharConfig<T | Writable<T>> = {},\n): PgVarcharBuilderInitial<TName, Writable<T>> {\n\treturn new PgVarcharBuilder(name, config);\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAG3B,SAAS,UAAU,uBAAuB;;;AAYnC,MAAM,2LAAmF,kBAAA,CAG9F;IACD,OAAA,0IAAiB,aAAU,CAAA,GAAY,mBAAA;IAEvC,YAAY,IAAA,EAAc,MAAA,CAA0C;QACnE,KAAA,CAAM,MAAM,UAAU,WAAW;QACjC,IAAA,CAAK,MAAA,CAAO,MAAA,GAAS,OAAO,MAAA;QAC5B,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa,OAAO,IAAA;IACjC;IAAA,cAAA,GAGS,MACR,KAAA,EAC6C;QAC7C,OAAO,IAAI,UAA2C,OAAO,IAAA,CAAK,MAA8C;IACjH;AACD;AAEO,MAAM,oLACJ,WAAA,CACT;IACC,OAAA,0IAAiB,aAAU,CAAA,GAAY,YAAA;IAE9B,SAAS,IAAA,CAAK,MAAA,CAAO,MAAA,CAAA;IACZ,aAAa,IAAA,CAAK,MAAA,CAAO,UAAA,CAAA;IAE3C,aAAqB;QACpB,OAAO,IAAA,CAAK,MAAA,KAAW,KAAA,IAAY,CAAA,OAAA,CAAA,GAAY,CAAA,QAAA,EAAW,IAAA,CAAK,MAAM,CAAA,CAAA,CAAA;IACtE;AACD;AAOO,SAAS,QACf,IAAA,EACA,SAA2C,CAAC,CAAA,EACE;IAC9C,OAAO,IAAI,iBAAiB,MAAM,MAAM;AACzC","ignoreList":[0]}},
    {"offset": {"line": 10590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10596, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/text.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport type { Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\ntype PgTextBuilderInitial<TName extends string, TEnum extends [string, ...string[]]> = PgTextBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgText';\n\tdata: TEnum[number];\n\tenumValues: TEnum;\n\tdriverParam: string;\n\tgenerated: undefined;\n}>;\n\nexport class PgTextBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgText'>,\n> extends PgColumnBuilder<T, { enumValues: T['enumValues'] }> {\n\tstatic readonly [entityKind]: string = 'PgTextBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\tconfig: PgTextConfig<T['enumValues']>,\n\t) {\n\t\tsuper(name, 'string', 'PgText');\n\t\tthis.config.enumValues = config.enum;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgText<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgText<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgText<T extends ColumnBaseConfig<'string', 'PgText'>>\n\textends PgColumn<T, { enumValues: T['enumValues'] }>\n{\n\tstatic readonly [entityKind]: string = 'PgText';\n\n\toverride readonly enumValues = this.config.enumValues;\n\n\tgetSQLType(): string {\n\t\treturn 'text';\n\t}\n}\n\nexport interface PgTextConfig<TEnum extends readonly string[] | string[] | undefined> {\n\tenum?: TEnum;\n}\n\nexport function text<TName extends string, U extends string, T extends Readonly<[U, ...U[]]>>(\n\tname: TName,\n\tconfig: PgTextConfig<T | Writable<T>> = {},\n): PgTextBuilderInitial<TName, Writable<T>> {\n\treturn new PgTextBuilder(name, config);\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAG3B,SAAS,UAAU,uBAAuB;;;AAYnC,MAAM,wLAEH,kBAAA,CAAoD;IAC7D,OAAA,0IAAiB,aAAU,CAAA,GAAY,gBAAA;IAEvC,YACC,IAAA,EACA,MAAA,CACC;QACD,KAAA,CAAM,MAAM,UAAU,QAAQ;QAC9B,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa,OAAO,IAAA;IACjC;IAAA,cAAA,GAGS,MACR,KAAA,EAC0C;QAC1C,OAAO,IAAI,OAAwC,OAAO,IAAA,CAAK,MAA8C;IAC9G;AACD;AAEO,MAAM,iLACJ,WAAA,CACT;IACC,OAAA,0IAAiB,aAAU,CAAA,GAAY,SAAA;IAErB,aAAa,IAAA,CAAK,MAAA,CAAO,UAAA,CAAA;IAE3C,aAAqB;QACpB,OAAO;IACR;AACD;AAMO,SAAS,KACf,IAAA,EACA,SAAwC,CAAC,CAAA,EACE;IAC3C,OAAO,IAAI,cAAc,MAAM,MAAM;AACtC","ignoreList":[0]}},
    {"offset": {"line": 10627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10633, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/view-common.ts"],"sourcesContent":["export const ViewBaseConfig = Symbol.for('drizzle:ViewBaseConfig');\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB,OAAO,GAAA,CAAI,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 10639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10645, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/subquery.ts"],"sourcesContent":["import { entityKind } from './entity.ts';\nimport type { SQL, SQLWrapper } from './sql/sql.ts';\n\nexport interface Subquery<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTAlias extends string = string,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTSelectedFields extends Record<string, unknown> = Record<string, unknown>,\n> extends SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\nexport class Subquery<\n\tTAlias extends string = string,\n\tTSelectedFields extends Record<string, unknown> = Record<string, unknown>,\n> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Subquery';\n\n\tdeclare _: {\n\t\tbrand: 'Subquery';\n\t\tsql: SQL;\n\t\tselectedFields: TSelectedFields;\n\t\talias: TAlias;\n\t\tisWith: boolean;\n\t};\n\n\tconstructor(sql: SQL, selection: Record<string, unknown>, alias: string, isWith = false) {\n\t\tthis._ = {\n\t\t\tbrand: 'Subquery',\n\t\t\tsql,\n\t\t\tselectedFields: selection as TSelectedFields,\n\t\t\talias: alias as TAlias,\n\t\t\tisWith,\n\t\t};\n\t}\n\n\t// getSQL(): SQL<unknown> {\n\t// \treturn new SQL([this]);\n\t// }\n}\n\nexport class WithSubquery<\n\tTAlias extends string = string,\n\tTSelection extends Record<string, unknown> = Record<string, unknown>,\n> extends Subquery<TAlias, TSelection> {\n\tstatic readonly [entityKind]: string = 'WithSubquery';\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,kBAAkB;;AAWpB,MAAM,SAGW;IACvB,OAAA,0IAAiB,aAAU,CAAA,GAAY,WAAA;IAUvC,YAAY,GAAA,EAAU,SAAA,EAAoC,KAAA,EAAe,SAAS,KAAA,CAAO;QACxF,IAAA,CAAK,CAAA,GAAI;YACR,OAAO;YACP;YACA,gBAAgB;YAChB;YACA;QACD;IACD;AAKD;AAEO,MAAM,qBAGH,SAA6B;IACtC,OAAA,0IAAiB,aAAU,CAAA,GAAY,eAAA;AACxC","ignoreList":[0]}},
    {"offset": {"line": 10668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10674, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/drizzle-orm/version.js"],"sourcesContent":["// package.json\nvar version = \"0.33.0\";\n\n// src/version.ts\nvar compatibilityVersion = 7;\nexport {\n  compatibilityVersion,\n  version as npmVersion\n};\n"],"names":[],"mappings":"AAAA,eAAe;;;;;AACf,IAAI,UAAU;AAEd,iBAAiB;AACjB,IAAI,uBAAuB","ignoreList":[0]}},
    {"offset": {"line": 10683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10689, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/tracing.ts"],"sourcesContent":["import type { Span, Tracer } from '@opentelemetry/api';\nimport { iife } from '~/tracing-utils.ts';\nimport { npmVersion } from '~/version.ts';\n\nlet otel: typeof import('@opentelemetry/api') | undefined;\nlet rawTracer: Tracer | undefined;\n// try {\n// \totel = await import('@opentelemetry/api');\n// } catch (err: any) {\n// \tif (err.code !== 'MODULE_NOT_FOUND' && err.code !== 'ERR_MODULE_NOT_FOUND') {\n// \t\tthrow err;\n// \t}\n// }\n\ntype SpanName =\n\t| 'drizzle.operation'\n\t| 'drizzle.prepareQuery'\n\t| 'drizzle.buildSQL'\n\t| 'drizzle.execute'\n\t| 'drizzle.driver.execute'\n\t| 'drizzle.mapResponse';\n\n/** @internal */\nexport const tracer = {\n\tstartActiveSpan<F extends (span?: Span) => unknown>(name: SpanName, fn: F): ReturnType<F> {\n\t\tif (!otel) {\n\t\t\treturn fn() as ReturnType<F>;\n\t\t}\n\n\t\tif (!rawTracer) {\n\t\t\trawTracer = otel.trace.getTracer('drizzle-orm', npmVersion);\n\t\t}\n\n\t\treturn iife(\n\t\t\t(otel, rawTracer) =>\n\t\t\t\trawTracer.startActiveSpan(\n\t\t\t\t\tname,\n\t\t\t\t\t((span: Span) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn fn(span);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tspan.setStatus({\n\t\t\t\t\t\t\t\tcode: otel.SpanStatusCode.ERROR,\n\t\t\t\t\t\t\t\tmessage: e instanceof Error ? e.message : 'Unknown error', // eslint-disable-line no-instanceof/no-instanceof\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tspan.end();\n\t\t\t\t\t\t}\n\t\t\t\t\t}) as F,\n\t\t\t\t),\n\t\t\totel,\n\t\t\trawTracer,\n\t\t);\n\t},\n};\n"],"names":["otel","rawTracer"],"mappings":";;;AAEA,SAAS,kBAAkB;AAD3B,SAAS,YAAY;;;AAGrB,IAAI;AACJ,IAAI;AAkBG,MAAM,SAAS;IACrB,iBAAoD,IAAA,EAAgB,EAAA,EAAsB;QACzF,IAAI,CAAC,MAAM;YACV,OAAO,GAAG;QACX;QAEA,IAAI,CAAC,WAAW;YACf,YAAY,KAAK,KAAA,CAAM,SAAA,CAAU,yJAAe,aAAU;QAC3D;QAEA,8JAAO,OAAA,EACN,CAACA,OAAMC,aACNA,WAAU,eAAA,CACT,MACC,CAAC,SAAe;gBAChB,IAAI;oBACH,OAAO,GAAG,IAAI;gBACf,EAAA,OAAS,GAAG;oBACX,KAAK,SAAA,CAAU;wBACd,MAAMD,MAAK,cAAA,CAAe,KAAA;wBAC1B,SAAS,aAAa,QAAQ,EAAE,OAAA,GAAU;oBAC3C,CAAC;oBACD,MAAM;gBACP,SAAE;oBACD,KAAK,GAAA,CAAI;gBACV;YACD,IAEF,MACA;IAEF;AACD","ignoreList":[0]}},
    {"offset": {"line": 10723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10729, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/enum.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport type { Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgEnumColumnBuilderInitial<TName extends string, TValues extends [string, ...string[]]> =\n\tPgEnumColumnBuilder<{\n\t\tname: TName;\n\t\tdataType: 'string';\n\t\tcolumnType: 'PgEnumColumn';\n\t\tdata: TValues[number];\n\t\tenumValues: TValues;\n\t\tdriverParam: string;\n\t\tgenerated: undefined;\n\t}>;\n\nconst isPgEnumSym = Symbol.for('drizzle:isPgEnum');\nexport interface PgEnum<TValues extends [string, ...string[]]> {\n\t<TName extends string>(name: TName): PgEnumColumnBuilderInitial<TName, TValues>;\n\n\treadonly enumName: string;\n\treadonly enumValues: TValues;\n\treadonly schema: string | undefined;\n\t/** @internal */\n\t[isPgEnumSym]: true;\n}\n\nexport function isPgEnum(obj: unknown): obj is PgEnum<[string, ...string[]]> {\n\treturn !!obj && typeof obj === 'function' && isPgEnumSym in obj && obj[isPgEnumSym] === true;\n}\n\nexport class PgEnumColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgEnumColumn'> & { enumValues: [string, ...string[]] },\n> extends PgColumnBuilder<T, { enum: PgEnum<T['enumValues']> }> {\n\tstatic readonly [entityKind]: string = 'PgEnumColumnBuilder';\n\n\tconstructor(name: string, enumInstance: PgEnum<T['enumValues']>) {\n\t\tsuper(name, 'string', 'PgEnumColumn');\n\t\tthis.config.enum = enumInstance;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgEnumColumn<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgEnumColumn<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgEnumColumn<T extends ColumnBaseConfig<'string', 'PgEnumColumn'> & { enumValues: [string, ...string[]] }>\n\textends PgColumn<T, { enum: PgEnum<T['enumValues']> }>\n{\n\tstatic readonly [entityKind]: string = 'PgEnumColumn';\n\n\treadonly enum = this.config.enum;\n\toverride readonly enumValues = this.config.enum.enumValues;\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgEnumColumnBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.enum = config.enum;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn this.enum.enumName;\n\t}\n}\n\n// Gratitude to zod for the enum function types\nexport function pgEnum<U extends string, T extends Readonly<[U, ...U[]]>>(\n\tenumName: string,\n\tvalues: T | Writable<T>,\n): PgEnum<Writable<T>> {\n\treturn pgEnumWithSchema(enumName, values, undefined);\n}\n\n/** @internal */\nexport function pgEnumWithSchema<U extends string, T extends Readonly<[U, ...U[]]>>(\n\tenumName: string,\n\tvalues: T | Writable<T>,\n\tschema?: string,\n): PgEnum<Writable<T>> {\n\tconst enumInstance: PgEnum<Writable<T>> = Object.assign(\n\t\t<TName extends string>(name: TName): PgEnumColumnBuilderInitial<TName, Writable<T>> =>\n\t\t\tnew PgEnumColumnBuilder(name, enumInstance),\n\t\t{\n\t\t\tenumName,\n\t\t\tenumValues: values,\n\t\t\tschema,\n\t\t\t[isPgEnumSym]: true,\n\t\t} as const,\n\t);\n\n\treturn enumInstance;\n}\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,kBAAkB;AAG3B,SAAS,UAAU,uBAAuB;;;AAa1C,MAAM,cAAc,OAAO,GAAA,CAAI,kBAAkB;AAW1C,SAAS,SAAS,GAAA,EAAoD;IAC5E,OAAO,CAAC,CAAC,OAAO,OAAO,QAAQ,cAAc,eAAe,OAAO,GAAA,CAAI,WAAW,CAAA,KAAM;AACzF;AAEO,MAAM,8LAEH,kBAAA,CAAsD;IAC/D,OAAA,0IAAiB,aAAU,CAAA,GAAY,sBAAA;IAEvC,YAAY,IAAA,EAAc,YAAA,CAAuC;QAChE,KAAA,CAAM,MAAM,UAAU,cAAc;QACpC,IAAA,CAAK,MAAA,CAAO,IAAA,GAAO;IACpB;IAAA,cAAA,GAGS,MACR,KAAA,EACgD;QAChD,OAAO,IAAI,aACV,OACA,IAAA,CAAK,MAAA;IAEP;AACD;AAEO,MAAM,uLACJ,WAAA,CACT;IACC,OAAA,0IAAiB,aAAU,CAAA,GAAY,eAAA;IAE9B,OAAO,IAAA,CAAK,MAAA,CAAO,IAAA,CAAA;IACV,aAAa,IAAA,CAAK,MAAA,CAAO,IAAA,CAAK,UAAA,CAAA;IAEhD,YACC,KAAA,EACA,MAAA,CACC;QACD,KAAA,CAAM,OAAO,MAAM;QACnB,IAAA,CAAK,IAAA,GAAO,OAAO,IAAA;IACpB;IAEA,aAAqB;QACpB,OAAO,IAAA,CAAK,IAAA,CAAK,QAAA;IAClB;AACD;AAGO,SAAS,OACf,QAAA,EACA,MAAA,EACsB;IACtB,OAAO,iBAAiB,UAAU,QAAQ,KAAA,CAAS;AACpD;AAGO,SAAS,iBACf,QAAA,EACA,MAAA,EACA,MAAA,EACsB;IACtB,MAAM,eAAoC,OAAO,MAAA,CAChD,CAAuB,OACtB,IAAI,oBAAoB,MAAM,YAAY,GAC3C;QACC;QACA,YAAY;QACZ;QACA,CAAC,WAAW,CAAA,EAAG;IAChB;IAGD,OAAO;AACR","ignoreList":[0]}},
    {"offset": {"line": 10780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10786, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/sql/sql.ts"],"sourcesContent":["import { entityKind, is } from '~/entity.ts';\nimport type { SelectedFields } from '~/operations.ts';\nimport { isPgEnum } from '~/pg-core/columns/enum.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { tracer } from '~/tracing.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { AnyColumn } from '../column.ts';\nimport { Column } from '../column.ts';\nimport { Table } from '../table.ts';\n\n/**\n * This class is used to indicate a primitive param value that is used in `sql` tag.\n * It is only used on type level and is never instantiated at runtime.\n * If you see a value of this type in the code, its runtime value is actually the primitive param value.\n */\nexport class FakePrimitiveParam {\n\tstatic readonly [entityKind]: string = 'FakePrimitiveParam';\n}\n\nexport type Chunk =\n\t| string\n\t| Table\n\t| View\n\t| AnyColumn\n\t| Name\n\t| Param\n\t| Placeholder\n\t| SQL;\n\nexport interface BuildQueryConfig {\n\tescapeName(name: string): string;\n\tescapeParam(num: number, value: unknown): string;\n\tescapeString(str: string): string;\n\tprepareTyping?: (encoder: DriverValueEncoder<unknown, unknown>) => QueryTypingsValue;\n\tparamStartIndex?: { value: number };\n\tinlineParams?: boolean;\n\tinvokeSource?: 'indexes' | undefined;\n}\n\nexport type QueryTypingsValue = 'json' | 'decimal' | 'time' | 'timestamp' | 'uuid' | 'date' | 'none';\n\nexport interface Query {\n\tsql: string;\n\tparams: unknown[];\n}\n\nexport interface QueryWithTypings extends Query {\n\ttypings?: QueryTypingsValue[];\n}\n\n/**\n * Any value that implements the `getSQL` method. The implementations include:\n * - `Table`\n * - `Column`\n * - `View`\n * - `Subquery`\n * - `SQL`\n * - `SQL.Aliased`\n * - `Placeholder`\n * - `Param`\n */\nexport interface SQLWrapper {\n\tgetSQL(): SQL;\n\tshouldOmitSQLParens?(): boolean;\n}\n\nexport function isSQLWrapper(value: unknown): value is SQLWrapper {\n\treturn value !== null && value !== undefined && typeof (value as any).getSQL === 'function';\n}\n\nfunction mergeQueries(queries: QueryWithTypings[]): QueryWithTypings {\n\tconst result: QueryWithTypings = { sql: '', params: [] };\n\tfor (const query of queries) {\n\t\tresult.sql += query.sql;\n\t\tresult.params.push(...query.params);\n\t\tif (query.typings?.length) {\n\t\t\tif (!result.typings) {\n\t\t\t\tresult.typings = [];\n\t\t\t}\n\t\t\tresult.typings.push(...query.typings);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport class StringChunk implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'StringChunk';\n\n\treadonly value: string[];\n\n\tconstructor(value: string | string[]) {\n\t\tthis.value = Array.isArray(value) ? value : [value];\n\t}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\nexport class SQL<T = unknown> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'SQL';\n\n\tdeclare _: {\n\t\tbrand: 'SQL';\n\t\ttype: T;\n\t};\n\n\t/** @internal */\n\tdecoder: DriverValueDecoder<T, any> = noopDecoder;\n\tprivate shouldInlineParams = false;\n\n\tconstructor(readonly queryChunks: SQLChunk[]) {}\n\n\tappend(query: SQL): this {\n\t\tthis.queryChunks.push(...query.queryChunks);\n\t\treturn this;\n\t}\n\n\ttoQuery(config: BuildQueryConfig): QueryWithTypings {\n\t\treturn tracer.startActiveSpan('drizzle.buildSQL', (span) => {\n\t\t\tconst query = this.buildQueryFromSourceParams(this.queryChunks, config);\n\t\t\tspan?.setAttributes({\n\t\t\t\t'drizzle.query.text': query.sql,\n\t\t\t\t'drizzle.query.params': JSON.stringify(query.params),\n\t\t\t});\n\t\t\treturn query;\n\t\t});\n\t}\n\n\tbuildQueryFromSourceParams(chunks: SQLChunk[], _config: BuildQueryConfig): Query {\n\t\tconst config = Object.assign({}, _config, {\n\t\t\tinlineParams: _config.inlineParams || this.shouldInlineParams,\n\t\t\tparamStartIndex: _config.paramStartIndex || { value: 0 },\n\t\t});\n\n\t\tconst {\n\t\t\tescapeName,\n\t\t\tescapeParam,\n\t\t\tprepareTyping,\n\t\t\tinlineParams,\n\t\t\tparamStartIndex,\n\t\t} = config;\n\n\t\treturn mergeQueries(chunks.map((chunk): QueryWithTypings => {\n\t\t\tif (is(chunk, StringChunk)) {\n\t\t\t\treturn { sql: chunk.value.join(''), params: [] };\n\t\t\t}\n\n\t\t\tif (is(chunk, Name)) {\n\t\t\t\treturn { sql: escapeName(chunk.value), params: [] };\n\t\t\t}\n\n\t\t\tif (chunk === undefined) {\n\t\t\t\treturn { sql: '', params: [] };\n\t\t\t}\n\n\t\t\tif (Array.isArray(chunk)) {\n\t\t\t\tconst result: SQLChunk[] = [new StringChunk('(')];\n\t\t\t\tfor (const [i, p] of chunk.entries()) {\n\t\t\t\t\tresult.push(p);\n\t\t\t\t\tif (i < chunk.length - 1) {\n\t\t\t\t\t\tresult.push(new StringChunk(', '));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.push(new StringChunk(')'));\n\t\t\t\treturn this.buildQueryFromSourceParams(result, config);\n\t\t\t}\n\n\t\t\tif (is(chunk, SQL)) {\n\t\t\t\treturn this.buildQueryFromSourceParams(chunk.queryChunks, {\n\t\t\t\t\t...config,\n\t\t\t\t\tinlineParams: inlineParams || chunk.shouldInlineParams,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (is(chunk, Table)) {\n\t\t\t\tconst schemaName = chunk[Table.Symbol.Schema];\n\t\t\t\tconst tableName = chunk[Table.Symbol.Name];\n\t\t\t\treturn {\n\t\t\t\t\tsql: schemaName === undefined\n\t\t\t\t\t\t? escapeName(tableName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(tableName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, Column)) {\n\t\t\t\tif (_config.invokeSource === 'indexes') {\n\t\t\t\t\treturn { sql: escapeName(chunk.name), params: [] };\n\t\t\t\t}\n\t\t\t\treturn { sql: escapeName(chunk.table[Table.Symbol.Name]) + '.' + escapeName(chunk.name), params: [] };\n\t\t\t}\n\n\t\t\tif (is(chunk, View)) {\n\t\t\t\tconst schemaName = chunk[ViewBaseConfig].schema;\n\t\t\t\tconst viewName = chunk[ViewBaseConfig].name;\n\t\t\t\treturn {\n\t\t\t\t\tsql: schemaName === undefined\n\t\t\t\t\t\t? escapeName(viewName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(viewName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, Param)) {\n\t\t\t\tif (is(chunk.value, Placeholder)) {\n\t\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t\t\t}\n\n\t\t\t\tconst mappedValue = chunk.value === null ? null : chunk.encoder.mapToDriverValue(chunk.value);\n\n\t\t\t\tif (is(mappedValue, SQL)) {\n\t\t\t\t\treturn this.buildQueryFromSourceParams([mappedValue], config);\n\t\t\t\t}\n\n\t\t\t\tif (inlineParams) {\n\t\t\t\t\treturn { sql: this.mapInlineParam(mappedValue, config), params: [] };\n\t\t\t\t}\n\n\t\t\t\tlet typings: QueryTypingsValue[] = ['none'];\n\t\t\t\tif (prepareTyping) {\n\t\t\t\t\ttypings = [prepareTyping(chunk.encoder)];\n\t\t\t\t}\n\n\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, mappedValue), params: [mappedValue], typings };\n\t\t\t}\n\n\t\t\tif (is(chunk, Placeholder)) {\n\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t\t}\n\n\t\t\tif (is(chunk, SQL.Aliased) && chunk.fieldAlias !== undefined) {\n\t\t\t\treturn { sql: escapeName(chunk.fieldAlias), params: [] };\n\t\t\t}\n\n\t\t\tif (is(chunk, Subquery)) {\n\t\t\t\tif (chunk._.isWith) {\n\t\t\t\t\treturn { sql: escapeName(chunk._.alias), params: [] };\n\t\t\t\t}\n\t\t\t\treturn this.buildQueryFromSourceParams([\n\t\t\t\t\tnew StringChunk('('),\n\t\t\t\t\tchunk._.sql,\n\t\t\t\t\tnew StringChunk(') '),\n\t\t\t\t\tnew Name(chunk._.alias),\n\t\t\t\t], config);\n\t\t\t}\n\n\t\t\tif (isPgEnum(chunk)) {\n\t\t\t\tif (chunk.schema) {\n\t\t\t\t\treturn { sql: escapeName(chunk.schema) + '.' + escapeName(chunk.enumName), params: [] };\n\t\t\t\t}\n\t\t\t\treturn { sql: escapeName(chunk.enumName), params: [] };\n\t\t\t}\n\n\t\t\tif (isSQLWrapper(chunk)) {\n\t\t\t\tif (chunk.shouldOmitSQLParens?.()) {\n\t\t\t\t\treturn this.buildQueryFromSourceParams([chunk.getSQL()], config);\n\t\t\t\t}\n\t\t\t\treturn this.buildQueryFromSourceParams([\n\t\t\t\t\tnew StringChunk('('),\n\t\t\t\t\tchunk.getSQL(),\n\t\t\t\t\tnew StringChunk(')'),\n\t\t\t\t], config);\n\t\t\t}\n\n\t\t\tif (inlineParams) {\n\t\t\t\treturn { sql: this.mapInlineParam(chunk, config), params: [] };\n\t\t\t}\n\n\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t}));\n\t}\n\n\tprivate mapInlineParam(\n\t\tchunk: unknown,\n\t\t{ escapeString }: BuildQueryConfig,\n\t): string {\n\t\tif (chunk === null) {\n\t\t\treturn 'null';\n\t\t}\n\t\tif (typeof chunk === 'number' || typeof chunk === 'boolean') {\n\t\t\treturn chunk.toString();\n\t\t}\n\t\tif (typeof chunk === 'string') {\n\t\t\treturn escapeString(chunk);\n\t\t}\n\t\tif (typeof chunk === 'object') {\n\t\t\tconst mappedValueAsString = chunk.toString();\n\t\t\tif (mappedValueAsString === '[object Object]') {\n\t\t\t\treturn escapeString(JSON.stringify(chunk));\n\t\t\t}\n\t\t\treturn escapeString(mappedValueAsString);\n\t\t}\n\t\tthrow new Error('Unexpected param value: ' + chunk);\n\t}\n\n\tgetSQL(): SQL {\n\t\treturn this;\n\t}\n\n\tas(alias: string): SQL.Aliased<T>;\n\t/**\n\t * @deprecated\n\t * Use ``sql<DataType>`query`.as(alias)`` instead.\n\t */\n\tas<TData>(): SQL<TData>;\n\t/**\n\t * @deprecated\n\t * Use ``sql<DataType>`query`.as(alias)`` instead.\n\t */\n\tas<TData>(alias: string): SQL.Aliased<TData>;\n\tas(alias?: string): SQL<T> | SQL.Aliased<T> {\n\t\t// TODO: remove with deprecated overloads\n\t\tif (alias === undefined) {\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new SQL.Aliased(this, alias);\n\t}\n\n\tmapWith<\n\t\tTDecoder extends\n\t\t\t| DriverValueDecoder<any, any>\n\t\t\t| DriverValueDecoder<any, any>['mapFromDriverValue'],\n\t>(decoder: TDecoder): SQL<GetDecoderResult<TDecoder>> {\n\t\tthis.decoder = typeof decoder === 'function' ? { mapFromDriverValue: decoder } : decoder;\n\t\treturn this as SQL<GetDecoderResult<TDecoder>>;\n\t}\n\n\tinlineParams(): this {\n\t\tthis.shouldInlineParams = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * This method is used to conditionally include a part of the query.\n\t *\n\t * @param condition - Condition to check\n\t * @returns itself if the condition is `true`, otherwise `undefined`\n\t */\n\tif(condition: any | undefined): this | undefined {\n\t\treturn condition ? this : undefined;\n\t}\n}\n\nexport type GetDecoderResult<T> = T extends Column ? T['_']['data'] : T extends\n\t| DriverValueDecoder<infer TData, any>\n\t| DriverValueDecoder<infer TData, any>['mapFromDriverValue'] ? TData\n: never;\n\n/**\n * Any DB name (table, column, index etc.)\n */\nexport class Name implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Name';\n\n\tprotected brand!: 'Name';\n\n\tconstructor(readonly value: string) {}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/**\n * Any DB name (table, column, index etc.)\n * @deprecated Use `sql.identifier` instead.\n */\nexport function name(value: string): Name {\n\treturn new Name(value);\n}\n\nexport interface DriverValueDecoder<TData, TDriverParam> {\n\tmapFromDriverValue(value: TDriverParam): TData;\n}\n\nexport interface DriverValueEncoder<TData, TDriverParam> {\n\tmapToDriverValue(value: TData): TDriverParam | SQL;\n}\n\nexport function isDriverValueEncoder(value: unknown): value is DriverValueEncoder<any, any> {\n\treturn typeof value === 'object' && value !== null && 'mapToDriverValue' in value\n\t\t&& typeof (value as any).mapToDriverValue === 'function';\n}\n\nexport const noopDecoder: DriverValueDecoder<any, any> = {\n\tmapFromDriverValue: (value) => value,\n};\n\nexport const noopEncoder: DriverValueEncoder<any, any> = {\n\tmapToDriverValue: (value) => value,\n};\n\nexport interface DriverValueMapper<TData, TDriverParam>\n\textends DriverValueDecoder<TData, TDriverParam>, DriverValueEncoder<TData, TDriverParam>\n{}\n\nexport const noopMapper: DriverValueMapper<any, any> = {\n\t...noopDecoder,\n\t...noopEncoder,\n};\n\n/** Parameter value that is optionally bound to an encoder (for example, a column). */\nexport class Param<TDataType = unknown, TDriverParamType = TDataType> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Param';\n\n\tprotected brand!: 'BoundParamValue';\n\n\t/**\n\t * @param value - Parameter value\n\t * @param encoder - Encoder to convert the value to a driver parameter\n\t */\n\tconstructor(\n\t\treadonly value: TDataType,\n\t\treadonly encoder: DriverValueEncoder<TDataType, TDriverParamType> = noopEncoder,\n\t) {}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/** @deprecated Use `sql.param` instead. */\nexport function param<TData, TDriver>(\n\tvalue: TData,\n\tencoder?: DriverValueEncoder<TData, TDriver>,\n): Param<TData, TDriver> {\n\treturn new Param(value, encoder);\n}\n\n/**\n * Anything that can be passed to the `` sql`...` `` tagged function.\n */\nexport type SQLChunk =\n\t| StringChunk\n\t| SQLChunk[]\n\t| SQLWrapper\n\t| SQL\n\t| Table\n\t| View\n\t| Subquery\n\t| AnyColumn\n\t| Param\n\t| Name\n\t| undefined\n\t| FakePrimitiveParam\n\t| Placeholder;\n\nexport function sql<T>(strings: TemplateStringsArray, ...params: any[]): SQL<T>;\n/*\n\tThe type of `params` is specified as `SQLChunk[]`, but that's slightly incorrect -\n\tin runtime, users won't pass `FakePrimitiveParam` instances as `params` - they will pass primitive values\n\twhich will be wrapped in `Param`. That's why the overload specifies `params` as `any[]` and not as `SQLSourceParam[]`.\n\tThis type is used to make our lives easier and the type checker happy.\n*/\nexport function sql(strings: TemplateStringsArray, ...params: SQLChunk[]): SQL {\n\tconst queryChunks: SQLChunk[] = [];\n\tif (params.length > 0 || (strings.length > 0 && strings[0] !== '')) {\n\t\tqueryChunks.push(new StringChunk(strings[0]!));\n\t}\n\tfor (const [paramIndex, param] of params.entries()) {\n\t\tqueryChunks.push(param, new StringChunk(strings[paramIndex + 1]!));\n\t}\n\n\treturn new SQL(queryChunks);\n}\n\nexport namespace sql {\n\texport function empty(): SQL {\n\t\treturn new SQL([]);\n\t}\n\n\t/** @deprecated - use `sql.join()` */\n\texport function fromList(list: SQLChunk[]): SQL {\n\t\treturn new SQL(list);\n\t}\n\n\t/**\n\t * Convenience function to create an SQL query from a raw string.\n\t * @param str The raw SQL query string.\n\t */\n\texport function raw(str: string): SQL {\n\t\treturn new SQL([new StringChunk(str)]);\n\t}\n\n\t/**\n\t * Join a list of SQL chunks with a separator.\n\t * @example\n\t * ```ts\n\t * const query = sql.join([sql`a`, sql`b`, sql`c`]);\n\t * // sql`abc`\n\t * ```\n\t * @example\n\t * ```ts\n\t * const query = sql.join([sql`a`, sql`b`, sql`c`], sql`, `);\n\t * // sql`a, b, c`\n\t * ```\n\t */\n\texport function join(chunks: SQLChunk[], separator?: SQLChunk): SQL {\n\t\tconst result: SQLChunk[] = [];\n\t\tfor (const [i, chunk] of chunks.entries()) {\n\t\t\tif (i > 0 && separator !== undefined) {\n\t\t\t\tresult.push(separator);\n\t\t\t}\n\t\t\tresult.push(chunk);\n\t\t}\n\t\treturn new SQL(result);\n\t}\n\n\t/**\n\t * Create a SQL chunk that represents a DB identifier (table, column, index etc.).\n\t * When used in a query, the identifier will be escaped based on the DB engine.\n\t * For example, in PostgreSQL, identifiers are escaped with double quotes.\n\t *\n\t * **WARNING: This function does not offer any protection against SQL injections, so you must validate any user input beforehand.**\n\t *\n\t * @example ```ts\n\t * const query = sql`SELECT * FROM ${sql.identifier('my-table')}`;\n\t * // 'SELECT * FROM \"my-table\"'\n\t * ```\n\t */\n\texport function identifier(value: string): Name {\n\t\treturn new Name(value);\n\t}\n\n\texport function placeholder<TName extends string>(name: TName): Placeholder<TName> {\n\t\treturn new Placeholder(name);\n\t}\n\n\texport function param<TData, TDriver>(\n\t\tvalue: TData,\n\t\tencoder?: DriverValueEncoder<TData, TDriver>,\n\t): Param<TData, TDriver> {\n\t\treturn new Param(value, encoder);\n\t}\n}\n\nexport namespace SQL {\n\texport class Aliased<T = unknown> implements SQLWrapper {\n\t\tstatic readonly [entityKind]: string = 'SQL.Aliased';\n\n\t\tdeclare _: {\n\t\t\tbrand: 'SQL.Aliased';\n\t\t\ttype: T;\n\t\t};\n\n\t\t/** @internal */\n\t\tisSelectionField = false;\n\n\t\tconstructor(\n\t\t\treadonly sql: SQL,\n\t\t\treadonly fieldAlias: string,\n\t\t) {}\n\n\t\tgetSQL(): SQL {\n\t\t\treturn this.sql;\n\t\t}\n\n\t\t/** @internal */\n\t\tclone() {\n\t\t\treturn new Aliased(this.sql, this.fieldAlias);\n\t\t}\n\t}\n}\n\nexport class Placeholder<TName extends string = string, TValue = any> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Placeholder';\n\n\tdeclare protected: TValue;\n\n\tconstructor(readonly name: TName) {}\n\n\tgetSQL(): SQL {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/** @deprecated Use `sql.placeholder` instead. */\nexport function placeholder<TName extends string>(name: TName): Placeholder<TName> {\n\treturn new Placeholder(name);\n}\n\nexport function fillPlaceholders(params: unknown[], values: Record<string, unknown>): unknown[] {\n\treturn params.map((p) => {\n\t\tif (is(p, Placeholder)) {\n\t\t\tif (!(p.name in values)) {\n\t\t\t\tthrow new Error(`No value for placeholder \"${p.name}\" was provided`);\n\t\t\t}\n\n\t\t\treturn values[p.name];\n\t\t}\n\n\t\tif (is(p, Param) && is(p.value, Placeholder)) {\n\t\t\tif (!(p.value.name in values)) {\n\t\t\t\tthrow new Error(`No value for placeholder \"${p.value.name}\" was provided`);\n\t\t\t}\n\n\t\t\treturn p.encoder.mapToDriverValue(values[p.value.name]);\n\t\t}\n\n\t\treturn p;\n\t});\n}\n\nexport type ColumnsSelection = Record<string, unknown>;\n\nexport abstract class View<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n\tTSelection extends ColumnsSelection = ColumnsSelection,\n> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'View';\n\n\tdeclare _: {\n\t\tbrand: 'View';\n\t\tviewBrand: string;\n\t\tname: TName;\n\t\texisting: TExisting;\n\t\tselectedFields: TSelection;\n\t};\n\n\t/** @internal */\n\t[ViewBaseConfig]: {\n\t\tname: TName;\n\t\toriginalName: TName;\n\t\tschema: string | undefined;\n\t\tselectedFields: SelectedFields<AnyColumn, Table>;\n\t\tisExisting: TExisting;\n\t\tquery: TExisting extends true ? undefined : SQL;\n\t\tisAlias: boolean;\n\t};\n\n\tconstructor(\n\t\t{ name, schema, selectedFields, query }: {\n\t\t\tname: TName;\n\t\t\tschema: string | undefined;\n\t\t\tselectedFields: SelectedFields<AnyColumn, Table>;\n\t\t\tquery: SQL | undefined;\n\t\t},\n\t) {\n\t\tthis[ViewBaseConfig] = {\n\t\t\tname,\n\t\t\toriginalName: name,\n\t\t\tschema,\n\t\t\tselectedFields,\n\t\t\tquery: query as (TExisting extends true ? undefined : SQL),\n\t\t\tisExisting: !query as TExisting,\n\t\t\tisAlias: false,\n\t\t};\n\t}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\n// Defined separately from the Column class to resolve circular dependency\nColumn.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n\n// Defined separately from the Table class to resolve circular dependency\nTable.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n\n// Defined separately from the Column class to resolve circular dependency\nSubquery.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n"],"names":["param","sql","placeholder","name","SQL"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11297, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/date.common.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnDataType } from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport { sql } from '~/sql/sql.ts';\nimport { PgColumnBuilder } from './common.ts';\n\nexport abstract class PgDateColumnBaseBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n> extends PgColumnBuilder<T, TRuntimeConfig> {\n\tstatic readonly [entityKind]: string = 'PgDateColumnBaseBuilder';\n\n\tdefaultNow() {\n\t\treturn this.default(sql`now()`);\n\t}\n}\n"],"names":[],"mappings":";;;AACA,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,uBAAuB;;;;AAEzB,MAAe,kMAGZ,kBAAA,CAAmC;IAC5C,OAAA,0IAAiB,aAAU,CAAA,GAAY,0BAAA;IAEvC,aAAa;QACZ,OAAO,IAAA,CAAK,OAAA,8IAAQ,MAAA,CAAA,KAAA,CAAU;IAC/B;AACD","ignoreList":[0]}},
    {"offset": {"line": 11314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11320, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/timestamp.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport type { Equal } from '~/utils.ts';\nimport { PgColumn } from './common.ts';\nimport { PgDateColumnBaseBuilder } from './date.common.ts';\n\nexport type PgTimestampBuilderInitial<TName extends string> = PgTimestampBuilder<{\n\tname: TName;\n\tdataType: 'date';\n\tcolumnType: 'PgTimestamp';\n\tdata: Date;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgTimestampBuilder<T extends ColumnBuilderBaseConfig<'date', 'PgTimestamp'>>\n\textends PgDateColumnBaseBuilder<\n\t\tT,\n\t\t{ withTimezone: boolean; precision: number | undefined }\n\t>\n{\n\tstatic readonly [entityKind]: string = 'PgTimestampBuilder';\n\n\tconstructor(\n\t\tname: string,\n\t\twithTimezone: boolean,\n\t\tprecision: number | undefined,\n\t) {\n\t\tsuper(name, 'date', 'PgTimestamp');\n\t\tthis.config.withTimezone = withTimezone;\n\t\tthis.config.precision = precision;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgTimestamp<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgTimestamp<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgTimestamp<T extends ColumnBaseConfig<'date', 'PgTimestamp'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgTimestamp';\n\n\treadonly withTimezone: boolean;\n\treadonly precision: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgTimestampBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.withTimezone = config.withTimezone;\n\t\tthis.precision = config.precision;\n\t}\n\n\tgetSQLType(): string {\n\t\tconst precision = this.precision === undefined ? '' : ` (${this.precision})`;\n\t\treturn `timestamp${precision}${this.withTimezone ? ' with time zone' : ''}`;\n\t}\n\n\toverride mapFromDriverValue = (value: string): Date | null => {\n\t\treturn new Date(this.withTimezone ? value : value + '+0000');\n\t};\n\n\toverride mapToDriverValue = (value: Date): string => {\n\t\treturn value.toISOString();\n\t};\n}\n\nexport type PgTimestampStringBuilderInitial<TName extends string> = PgTimestampStringBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgTimestampString';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgTimestampStringBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgTimestampString'>>\n\textends PgDateColumnBaseBuilder<\n\t\tT,\n\t\t{ withTimezone: boolean; precision: number | undefined }\n\t>\n{\n\tstatic readonly [entityKind]: string = 'PgTimestampStringBuilder';\n\n\tconstructor(\n\t\tname: string,\n\t\twithTimezone: boolean,\n\t\tprecision: number | undefined,\n\t) {\n\t\tsuper(name, 'string', 'PgTimestampString');\n\t\tthis.config.withTimezone = withTimezone;\n\t\tthis.config.precision = precision;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgTimestampString<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgTimestampString<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgTimestampString<T extends ColumnBaseConfig<'string', 'PgTimestampString'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgTimestampString';\n\n\treadonly withTimezone: boolean;\n\treadonly precision: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgTimestampStringBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.withTimezone = config.withTimezone;\n\t\tthis.precision = config.precision;\n\t}\n\n\tgetSQLType(): string {\n\t\tconst precision = this.precision === undefined ? '' : `(${this.precision})`;\n\t\treturn `timestamp${precision}${this.withTimezone ? ' with time zone' : ''}`;\n\t}\n}\n\nexport type Precision = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport interface PgTimestampConfig<TMode extends 'date' | 'string' = 'date' | 'string'> {\n\tmode?: TMode;\n\tprecision?: Precision;\n\twithTimezone?: boolean;\n}\n\nexport function timestamp<TName extends string, TMode extends PgTimestampConfig['mode'] & {}>(\n\tname: TName,\n\tconfig?: PgTimestampConfig<TMode>,\n): Equal<TMode, 'string'> extends true ? PgTimestampStringBuilderInitial<TName> : PgTimestampBuilderInitial<TName>;\nexport function timestamp(\n\tname: string,\n\tconfig: PgTimestampConfig = {},\n) {\n\tif (config.mode === 'string') {\n\t\treturn new PgTimestampStringBuilder(name, config.withTimezone ?? false, config.precision);\n\t}\n\treturn new PgTimestampBuilder(name, config.withTimezone ?? false, config.precision);\n}\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,kBAAkB;AAI3B,SAAS,+BAA+B;AADxC,SAAS,gBAAgB;;;;AAalB,MAAM,qMACJ,0BAAA,CAIT;IACC,OAAA,0IAAiB,aAAU,CAAA,GAAY,qBAAA;IAEvC,YACC,IAAA,EACA,YAAA,EACA,SAAA,CACC;QACD,KAAA,CAAM,MAAM,QAAQ,aAAa;QACjC,IAAA,CAAK,MAAA,CAAO,YAAA,GAAe;QAC3B,IAAA,CAAK,MAAA,CAAO,SAAA,GAAY;IACzB;IAAA,cAAA,GAGS,MACR,KAAA,EAC+C;QAC/C,OAAO,IAAI,YAA6C,OAAO,IAAA,CAAK,MAA8C;IACnH;AACD;AAEO,MAAM,sLAAuE,WAAA,CAAY;IAC/F,OAAA,0IAAiB,aAAU,CAAA,GAAY,cAAA;IAE9B,aAAA;IACA,UAAA;IAET,YAAY,KAAA,EAA6C,MAAA,CAAyC;QACjG,KAAA,CAAM,OAAO,MAAM;QACnB,IAAA,CAAK,YAAA,GAAe,OAAO,YAAA;QAC3B,IAAA,CAAK,SAAA,GAAY,OAAO,SAAA;IACzB;IAEA,aAAqB;QACpB,MAAM,YAAY,IAAA,CAAK,SAAA,KAAc,KAAA,IAAY,KAAK,CAAA,EAAA,EAAK,IAAA,CAAK,SAAS,CAAA,CAAA,CAAA;QACzE,OAAO,CAAA,SAAA,EAAY,SAAS,GAAG,IAAA,CAAK,YAAA,GAAe,oBAAoB,EAAE,EAAA;IAC1E;IAES,qBAAqB,CAAC,UAA+B;QAC7D,OAAO,IAAI,KAAK,IAAA,CAAK,YAAA,GAAe,QAAQ,QAAQ,OAAO;IAC5D,EAAA;IAES,mBAAmB,CAAC,UAAwB;QACpD,OAAO,MAAM,WAAA,CAAY;IAC1B,EAAA;AACD;AAYO,MAAM,0MACJ,2BAAA,CAIT;IACC,OAAA,0IAAiB,aAAU,CAAA,GAAY,2BAAA;IAEvC,YACC,IAAA,EACA,YAAA,EACA,SAAA,CACC;QACD,KAAA,CAAM,MAAM,UAAU,mBAAmB;QACzC,IAAA,CAAK,MAAA,CAAO,YAAA,GAAe;QAC3B,IAAA,CAAK,MAAA,CAAO,SAAA,GAAY;IACzB;IAAA,cAAA,GAGS,MACR,KAAA,EACqD;QACrD,OAAO,IAAI,kBACV,OACA,IAAA,CAAK,MAAA;IAEP;AACD;AAEO,MAAM,4LAAqF,WAAA,CAAY;IAC7G,OAAA,yIAAiB,cAAU,CAAA,GAAY,oBAAA;IAE9B,aAAA;IACA,UAAA;IAET,YAAY,KAAA,EAA6C,MAAA,CAA+C;QACvG,KAAA,CAAM,OAAO,MAAM;QACnB,IAAA,CAAK,YAAA,GAAe,OAAO,YAAA;QAC3B,IAAA,CAAK,SAAA,GAAY,OAAO,SAAA;IACzB;IAEA,aAAqB;QACpB,MAAM,YAAY,IAAA,CAAK,SAAA,KAAc,KAAA,IAAY,KAAK,CAAA,CAAA,EAAI,IAAA,CAAK,SAAS,CAAA,CAAA,CAAA;QACxE,OAAO,CAAA,SAAA,EAAY,SAAS,GAAG,IAAA,CAAK,YAAA,GAAe,oBAAoB,EAAE,EAAA;IAC1E;AACD;AAcO,SAAS,UACf,IAAA,EACA,SAA4B,CAAC,CAAA,EAC5B;IACD,IAAI,OAAO,IAAA,KAAS,UAAU;QAC7B,OAAO,IAAI,yBAAyB,MAAM,OAAO,YAAA,IAAgB,OAAO,OAAO,SAAS;IACzF;IACA,OAAO,IAAI,mBAAmB,MAAM,OAAO,YAAA,IAAgB,OAAO,OAAO,SAAS;AACnF","ignoreList":[0]}},
    {"offset": {"line": 11397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11403, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/numeric.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgNumericBuilderInitial<TName extends string> = PgNumericBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgNumeric';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgNumericBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgNumeric'>> extends PgColumnBuilder<\n\tT,\n\t{\n\t\tprecision: number | undefined;\n\t\tscale: number | undefined;\n\t}\n> {\n\tstatic readonly [entityKind]: string = 'PgNumericBuilder';\n\n\tconstructor(name: string, precision?: number, scale?: number) {\n\t\tsuper(name, 'string', 'PgNumeric');\n\t\tthis.config.precision = precision;\n\t\tthis.config.scale = scale;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgNumeric<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgNumeric<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgNumeric<T extends ColumnBaseConfig<'string', 'PgNumeric'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgNumeric';\n\n\treadonly precision: number | undefined;\n\treadonly scale: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgNumericBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.precision = config.precision;\n\t\tthis.scale = config.scale;\n\t}\n\n\tgetSQLType(): string {\n\t\tif (this.precision !== undefined && this.scale !== undefined) {\n\t\t\treturn `numeric(${this.precision}, ${this.scale})`;\n\t\t} else if (this.precision === undefined) {\n\t\t\treturn 'numeric';\n\t\t} else {\n\t\t\treturn `numeric(${this.precision})`;\n\t\t}\n\t}\n}\n\nexport function numeric<TName extends string>(\n\tname: TName,\n\tconfig?:\n\t\t| { precision: number; scale?: number }\n\t\t| { precision?: number; scale: number }\n\t\t| { precision: number; scale: number },\n): PgNumericBuilderInitial<TName> {\n\treturn new PgNumericBuilder(name, config?.precision, config?.scale);\n}\n\nexport const decimal = numeric;\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,kBAAkB;AAE3B,SAAS,UAAU,uBAAuB;;;AAYnC,MAAM,2LAAmF,kBAAA,CAM9F;IACD,OAAA,0IAAiB,aAAU,CAAA,GAAY,mBAAA;IAEvC,YAAY,IAAA,EAAc,SAAA,EAAoB,KAAA,CAAgB;QAC7D,KAAA,CAAM,MAAM,UAAU,WAAW;QACjC,IAAA,CAAK,MAAA,CAAO,SAAA,GAAY;QACxB,IAAA,CAAK,MAAA,CAAO,KAAA,GAAQ;IACrB;IAAA,cAAA,GAGS,MACR,KAAA,EAC6C;QAC7C,OAAO,IAAI,UAA2C,OAAO,IAAA,CAAK,MAA8C;IACjH;AACD;AAEO,MAAM,oLAAqE,WAAA,CAAY;IAC7F,OAAA,0IAAiB,aAAU,CAAA,GAAY,YAAA;IAE9B,UAAA;IACA,MAAA;IAET,YAAY,KAAA,EAA6C,MAAA,CAAuC;QAC/F,KAAA,CAAM,OAAO,MAAM;QACnB,IAAA,CAAK,SAAA,GAAY,OAAO,SAAA;QACxB,IAAA,CAAK,KAAA,GAAQ,OAAO,KAAA;IACrB;IAEA,aAAqB;QACpB,IAAI,IAAA,CAAK,SAAA,KAAc,KAAA,KAAa,IAAA,CAAK,KAAA,KAAU,KAAA,GAAW;YAC7D,OAAO,CAAA,QAAA,EAAW,IAAA,CAAK,SAAS,CAAA,EAAA,EAAK,IAAA,CAAK,KAAK,CAAA,CAAA,CAAA;QAChD,OAAA,IAAW,IAAA,CAAK,SAAA,KAAc,KAAA,GAAW;YACxC,OAAO;QACR,OAAO;YACN,OAAO,CAAA,QAAA,EAAW,IAAA,CAAK,SAAS,CAAA,CAAA,CAAA;QACjC;IACD;AACD;AAEO,SAAS,QACf,IAAA,EACA,MAAA,EAIiC;IACjC,OAAO,IAAI,iBAAiB,MAAM,QAAQ,WAAW,QAAQ,KAAK;AACnE;AAEO,MAAM,UAAU","ignoreList":[0]}},
    {"offset": {"line": 11449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11455, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/indexes.ts"],"sourcesContent":["import { SQL } from '~/sql/sql.ts';\n\nimport { entityKind, is } from '~/entity.ts';\nimport type { ExtraConfigColumn, PgColumn } from './columns/index.ts';\nimport { IndexedColumn } from './columns/index.ts';\nimport type { PgTable } from './table.ts';\n\ninterface IndexConfig {\n\tname?: string;\n\n\tcolumns: Partial<IndexedColumn | SQL>[];\n\n\t/**\n\t * If true, the index will be created as `create unique index` instead of `create index`.\n\t */\n\tunique: boolean;\n\n\t/**\n\t * If true, the index will be created as `create index concurrently` instead of `create index`.\n\t */\n\tconcurrently?: boolean;\n\n\t/**\n\t * If true, the index will be created as `create index ... on only <table>` instead of `create index ... on <table>`.\n\t */\n\tonly: boolean;\n\n\t/**\n\t * Condition for partial index.\n\t */\n\twhere?: SQL;\n\n\t/**\n\t * The optional WITH clause specifies storage parameters for the index\n\t */\n\twith?: Record<string, any>;\n\n\t/**\n\t * The optional WITH clause method for the index\n\t */\n\tmethod?: 'btree' | string;\n}\n\nexport type IndexColumn = PgColumn;\n\nexport type PgIndexMethod = 'btree' | 'hash' | 'gist' | 'spgist' | 'gin' | 'brin' | 'hnsw' | 'ivfflat' | (string & {});\n\nexport type PgIndexOpClass =\n\t| 'abstime_ops'\n\t| 'access_method'\n\t| 'anyarray_eq'\n\t| 'anyarray_ge'\n\t| 'anyarray_gt'\n\t| 'anyarray_le'\n\t| 'anyarray_lt'\n\t| 'anyarray_ne'\n\t| 'bigint_ops'\n\t| 'bit_ops'\n\t| 'bool_ops'\n\t| 'box_ops'\n\t| 'bpchar_ops'\n\t| 'char_ops'\n\t| 'cidr_ops'\n\t| 'cstring_ops'\n\t| 'date_ops'\n\t| 'float_ops'\n\t| 'int2_ops'\n\t| 'int4_ops'\n\t| 'int8_ops'\n\t| 'interval_ops'\n\t| 'jsonb_ops'\n\t| 'macaddr_ops'\n\t| 'name_ops'\n\t| 'numeric_ops'\n\t| 'oid_ops'\n\t| 'oidint4_ops'\n\t| 'oidint8_ops'\n\t| 'oidname_ops'\n\t| 'oidvector_ops'\n\t| 'point_ops'\n\t| 'polygon_ops'\n\t| 'range_ops'\n\t| 'record_eq'\n\t| 'record_ge'\n\t| 'record_gt'\n\t| 'record_le'\n\t| 'record_lt'\n\t| 'record_ne'\n\t| 'text_ops'\n\t| 'time_ops'\n\t| 'timestamp_ops'\n\t| 'timestamptz_ops'\n\t| 'timetz_ops'\n\t| 'uuid_ops'\n\t| 'varbit_ops'\n\t| 'varchar_ops'\n\t// pg_vector types\n\t| 'xml_ops'\n\t| 'vector_l2_ops'\n\t| 'vector_ip_ops'\n\t| 'vector_cosine_ops'\n\t| 'vector_l1_ops'\n\t| 'bit_hamming_ops'\n\t| 'bit_jaccard_ops'\n\t| 'halfvec_l2_ops'\n\t| 'sparsevec_l2_op'\n\t| (string & {});\n\nexport class IndexBuilderOn {\n\tstatic readonly [entityKind]: string = 'PgIndexBuilderOn';\n\n\tconstructor(private unique: boolean, private name?: string) {}\n\n\ton(...columns: [Partial<ExtraConfigColumn> | SQL, ...Partial<ExtraConfigColumn | SQL>[]]): IndexBuilder {\n\t\treturn new IndexBuilder(\n\t\t\tcolumns.map((it) => {\n\t\t\t\tif (is(it, SQL)) {\n\t\t\t\t\treturn it;\n\t\t\t\t}\n\t\t\t\tit = it as ExtraConfigColumn;\n\t\t\t\tconst clonedIndexedColumn = new IndexedColumn(it.name, it.columnType!, it.indexConfig!);\n\t\t\t\tit.indexConfig = JSON.parse(JSON.stringify(it.defaultConfig));\n\t\t\t\treturn clonedIndexedColumn;\n\t\t\t}),\n\t\t\tthis.unique,\n\t\t\tfalse,\n\t\t\tthis.name,\n\t\t);\n\t}\n\n\tonOnly(...columns: [Partial<ExtraConfigColumn | SQL>, ...Partial<ExtraConfigColumn | SQL>[]]): IndexBuilder {\n\t\treturn new IndexBuilder(\n\t\t\tcolumns.map((it) => {\n\t\t\t\tif (is(it, SQL)) {\n\t\t\t\t\treturn it;\n\t\t\t\t}\n\t\t\t\tit = it as ExtraConfigColumn;\n\t\t\t\tconst clonedIndexedColumn = new IndexedColumn(it.name, it.columnType!, it.indexConfig!);\n\t\t\t\tit.indexConfig = it.defaultConfig;\n\t\t\t\treturn clonedIndexedColumn;\n\t\t\t}),\n\t\t\tthis.unique,\n\t\t\ttrue,\n\t\t\tthis.name,\n\t\t);\n\t}\n\n\t/**\n\t * Specify what index method to use. Choices are `btree`, `hash`, `gist`, `spgist`, `gin`, `brin`, or user-installed access methods like `bloom`. The default method is `btree.\n\t *\n\t * If you have the `pg_vector` extension installed in your database, you can use the `hnsw` and `ivfflat` options, which are predefined types.\n\t *\n\t * **You can always specify any string you want in the method, in case Drizzle doesn't have it natively in its types**\n\t *\n\t * @param method The name of the index method to be used\n\t * @param columns\n\t * @returns\n\t */\n\tusing(\n\t\tmethod: PgIndexMethod,\n\t\t...columns: [Partial<ExtraConfigColumn | SQL>, ...Partial<ExtraConfigColumn | SQL>[]]\n\t): IndexBuilder {\n\t\treturn new IndexBuilder(\n\t\t\tcolumns.map((it) => {\n\t\t\t\tif (is(it, SQL)) {\n\t\t\t\t\treturn it;\n\t\t\t\t}\n\t\t\t\tit = it as ExtraConfigColumn;\n\t\t\t\tconst clonedIndexedColumn = new IndexedColumn(it.name, it.columnType!, it.indexConfig!);\n\t\t\t\tit.indexConfig = JSON.parse(JSON.stringify(it.defaultConfig));\n\t\t\t\treturn clonedIndexedColumn;\n\t\t\t}),\n\t\t\tthis.unique,\n\t\t\ttrue,\n\t\t\tthis.name,\n\t\t\tmethod,\n\t\t);\n\t}\n}\n\nexport interface AnyIndexBuilder {\n\tbuild(table: PgTable): Index;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface IndexBuilder extends AnyIndexBuilder {}\n\nexport class IndexBuilder implements AnyIndexBuilder {\n\tstatic readonly [entityKind]: string = 'PgIndexBuilder';\n\n\t/** @internal */\n\tconfig: IndexConfig;\n\n\tconstructor(\n\t\tcolumns: Partial<IndexedColumn | SQL>[],\n\t\tunique: boolean,\n\t\tonly: boolean,\n\t\tname?: string,\n\t\tmethod: string = 'btree',\n\t) {\n\t\tthis.config = {\n\t\t\tname,\n\t\t\tcolumns,\n\t\t\tunique,\n\t\t\tonly,\n\t\t\tmethod,\n\t\t};\n\t}\n\n\tconcurrently(): this {\n\t\tthis.config.concurrently = true;\n\t\treturn this;\n\t}\n\n\twith(obj: Record<string, any>): this {\n\t\tthis.config.with = obj;\n\t\treturn this;\n\t}\n\n\twhere(condition: SQL): this {\n\t\tthis.config.where = condition;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): Index {\n\t\treturn new Index(this.config, table);\n\t}\n}\n\nexport class Index {\n\tstatic readonly [entityKind]: string = 'PgIndex';\n\n\treadonly config: IndexConfig & { table: PgTable };\n\n\tconstructor(config: IndexConfig, table: PgTable) {\n\t\tthis.config = { ...config, table };\n\t}\n}\n\nexport type GetColumnsTableName<TColumns> = TColumns extends PgColumn ? TColumns['_']['name']\n\t: TColumns extends PgColumn[] ? TColumns[number]['_']['name']\n\t: never;\n\nexport function index(name?: string): IndexBuilderOn {\n\treturn new IndexBuilderOn(false, name);\n}\n\nexport function uniqueIndex(name?: string): IndexBuilderOn {\n\treturn new IndexBuilderOn(true, name);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11570, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/utils.ts"],"sourcesContent":["import type { AnyColumn } from './column.ts';\nimport { Column } from './column.ts';\nimport { is } from './entity.ts';\nimport type { Logger } from './logger.ts';\nimport type { SelectedFieldsOrdered } from './operations.ts';\nimport type { TableLike } from './query-builders/select.types.ts';\nimport { Param, SQL, View } from './sql/sql.ts';\nimport type { DriverValueDecoder } from './sql/sql.ts';\nimport { Subquery } from './subquery.ts';\nimport { getTableName, Table } from './table.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\n/** @internal */\nexport function mapResultRow<TResult>(\n\tcolumns: SelectedFieldsOrdered<AnyColumn>,\n\trow: unknown[],\n\tjoinsNotNullableMap: Record<string, boolean> | undefined,\n): TResult {\n\t// Key -> nested object key, value -> table name if all fields in the nested object are from the same table, false otherwise\n\tconst nullifyMap: Record<string, string | false> = {};\n\n\tconst result = columns.reduce<Record<string, any>>(\n\t\t(result, { path, field }, columnIndex) => {\n\t\t\tlet decoder: DriverValueDecoder<unknown, unknown>;\n\t\t\tif (is(field, Column)) {\n\t\t\t\tdecoder = field;\n\t\t\t} else if (is(field, SQL)) {\n\t\t\t\tdecoder = field.decoder;\n\t\t\t} else {\n\t\t\t\tdecoder = field.sql.decoder;\n\t\t\t}\n\t\t\tlet node = result;\n\t\t\tfor (const [pathChunkIndex, pathChunk] of path.entries()) {\n\t\t\t\tif (pathChunkIndex < path.length - 1) {\n\t\t\t\t\tif (!(pathChunk in node)) {\n\t\t\t\t\t\tnode[pathChunk] = {};\n\t\t\t\t\t}\n\t\t\t\t\tnode = node[pathChunk];\n\t\t\t\t} else {\n\t\t\t\t\tconst rawValue = row[columnIndex]!;\n\t\t\t\t\tconst value = node[pathChunk] = rawValue === null ? null : decoder.mapFromDriverValue(rawValue);\n\n\t\t\t\t\tif (joinsNotNullableMap && is(field, Column) && path.length === 2) {\n\t\t\t\t\t\tconst objectName = path[0]!;\n\t\t\t\t\t\tif (!(objectName in nullifyMap)) {\n\t\t\t\t\t\t\tnullifyMap[objectName] = value === null ? getTableName(field.table) : false;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\ttypeof nullifyMap[objectName] === 'string' && nullifyMap[objectName] !== getTableName(field.table)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnullifyMap[objectName] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t{},\n\t);\n\n\t// Nullify all nested objects from nullifyMap that are nullable\n\tif (joinsNotNullableMap && Object.keys(nullifyMap).length > 0) {\n\t\tfor (const [objectName, tableName] of Object.entries(nullifyMap)) {\n\t\t\tif (typeof tableName === 'string' && !joinsNotNullableMap[tableName]) {\n\t\t\t\tresult[objectName] = null;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result as TResult;\n}\n\n/** @internal */\nexport function orderSelectedFields<TColumn extends AnyColumn>(\n\tfields: Record<string, unknown>,\n\tpathPrefix?: string[],\n): SelectedFieldsOrdered<TColumn> {\n\treturn Object.entries(fields).reduce<SelectedFieldsOrdered<AnyColumn>>((result, [name, field]) => {\n\t\tif (typeof name !== 'string') {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst newPath = pathPrefix ? [...pathPrefix, name] : [name];\n\t\tif (is(field, Column) || is(field, SQL) || is(field, SQL.Aliased)) {\n\t\t\tresult.push({ path: newPath, field });\n\t\t} else if (is(field, Table)) {\n\t\t\tresult.push(...orderSelectedFields(field[Table.Symbol.Columns], newPath));\n\t\t} else {\n\t\t\tresult.push(...orderSelectedFields(field as Record<string, unknown>, newPath));\n\t\t}\n\t\treturn result;\n\t}, []) as SelectedFieldsOrdered<TColumn>;\n}\n\nexport function haveSameKeys(left: Record<string, unknown>, right: Record<string, unknown>) {\n\tconst leftKeys = Object.keys(left);\n\tconst rightKeys = Object.keys(right);\n\n\tif (leftKeys.length !== rightKeys.length) {\n\t\treturn false;\n\t}\n\n\tfor (const [index, key] of leftKeys.entries()) {\n\t\tif (key !== rightKeys[index]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/** @internal */\nexport function mapUpdateSet(table: Table, values: Record<string, unknown>): UpdateSet {\n\tconst entries: [string, UpdateSet[string]][] = Object.entries(values)\n\t\t.filter(([, value]) => value !== undefined)\n\t\t.map(([key, value]) => {\n\t\t\t// eslint-disable-next-line unicorn/prefer-ternary\n\t\t\tif (is(value, SQL)) {\n\t\t\t\treturn [key, value];\n\t\t\t} else {\n\t\t\t\treturn [key, new Param(value, table[Table.Symbol.Columns][key])];\n\t\t\t}\n\t\t});\n\n\tif (entries.length === 0) {\n\t\tthrow new Error('No values to set');\n\t}\n\n\treturn Object.fromEntries(entries);\n}\n\nexport type UpdateSet = Record<string, SQL | Param | null | undefined>;\n\nexport type OneOrMany<T> = T | T[];\n\nexport type Update<T, TUpdate> =\n\t& {\n\t\t[K in Exclude<keyof T, keyof TUpdate>]: T[K];\n\t}\n\t& TUpdate;\n\nexport type Simplify<T> =\n\t& {\n\t\t// @ts-ignore - \"Type parameter 'K' has a circular constraint\", not sure why\n\t\t[K in keyof T]: T[K];\n\t}\n\t& {};\n\nexport type SimplifyMappedType<T> = [T] extends [unknown] ? T : never;\n\nexport type ShallowRecord<K extends keyof any, T> = SimplifyMappedType<{ [P in K]: T }>;\n\nexport type Assume<T, U> = T extends U ? T : U;\n\nexport type Equal<X, Y> = (<T>() => T extends X ? 1 : 2) extends (<T>() => T extends Y ? 1 : 2) ? true : false;\n\nexport interface DrizzleTypeError<T extends string> {\n\t$drizzleTypeError: T;\n}\n\nexport type ValueOrArray<T> = T | T[];\n\n/** @internal */\nexport function applyMixins(baseClass: any, extendedClasses: any[]) {\n\tfor (const extendedClass of extendedClasses) {\n\t\tfor (const name of Object.getOwnPropertyNames(extendedClass.prototype)) {\n\t\t\tif (name === 'constructor') continue;\n\n\t\t\tObject.defineProperty(\n\t\t\t\tbaseClass.prototype,\n\t\t\t\tname,\n\t\t\t\tObject.getOwnPropertyDescriptor(extendedClass.prototype, name) || Object.create(null),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport type Or<T1, T2> = T1 extends true ? true : T2 extends true ? true : false;\n\nexport type IfThenElse<If, Then, Else> = If extends true ? Then : Else;\n\nexport type PromiseOf<T> = T extends Promise<infer U> ? U : T;\n\nexport type Writable<T> = {\n\t-readonly [P in keyof T]: T[P];\n};\n\nexport function getTableColumns<T extends Table>(table: T): T['_']['columns'] {\n\treturn table[Table.Symbol.Columns];\n}\n\n/** @internal */\nexport function getTableLikeName(table: TableLike): string | undefined {\n\treturn is(table, Subquery)\n\t\t? table._.alias\n\t\t: is(table, View)\n\t\t? table[ViewBaseConfig].name\n\t\t: is(table, SQL)\n\t\t? undefined\n\t\t: table[Table.Symbol.IsAlias]\n\t\t? table[Table.Symbol.Name]\n\t\t: table[Table.Symbol.BaseName];\n}\n\nexport type ColumnsWithTable<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends AnyColumn<{ tableName: TTableName }>[],\n> = { [Key in keyof TColumns]: AnyColumn<{ tableName: TForeignTableName }> };\n\nexport interface DrizzleConfig<TSchema extends Record<string, unknown> = Record<string, never>> {\n\tlogger?: boolean | Logger;\n\tschema?: TSchema;\n}\nexport type ValidateShape<T, ValidShape, TResult = T> = T extends ValidShape\n\t? Exclude<keyof T, keyof ValidShape> extends never ? TResult\n\t: DrizzleTypeError<\n\t\t`Invalid key(s): ${Exclude<(keyof T) & (string | number | bigint | boolean | null | undefined), keyof ValidShape>}`\n\t>\n\t: never;\n\nexport type KnownKeysOnly<T, U> = {\n\t[K in keyof T]: K extends keyof U ? T[K] : never;\n};\n\nexport type IsAny<T> = 0 extends (1 & T) ? true : false;\n"],"names":["result"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11711, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/errors.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\n\nexport class DrizzleError extends Error {\n\tstatic readonly [entityKind]: string = 'DrizzleError';\n\n\tconstructor({ message, cause }: { message?: string; cause?: unknown }) {\n\t\tsuper(message);\n\t\tthis.name = 'DrizzleError';\n\t\tthis.cause = cause;\n\t}\n}\n\nexport class TransactionRollbackError extends DrizzleError {\n\tstatic readonly [entityKind]: string = 'TransactionRollbackError';\n\n\tconstructor() {\n\t\tsuper({ message: 'Rollback' });\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,kBAAkB;;AAEpB,MAAM,qBAAqB,MAAM;IACvC,OAAA,0IAAiB,aAAU,CAAA,GAAY,eAAA;IAEvC,YAAY,EAAE,OAAA,EAAS,KAAA,CAAM,CAAA,CAA0C;QACtE,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,IAAA,GAAO;QACZ,IAAA,CAAK,KAAA,GAAQ;IACd;AACD;AAEO,MAAM,iCAAiC,aAAa;IAC1D,OAAA,0IAAiB,aAAU,CAAA,GAAY,2BAAA;IAEvC,aAAc;QACb,KAAA,CAAM;YAAE,SAAS;QAAW,CAAC;IAC9B;AACD","ignoreList":[0]}},
    {"offset": {"line": 11735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11741, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/sql/expressions/conditions.ts"],"sourcesContent":["import { type AnyColumn, Column, type GetColumnData } from '~/column.ts';\nimport { is } from '~/entity.ts';\nimport { Table } from '~/table.ts';\nimport {\n\tisDriverValueEncoder,\n\tisSQLWrapper,\n\tParam,\n\tPlaceholder,\n\tSQL,\n\tsql,\n\ttype SQLChunk,\n\ttype SQLWrapper,\n\tStringChunk,\n\tView,\n} from '../sql.ts';\n\nexport function bindIfParam(value: unknown, column: SQLWrapper): SQLChunk {\n\tif (\n\t\tisDriverValueEncoder(column)\n\t\t&& !isSQLWrapper(value)\n\t\t&& !is(value, Param)\n\t\t&& !is(value, Placeholder)\n\t\t&& !is(value, Column)\n\t\t&& !is(value, Table)\n\t\t&& !is(value, View)\n\t) {\n\t\treturn new Param(value, column);\n\t}\n\treturn value as SQLChunk;\n}\n\nexport interface BinaryOperator {\n\t<TColumn extends Column>(\n\t\tleft: TColumn,\n\t\tright: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\t): SQL;\n\t<T>(left: SQL.Aliased<T>, right: T | SQLWrapper): SQL;\n\t<T extends SQLWrapper>(\n\t\tleft: Exclude<T, SQL.Aliased | Column>,\n\t\tright: unknown,\n\t): SQL;\n}\n\n/**\n * Test that two values are equal.\n *\n * Remember that the SQL standard dictates that\n * two NULL values are not equal, so if you want to test\n * whether a value is null, you may want to use\n * `isNull` instead.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by Ford\n * db.select().from(cars)\n *   .where(eq(cars.make, 'Ford'))\n * ```\n *\n * @see isNull for a way to test equality to NULL.\n */\nexport const eq: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} = ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that two values are not equal.\n *\n * Remember that the SQL standard dictates that\n * two NULL values are not equal, so if you want to test\n * whether a value is not null, you may want to use\n * `isNotNull` instead.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars not made by Ford\n * db.select().from(cars)\n *   .where(ne(cars.make, 'Ford'))\n * ```\n *\n * @see isNotNull for a way to test whether a value is not null.\n */\nexport const ne: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} <> ${bindIfParam(right, left)}`;\n};\n\n/**\n * Combine a list of conditions with the `and` operator. Conditions\n * that are equal `undefined` are automatically ignored.\n *\n * ## Examples\n *\n * ```ts\n * db.select().from(cars)\n *   .where(\n *     and(\n *       eq(cars.make, 'Volvo'),\n *       eq(cars.year, 1950),\n *     )\n *   )\n * ```\n */\nexport function and(...conditions: (SQLWrapper | undefined)[]): SQL | undefined;\nexport function and(\n\t...unfilteredConditions: (SQLWrapper | undefined)[]\n): SQL | undefined {\n\tconst conditions = unfilteredConditions.filter(\n\t\t(c): c is Exclude<typeof c, undefined> => c !== undefined,\n\t);\n\n\tif (conditions.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tif (conditions.length === 1) {\n\t\treturn new SQL(conditions);\n\t}\n\n\treturn new SQL([\n\t\tnew StringChunk('('),\n\t\tsql.join(conditions, new StringChunk(' and ')),\n\t\tnew StringChunk(')'),\n\t]);\n}\n\n/**\n * Combine a list of conditions with the `or` operator. Conditions\n * that are equal `undefined` are automatically ignored.\n *\n * ## Examples\n *\n * ```ts\n * db.select().from(cars)\n *   .where(\n *     or(\n *       eq(cars.make, 'GM'),\n *       eq(cars.make, 'Ford'),\n *     )\n *   )\n * ```\n */\nexport function or(...conditions: (SQLWrapper | undefined)[]): SQL | undefined;\nexport function or(\n\t...unfilteredConditions: (SQLWrapper | undefined)[]\n): SQL | undefined {\n\tconst conditions = unfilteredConditions.filter(\n\t\t(c): c is Exclude<typeof c, undefined> => c !== undefined,\n\t);\n\n\tif (conditions.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tif (conditions.length === 1) {\n\t\treturn new SQL(conditions);\n\t}\n\n\treturn new SQL([\n\t\tnew StringChunk('('),\n\t\tsql.join(conditions, new StringChunk(' or ')),\n\t\tnew StringChunk(')'),\n\t]);\n}\n\n/**\n * Negate the meaning of an expression using the `not` keyword.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars _not_ made by GM or Ford.\n * db.select().from(cars)\n *   .where(not(inArray(cars.make, ['GM', 'Ford'])))\n * ```\n */\nexport function not(condition: SQLWrapper): SQL {\n\treturn sql`not ${condition}`;\n}\n\n/**\n * Test that the first expression passed is greater than\n * the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made after 2000.\n * db.select().from(cars)\n *   .where(gt(cars.year, 2000))\n * ```\n *\n * @see gte for greater-than-or-equal\n */\nexport const gt: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} > ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is greater than\n * or equal to the second expression. Use `gt` to\n * test whether an expression is strictly greater\n * than another.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made on or after 2000.\n * db.select().from(cars)\n *   .where(gte(cars.year, 2000))\n * ```\n *\n * @see gt for a strictly greater-than condition\n */\nexport const gte: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} >= ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is less than\n * the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made before 2000.\n * db.select().from(cars)\n *   .where(lt(cars.year, 2000))\n * ```\n *\n * @see lte for less-than-or-equal\n */\nexport const lt: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} < ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is less than\n * or equal to the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made before 2000.\n * db.select().from(cars)\n *   .where(lte(cars.year, 2000))\n * ```\n *\n * @see lt for a strictly less-than condition\n */\nexport const lte: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} <= ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test whether the first parameter, a column or expression,\n * has a value from a list passed as the second argument.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by Ford or GM.\n * db.select().from(cars)\n *   .where(inArray(cars.make, ['Ford', 'GM']))\n * ```\n *\n * @see notInArray for the inverse of this test\n */\nexport function inArray<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function inArray<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function inArray<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function inArray(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\treturn sql`false`;\n\t\t}\n\t\treturn sql`${column} in ${values.map((v) => bindIfParam(v, column))}`;\n\t}\n\n\treturn sql`${column} in ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test whether the first parameter, a column or expression,\n * has a value that is not present in a list passed as the\n * second argument.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by any company except Ford or GM.\n * db.select().from(cars)\n *   .where(notInArray(cars.make, ['Ford', 'GM']))\n * ```\n *\n * @see inArray for the inverse of this test\n */\nexport function notInArray<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\treturn sql`true`;\n\t\t}\n\t\treturn sql`${column} not in ${values.map((v) => bindIfParam(v, column))}`;\n\t}\n\n\treturn sql`${column} not in ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test whether an expression is NULL. By the SQL standard,\n * NULL is neither equal nor not equal to itself, so\n * it's recommended to use `isNull` and `notIsNull` for\n * comparisons to NULL.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars that have no discontinuedAt date.\n * db.select().from(cars)\n *   .where(isNull(cars.discontinuedAt))\n * ```\n *\n * @see isNotNull for the inverse of this test\n */\nexport function isNull(value: SQLWrapper): SQL {\n\treturn sql`${value} is null`;\n}\n\n/**\n * Test whether an expression is not NULL. By the SQL standard,\n * NULL is neither equal nor not equal to itself, so\n * it's recommended to use `isNull` and `notIsNull` for\n * comparisons to NULL.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars that have been discontinued.\n * db.select().from(cars)\n *   .where(isNotNull(cars.discontinuedAt))\n * ```\n *\n * @see isNull for the inverse of this test\n */\nexport function isNotNull(value: SQLWrapper): SQL {\n\treturn sql`${value} is not null`;\n}\n\n/**\n * Test whether a subquery evaluates to have any rows.\n *\n * ## Examples\n *\n * ```ts\n * // Users whose `homeCity` column has a match in a cities\n * // table.\n * db\n *   .select()\n *   .from(users)\n *   .where(\n *     exists(db.select()\n *       .from(cities)\n *       .where(eq(users.homeCity, cities.id))),\n *   );\n * ```\n *\n * @see notExists for the inverse of this test\n */\nexport function exists(subquery: SQLWrapper): SQL {\n\treturn sql`exists ${subquery}`;\n}\n\n/**\n * Test whether a subquery doesn't include any result\n * rows.\n *\n * ## Examples\n *\n * ```ts\n * // Users whose `homeCity` column doesn't match\n * // a row in the cities table.\n * db\n *   .select()\n *   .from(users)\n *   .where(\n *     notExists(db.select()\n *       .from(cities)\n *       .where(eq(users.homeCity, cities.id))),\n *   );\n * ```\n *\n * @see exists for the inverse of this test\n */\nexport function notExists(subquery: SQLWrapper): SQL {\n\treturn sql`not exists ${subquery}`;\n}\n\n/**\n * Test whether an expression is between two values. This\n * is an easier way to express range tests, which would be\n * expressed mathematically as `x <= a <= y` but in SQL\n * would have to be like `a >= x AND a <= y`.\n *\n * Between is inclusive of the endpoints: if `column`\n * is equal to `min` or `max`, it will be TRUE.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made between 1990 and 2000\n * db.select().from(cars)\n *   .where(between(cars.year, 1990, 2000))\n * ```\n *\n * @see notBetween for the inverse of this test\n */\nexport function between<T>(\n\tcolumn: SQL.Aliased,\n\tmin: T | SQLWrapper,\n\tmax: T | SQLWrapper,\n): SQL;\nexport function between<TColumn extends AnyColumn>(\n\tcolumn: TColumn,\n\tmin: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\tmax: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n): SQL;\nexport function between<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tmin: unknown,\n\tmax: unknown,\n): SQL;\nexport function between(column: SQLWrapper, min: unknown, max: unknown): SQL {\n\treturn sql`${column} between ${bindIfParam(min, column)} and ${\n\t\tbindIfParam(\n\t\t\tmax,\n\t\t\tcolumn,\n\t\t)\n\t}`;\n}\n\n/**\n * Test whether an expression is not between two values.\n *\n * This, like `between`, includes its endpoints, so if\n * the `column` is equal to `min` or `max`, in this case\n * it will evaluate to FALSE.\n *\n * ## Examples\n *\n * ```ts\n * // Exclude cars made in the 1970s\n * db.select().from(cars)\n *   .where(notBetween(cars.year, 1970, 1979))\n * ```\n *\n * @see between for the inverse of this test\n */\nexport function notBetween<T>(\n\tcolumn: SQL.Aliased,\n\tmin: T | SQLWrapper,\n\tmax: T | SQLWrapper,\n): SQL;\nexport function notBetween<TColumn extends AnyColumn>(\n\tcolumn: TColumn,\n\tmin: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\tmax: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n): SQL;\nexport function notBetween<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tmin: unknown,\n\tmax: unknown,\n): SQL;\nexport function notBetween(\n\tcolumn: SQLWrapper,\n\tmin: unknown,\n\tmax: unknown,\n): SQL {\n\treturn sql`${column} not between ${\n\t\tbindIfParam(\n\t\t\tmin,\n\t\t\tcolumn,\n\t\t)\n\t} and ${bindIfParam(max, column)}`;\n}\n\n/**\n * Compare a column to a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars with 'Turbo' in their names.\n * db.select().from(cars)\n *   .where(like(cars.name, '%Turbo%'))\n * ```\n *\n * @see ilike for a case-insensitive version of this condition\n */\nexport function like(column: Column, value: string | SQLWrapper): SQL {\n\treturn sql`${column} like ${value}`;\n}\n\n/**\n * The inverse of like - this tests that a given column\n * does not match a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars that don't have \"ROver\" in their name.\n * db.select().from(cars)\n *   .where(notLike(cars.name, '%Rover%'))\n * ```\n *\n * @see like for the inverse condition\n * @see notIlike for a case-insensitive version of this condition\n */\nexport function notLike(column: Column, value: string | SQLWrapper): SQL {\n\treturn sql`${column} not like ${value}`;\n}\n\n/**\n * Case-insensitively compare a column to a pattern,\n * which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * Unlike like, this performs a case-insensitive comparison.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars with 'Turbo' in their names.\n * db.select().from(cars)\n *   .where(ilike(cars.name, '%Turbo%'))\n * ```\n *\n * @see like for a case-sensitive version of this condition\n */\nexport function ilike(column: Column, value: string | SQLWrapper): SQL {\n\treturn sql`${column} ilike ${value}`;\n}\n\n/**\n * The inverse of ilike - this case-insensitively tests that a given column\n * does not match a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars that don't have \"Rover\" in their name.\n * db.select().from(cars)\n *   .where(notLike(cars.name, '%Rover%'))\n * ```\n *\n * @see ilike for the inverse condition\n * @see notLike for a case-sensitive version of this condition\n */\nexport function notIlike(column: Column, value: string | SQLWrapper): SQL {\n\treturn sql`${column} not ilike ${value}`;\n}\n\n/**\n * Test that a column or expression contains all elements of\n * the list passed as the second argument.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\" and \"ORM\".\n * db.select().from(posts)\n *   .where(arrayContains(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContained to find if an array contains all elements of a column or expression\n * @see arrayOverlaps to find if a column or expression contains any elements of an array\n */\nexport function arrayContains<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContains<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContains<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayContains(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayContains requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} @> ${array}`;\n\t}\n\n\treturn sql`${column} @> ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test that the list passed as the second argument contains\n * all elements of a column or expression.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\", \"ORM\" or both,\n * // but filtering posts that have additional tags.\n * db.select().from(posts)\n *   .where(arrayContained(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContains to find if a column or expression contains all elements of an array\n * @see arrayOverlaps to find if a column or expression contains any elements of an array\n */\nexport function arrayContained<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContained<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContained<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayContained(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayContained requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} <@ ${array}`;\n\t}\n\n\treturn sql`${column} <@ ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test that a column or expression contains any elements of\n * the list passed as the second argument.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\", \"ORM\" or both.\n * db.select().from(posts)\n *   .where(arrayOverlaps(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContains to find if a column or expression contains all elements of an array\n * @see arrayContained to find if an array contains all elements of a column or expression\n */\nexport function arrayOverlaps<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayOverlaps<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayOverlaps<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayOverlaps(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayOverlaps requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} && ${array}`;\n\t}\n\n\treturn sql`${column} && ${bindIfParam(values, column)}`;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11911, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11917, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/sql/expressions/select.ts"],"sourcesContent":["import type { AnyColumn } from '../../column.ts';\nimport type { SQL, SQLWrapper } from '../sql.ts';\nimport { sql } from '../sql.ts';\n\n/**\n * Used in sorting, this specifies that the given\n * column or expression should be sorted in ascending\n * order. By the SQL standard, ascending order is the\n * default, so it is not usually necessary to specify\n * ascending sort order.\n *\n * ## Examples\n *\n * ```ts\n * // Return cars, starting with the oldest models\n * // and going in ascending order to the newest.\n * db.select().from(cars)\n *   .orderBy(asc(cars.year));\n * ```\n *\n * @see desc to sort in descending order\n */\nexport function asc(column: AnyColumn | SQLWrapper): SQL {\n\treturn sql`${column} asc`;\n}\n\n/**\n * Used in sorting, this specifies that the given\n * column or expression should be sorted in descending\n * order.\n *\n * ## Examples\n *\n * ```ts\n * // Select users, with the most recently created\n * // records coming first.\n * db.select().from(users)\n *   .orderBy(desc(users.createdAt));\n * ```\n *\n * @see asc to sort in ascending order\n */\nexport function desc(column: AnyColumn | SQLWrapper): SQL {\n\treturn sql`${column} desc`;\n}\n"],"names":[],"mappings":";;;;AAEA,SAAS,WAAW;;AAoBb,SAAS,IAAI,MAAA,EAAqC;IACxD,oJAAO,MAAA,CAAA,EAAM,MAAM,CAAA,IAAA,CAAA;AACpB;AAkBO,SAAS,KAAK,MAAA,EAAqC;IACzD,oJAAO,MAAA,CAAA,EAAM,MAAM,CAAA,KAAA,CAAA;AACpB","ignoreList":[0]}},
    {"offset": {"line": 11931, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11937, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/primary-keys.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { AnyPgColumn, PgColumn } from './columns/index.ts';\nimport { PgTable } from './table.ts';\n\nexport function primaryKey<\n\tTTableName extends string,\n\tTColumn extends AnyPgColumn<{ tableName: TTableName }>,\n\tTColumns extends AnyPgColumn<{ tableName: TTableName }>[],\n>(config: { name?: string; columns: [TColumn, ...TColumns] }): PrimaryKeyBuilder;\n/**\n * @deprecated: Please use primaryKey({ columns: [] }) instead of this function\n * @param columns\n */\nexport function primaryKey<\n\tTTableName extends string,\n\tTColumns extends AnyPgColumn<{ tableName: TTableName }>[],\n>(...columns: TColumns): PrimaryKeyBuilder;\nexport function primaryKey(...config: any) {\n\tif (config[0].columns) {\n\t\treturn new PrimaryKeyBuilder(config[0].columns, config[0].name);\n\t}\n\treturn new PrimaryKeyBuilder(config);\n}\n\nexport class PrimaryKeyBuilder {\n\tstatic readonly [entityKind]: string = 'PgPrimaryKeyBuilder';\n\n\t/** @internal */\n\tcolumns: PgColumn[];\n\n\t/** @internal */\n\tname?: string;\n\n\tconstructor(\n\t\tcolumns: PgColumn[],\n\t\tname?: string,\n\t) {\n\t\tthis.columns = columns;\n\t\tthis.name = name;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): PrimaryKey {\n\t\treturn new PrimaryKey(table, this.columns, this.name);\n\t}\n}\n\nexport class PrimaryKey {\n\tstatic readonly [entityKind]: string = 'PgPrimaryKey';\n\n\treadonly columns: AnyPgColumn<{}>[];\n\treadonly name?: string;\n\n\tconstructor(readonly table: PgTable, columns: AnyPgColumn<{}>[], name?: string) {\n\t\tthis.columns = columns;\n\t\tthis.name = name;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name ?? `${this.table[PgTable.Symbol.Name]}_${this.columns.map((column) => column.name).join('_')}_pk`;\n\t}\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,kBAAkB;AAE3B,SAAS,eAAe;;;AAejB,SAAS,WAAA,GAAc,MAAA,EAAa;IAC1C,IAAI,MAAA,CAAO,CAAC,CAAA,CAAE,OAAA,EAAS;QACtB,OAAO,IAAI,kBAAkB,MAAA,CAAO,CAAC,CAAA,CAAE,OAAA,EAAS,MAAA,CAAO,CAAC,CAAA,CAAE,IAAI;IAC/D;IACA,OAAO,IAAI,kBAAkB,MAAM;AACpC;AAEO,MAAM,kBAAkB;IAC9B,OAAA,0IAAiB,aAAU,CAAA,GAAY,sBAAA;IAAA,cAAA,GAGvC,QAAA;IAAA,cAAA,GAGA,KAAA;IAEA,YACC,OAAA,EACA,IAAA,CACC;QACD,IAAA,CAAK,OAAA,GAAU;QACf,IAAA,CAAK,IAAA,GAAO;IACb;IAAA,cAAA,GAGA,MAAM,KAAA,EAA4B;QACjC,OAAO,IAAI,WAAW,OAAO,IAAA,CAAK,OAAA,EAAS,IAAA,CAAK,IAAI;IACrD;AACD;AAEO,MAAM,WAAW;IAMvB,YAAqB,KAAA,EAAgB,OAAA,EAA4B,IAAA,CAAe;QAA3D,IAAA,CAAA,KAAA,GAAA;QACpB,IAAA,CAAK,OAAA,GAAU;QACf,IAAA,CAAK,IAAA,GAAO;IACb;IARA,OAAA,0IAAiB,aAAU,CAAA,GAAY,eAAA;IAE9B,QAAA;IACA,KAAA;IAOT,UAAkB;QACjB,OAAO,IAAA,CAAK,IAAA,IAAQ,GAAG,IAAA,CAAK,KAAA,uJAAM,UAAA,CAAQ,MAAA,CAAO,IAAI,CAAC,CAAA,CAAA,EAAI,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAC,SAAW,OAAO,IAAI,EAAE,IAAA,CAAK,GAAG,CAAC,CAAA,GAAA,CAAA;IAC9G;AACD","ignoreList":[0]}},
    {"offset": {"line": 11979, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11985, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/relations.ts"],"sourcesContent":["import { type AnyTable, getTableUniqueName, type InferModelFromColumns, Table } from '~/table.ts';\nimport { type AnyColumn, Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport { PrimaryKeyBuilder } from './pg-core/primary-keys.ts';\nimport {\n\tand,\n\tasc,\n\tbetween,\n\tdesc,\n\teq,\n\texists,\n\tgt,\n\tgte,\n\tilike,\n\tinArray,\n\tisNotNull,\n\tisNull,\n\tlike,\n\tlt,\n\tlte,\n\tne,\n\tnot,\n\tnotBetween,\n\tnotExists,\n\tnotIlike,\n\tnotInArray,\n\tnotLike,\n\tor,\n} from './sql/expressions/index.ts';\nimport { type Placeholder, SQL, sql } from './sql/sql.ts';\nimport type { Assume, ColumnsWithTable, Equal, Simplify, ValueOrArray } from './utils.ts';\n\nexport abstract class Relation<TTableName extends string = string> {\n\tstatic readonly [entityKind]: string = 'Relation';\n\n\tdeclare readonly $brand: 'Relation';\n\treadonly referencedTableName: TTableName;\n\tfieldName!: string;\n\n\tconstructor(\n\t\treadonly sourceTable: Table,\n\t\treadonly referencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly relationName: string | undefined,\n\t) {\n\t\tthis.referencedTableName = referencedTable[Table.Symbol.Name] as TTableName;\n\t}\n\n\tabstract withFieldName(fieldName: string): Relation<TTableName>;\n}\n\nexport class Relations<\n\tTTableName extends string = string,\n\tTConfig extends Record<string, Relation> = Record<string, Relation>,\n> {\n\tstatic readonly [entityKind]: string = 'Relations';\n\n\tdeclare readonly $brand: 'Relations';\n\n\tconstructor(\n\t\treadonly table: AnyTable<{ name: TTableName }>,\n\t\treadonly config: (helpers: TableRelationsHelpers<TTableName>) => TConfig,\n\t) {}\n}\n\nexport class One<\n\tTTableName extends string = string,\n\tTIsNullable extends boolean = boolean,\n> extends Relation<TTableName> {\n\tstatic readonly [entityKind]: string = 'One';\n\n\tdeclare protected $relationBrand: 'One';\n\n\tconstructor(\n\t\tsourceTable: Table,\n\t\treferencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly config:\n\t\t\t| RelationConfig<\n\t\t\t\tTTableName,\n\t\t\t\tstring,\n\t\t\t\tAnyColumn<{ tableName: TTableName }>[]\n\t\t\t>\n\t\t\t| undefined,\n\t\treadonly isNullable: TIsNullable,\n\t) {\n\t\tsuper(sourceTable, referencedTable, config?.relationName);\n\t}\n\n\twithFieldName(fieldName: string): One<TTableName> {\n\t\tconst relation = new One(\n\t\t\tthis.sourceTable,\n\t\t\tthis.referencedTable,\n\t\t\tthis.config,\n\t\t\tthis.isNullable,\n\t\t);\n\t\trelation.fieldName = fieldName;\n\t\treturn relation;\n\t}\n}\n\nexport class Many<TTableName extends string> extends Relation<TTableName> {\n\tstatic readonly [entityKind]: string = 'Many';\n\n\tdeclare protected $relationBrand: 'Many';\n\n\tconstructor(\n\t\tsourceTable: Table,\n\t\treferencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly config: { relationName: string } | undefined,\n\t) {\n\t\tsuper(sourceTable, referencedTable, config?.relationName);\n\t}\n\n\twithFieldName(fieldName: string): Many<TTableName> {\n\t\tconst relation = new Many(\n\t\t\tthis.sourceTable,\n\t\t\tthis.referencedTable,\n\t\t\tthis.config,\n\t\t);\n\t\trelation.fieldName = fieldName;\n\t\treturn relation;\n\t}\n}\n\nexport type TableRelationsKeysOnly<\n\tTSchema extends Record<string, unknown>,\n\tTTableName extends string,\n\tK extends keyof TSchema,\n> = TSchema[K] extends Relations<TTableName> ? K : never;\n\nexport type ExtractTableRelationsFromSchema<\n\tTSchema extends Record<string, unknown>,\n\tTTableName extends string,\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TSchema as TableRelationsKeysOnly<\n\t\t\t\tTSchema,\n\t\t\t\tTTableName,\n\t\t\t\tK\n\t\t\t>\n\t\t]: TSchema[K] extends Relations<TTableName, infer TConfig> ? TConfig : never;\n\t}\n>;\n\nexport type ExtractObjectValues<T> = T[keyof T];\n\nexport type ExtractRelationsFromTableExtraConfigSchema<\n\tTConfig extends unknown[],\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TConfig as TConfig[K] extends Relations<any> ? K\n\t\t\t\t: never\n\t\t]: TConfig[K] extends Relations<infer TRelationConfig> ? TRelationConfig\n\t\t\t: never;\n\t}\n>;\n\nexport function getOperators() {\n\treturn {\n\t\tand,\n\t\tbetween,\n\t\teq,\n\t\texists,\n\t\tgt,\n\t\tgte,\n\t\tilike,\n\t\tinArray,\n\t\tisNull,\n\t\tisNotNull,\n\t\tlike,\n\t\tlt,\n\t\tlte,\n\t\tne,\n\t\tnot,\n\t\tnotBetween,\n\t\tnotExists,\n\t\tnotLike,\n\t\tnotIlike,\n\t\tnotInArray,\n\t\tor,\n\t\tsql,\n\t};\n}\n\nexport type Operators = ReturnType<typeof getOperators>;\n\nexport function getOrderByOperators() {\n\treturn {\n\t\tsql,\n\t\tasc,\n\t\tdesc,\n\t};\n}\n\nexport type OrderByOperators = ReturnType<typeof getOrderByOperators>;\n\nexport type FindTableByDBName<\n\tTSchema extends TablesRelationalConfig,\n\tTTableName extends string,\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TSchema as TSchema[K]['dbName'] extends TTableName ? K\n\t\t\t\t: never\n\t\t]: TSchema[K];\n\t}\n>;\n\nexport type DBQueryConfig<\n\tTRelationType extends 'one' | 'many' = 'one' | 'many',\n\tTIsRoot extends boolean = boolean,\n\tTSchema extends TablesRelationalConfig = TablesRelationalConfig,\n\tTTableConfig extends TableRelationalConfig = TableRelationalConfig,\n> =\n\t& {\n\t\tcolumns?: {\n\t\t\t[K in keyof TTableConfig['columns']]?: boolean;\n\t\t};\n\t\twith?: {\n\t\t\t[K in keyof TTableConfig['relations']]?:\n\t\t\t\t| true\n\t\t\t\t| DBQueryConfig<\n\t\t\t\t\tTTableConfig['relations'][K] extends One ? 'one' : 'many',\n\t\t\t\t\tfalse,\n\t\t\t\t\tTSchema,\n\t\t\t\t\tFindTableByDBName<\n\t\t\t\t\t\tTSchema,\n\t\t\t\t\t\tTTableConfig['relations'][K]['referencedTableName']\n\t\t\t\t\t>\n\t\t\t\t>;\n\t\t};\n\t\textras?:\n\t\t\t| Record<string, SQL.Aliased>\n\t\t\t| ((\n\t\t\t\tfields: Simplify<\n\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t>,\n\t\t\t\toperators: { sql: Operators['sql'] },\n\t\t\t) => Record<string, SQL.Aliased>);\n\t}\n\t& (TRelationType extends 'many' ?\n\t\t\t& {\n\t\t\t\twhere?:\n\t\t\t\t\t| SQL\n\t\t\t\t\t| undefined\n\t\t\t\t\t| ((\n\t\t\t\t\t\tfields: Simplify<\n\t\t\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t\t\t>,\n\t\t\t\t\t\toperators: Operators,\n\t\t\t\t\t) => SQL | undefined);\n\t\t\t\torderBy?:\n\t\t\t\t\t| ValueOrArray<AnyColumn | SQL>\n\t\t\t\t\t| ((\n\t\t\t\t\t\tfields: Simplify<\n\t\t\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t\t\t>,\n\t\t\t\t\t\toperators: OrderByOperators,\n\t\t\t\t\t) => ValueOrArray<AnyColumn | SQL>);\n\t\t\t\tlimit?: number | Placeholder;\n\t\t\t}\n\t\t\t& (TIsRoot extends true ? {\n\t\t\t\t\toffset?: number | Placeholder;\n\t\t\t\t}\n\t\t\t\t: {})\n\t\t: {});\n\nexport interface TableRelationalConfig {\n\ttsName: string;\n\tdbName: string;\n\tcolumns: Record<string, Column>;\n\trelations: Record<string, Relation>;\n\tprimaryKey: AnyColumn[];\n\tschema?: string;\n}\n\nexport type TablesRelationalConfig = Record<string, TableRelationalConfig>;\n\nexport interface RelationalSchemaConfig<\n\tTSchema extends TablesRelationalConfig,\n> {\n\tfullSchema: Record<string, unknown>;\n\tschema: TSchema;\n\ttableNamesMap: Record<string, string>;\n}\n\nexport type ExtractTablesWithRelations<\n\tTSchema extends Record<string, unknown>,\n> = {\n\t[\n\t\tK in keyof TSchema as TSchema[K] extends Table ? K\n\t\t\t: never\n\t]: TSchema[K] extends Table ? {\n\t\t\ttsName: K & string;\n\t\t\tdbName: TSchema[K]['_']['name'];\n\t\t\tcolumns: TSchema[K]['_']['columns'];\n\t\t\trelations: ExtractTableRelationsFromSchema<\n\t\t\t\tTSchema,\n\t\t\t\tTSchema[K]['_']['name']\n\t\t\t>;\n\t\t\tprimaryKey: AnyColumn[];\n\t\t}\n\t\t: never;\n};\n\nexport type ReturnTypeOrValue<T> = T extends (...args: any[]) => infer R ? R\n\t: T;\n\nexport type BuildRelationResult<\n\tTSchema extends TablesRelationalConfig,\n\tTInclude,\n\tTRelations extends Record<string, Relation>,\n> = {\n\t[\n\t\tK in\n\t\t\t& NonUndefinedKeysOnly<TInclude>\n\t\t\t& keyof TRelations\n\t]: TRelations[K] extends infer TRel extends Relation ? BuildQueryResult<\n\t\t\tTSchema,\n\t\t\tFindTableByDBName<TSchema, TRel['referencedTableName']>,\n\t\t\tAssume<TInclude[K], true | Record<string, unknown>>\n\t\t> extends infer TResult ? TRel extends One ?\n\t\t\t\t\t| TResult\n\t\t\t\t\t| (Equal<TRel['isNullable'], false> extends true ? null : never)\n\t\t\t: TResult[]\n\t\t: never\n\t\t: never;\n};\n\nexport type NonUndefinedKeysOnly<T> =\n\t& ExtractObjectValues<\n\t\t{\n\t\t\t[K in keyof T as T[K] extends undefined ? never : K]: K;\n\t\t}\n\t>\n\t& keyof T;\n\nexport type BuildQueryResult<\n\tTSchema extends TablesRelationalConfig,\n\tTTableConfig extends TableRelationalConfig,\n\tTFullSelection extends true | Record<string, unknown>,\n> = Equal<TFullSelection, true> extends true ? InferModelFromColumns<TTableConfig['columns']>\n\t: TFullSelection extends Record<string, unknown> ? Simplify<\n\t\t\t& (TFullSelection['columns'] extends Record<string, unknown> ? InferModelFromColumns<\n\t\t\t\t\t{\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tK in Equal<\n\t\t\t\t\t\t\t\tExclude<\n\t\t\t\t\t\t\t\t\tTFullSelection['columns'][\n\t\t\t\t\t\t\t\t\t\t& keyof TFullSelection['columns']\n\t\t\t\t\t\t\t\t\t\t& keyof TTableConfig['columns']\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t>,\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t> extends true ? Exclude<\n\t\t\t\t\t\t\t\t\tkeyof TTableConfig['columns'],\n\t\t\t\t\t\t\t\t\tNonUndefinedKeysOnly<TFullSelection['columns']>\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t& {\n\t\t\t\t\t\t\t\t\t\t[K in keyof TFullSelection['columns']]: Equal<\n\t\t\t\t\t\t\t\t\t\t\tTFullSelection['columns'][K],\n\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t> extends true ? K\n\t\t\t\t\t\t\t\t\t\t\t: never;\n\t\t\t\t\t\t\t\t\t}[keyof TFullSelection['columns']]\n\t\t\t\t\t\t\t\t\t& keyof TTableConfig['columns']\n\t\t\t\t\t\t]: TTableConfig['columns'][K];\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t: InferModelFromColumns<TTableConfig['columns']>)\n\t\t\t& (TFullSelection['extras'] extends\n\t\t\t\t| Record<string, unknown>\n\t\t\t\t| ((...args: any[]) => Record<string, unknown>) ? {\n\t\t\t\t\t[\n\t\t\t\t\t\tK in NonUndefinedKeysOnly<\n\t\t\t\t\t\t\tReturnTypeOrValue<TFullSelection['extras']>\n\t\t\t\t\t\t>\n\t\t\t\t\t]: Assume<\n\t\t\t\t\t\tReturnTypeOrValue<TFullSelection['extras']>[K],\n\t\t\t\t\t\tSQL.Aliased\n\t\t\t\t\t>['_']['type'];\n\t\t\t\t}\n\t\t\t\t: {})\n\t\t\t& (TFullSelection['with'] extends Record<string, unknown> ? BuildRelationResult<\n\t\t\t\t\tTSchema,\n\t\t\t\t\tTFullSelection['with'],\n\t\t\t\t\tTTableConfig['relations']\n\t\t\t\t>\n\t\t\t\t: {})\n\t\t>\n\t: never;\n\nexport interface RelationConfig<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends AnyColumn<{ tableName: TTableName }>[],\n> {\n\trelationName?: string;\n\tfields: TColumns;\n\treferences: ColumnsWithTable<TTableName, TForeignTableName, TColumns>;\n}\n\nexport function extractTablesRelationalConfig<\n\tTTables extends TablesRelationalConfig,\n>(\n\tschema: Record<string, unknown>,\n\tconfigHelpers: (table: Table) => any,\n): { tables: TTables; tableNamesMap: Record<string, string> } {\n\tif (\n\t\tObject.keys(schema).length === 1\n\t\t&& 'default' in schema\n\t\t&& !is(schema['default'], Table)\n\t) {\n\t\tschema = schema['default'] as Record<string, unknown>;\n\t}\n\n\t// table DB name -> schema table key\n\tconst tableNamesMap: Record<string, string> = {};\n\t// Table relations found before their tables - need to buffer them until we know the schema table key\n\tconst relationsBuffer: Record<\n\t\tstring,\n\t\t{ relations: Record<string, Relation>; primaryKey?: AnyColumn[] }\n\t> = {};\n\tconst tablesConfig: TablesRelationalConfig = {};\n\tfor (const [key, value] of Object.entries(schema)) {\n\t\tif (is(value, Table)) {\n\t\t\tconst dbName = getTableUniqueName(value);\n\t\t\tconst bufferedRelations = relationsBuffer[dbName];\n\t\t\ttableNamesMap[dbName] = key;\n\t\t\ttablesConfig[key] = {\n\t\t\t\ttsName: key,\n\t\t\t\tdbName: value[Table.Symbol.Name],\n\t\t\t\tschema: value[Table.Symbol.Schema],\n\t\t\t\tcolumns: value[Table.Symbol.Columns],\n\t\t\t\trelations: bufferedRelations?.relations ?? {},\n\t\t\t\tprimaryKey: bufferedRelations?.primaryKey ?? [],\n\t\t\t};\n\n\t\t\t// Fill in primary keys\n\t\t\tfor (\n\t\t\t\tconst column of Object.values(\n\t\t\t\t\t(value as Table)[Table.Symbol.Columns],\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tif (column.primary) {\n\t\t\t\t\ttablesConfig[key]!.primaryKey.push(column);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst extraConfig = value[Table.Symbol.ExtraConfigBuilder]?.((value as Table)[Table.Symbol.ExtraConfigColumns]);\n\t\t\tif (extraConfig) {\n\t\t\t\tfor (const configEntry of Object.values(extraConfig)) {\n\t\t\t\t\tif (is(configEntry, PrimaryKeyBuilder)) {\n\t\t\t\t\t\ttablesConfig[key]!.primaryKey.push(...configEntry.columns);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (is(value, Relations)) {\n\t\t\tconst dbName = getTableUniqueName(value.table);\n\t\t\tconst tableName = tableNamesMap[dbName];\n\t\t\tconst relations: Record<string, Relation> = value.config(\n\t\t\t\tconfigHelpers(value.table),\n\t\t\t);\n\t\t\tlet primaryKey: AnyColumn[] | undefined;\n\n\t\t\tfor (const [relationName, relation] of Object.entries(relations)) {\n\t\t\t\tif (tableName) {\n\t\t\t\t\tconst tableConfig = tablesConfig[tableName]!;\n\t\t\t\t\ttableConfig.relations[relationName] = relation;\n\t\t\t\t\tif (primaryKey) {\n\t\t\t\t\t\ttableConfig.primaryKey.push(...primaryKey);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!(dbName in relationsBuffer)) {\n\t\t\t\t\t\trelationsBuffer[dbName] = {\n\t\t\t\t\t\t\trelations: {},\n\t\t\t\t\t\t\tprimaryKey,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\trelationsBuffer[dbName]!.relations[relationName] = relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { tables: tablesConfig as TTables, tableNamesMap };\n}\n\nexport function relations<\n\tTTableName extends string,\n\tTRelations extends Record<string, Relation<any>>,\n>(\n\ttable: AnyTable<{ name: TTableName }>,\n\trelations: (helpers: TableRelationsHelpers<TTableName>) => TRelations,\n): Relations<TTableName, TRelations> {\n\treturn new Relations<TTableName, TRelations>(\n\t\ttable,\n\t\t(helpers: TableRelationsHelpers<TTableName>) =>\n\t\t\tObject.fromEntries(\n\t\t\t\tObject.entries(relations(helpers)).map(([key, value]) => [\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue.withFieldName(key),\n\t\t\t\t]),\n\t\t\t) as TRelations,\n\t);\n}\n\nexport function createOne<TTableName extends string>(sourceTable: Table) {\n\treturn function one<\n\t\tTForeignTable extends Table,\n\t\tTColumns extends [\n\t\t\tAnyColumn<{ tableName: TTableName }>,\n\t\t\t...AnyColumn<{ tableName: TTableName }>[],\n\t\t],\n\t>(\n\t\ttable: TForeignTable,\n\t\tconfig?: RelationConfig<TTableName, TForeignTable['_']['name'], TColumns>,\n\t): One<\n\t\tTForeignTable['_']['name'],\n\t\tEqual<TColumns[number]['_']['notNull'], true>\n\t> {\n\t\treturn new One(\n\t\t\tsourceTable,\n\t\t\ttable,\n\t\t\tconfig,\n\t\t\t(config?.fields.reduce<boolean>((res, f) => res && f.notNull, true)\n\t\t\t\t?? false) as Equal<TColumns[number]['_']['notNull'], true>,\n\t\t);\n\t};\n}\n\nexport function createMany(sourceTable: Table) {\n\treturn function many<TForeignTable extends Table>(\n\t\treferencedTable: TForeignTable,\n\t\tconfig?: { relationName: string },\n\t): Many<TForeignTable['_']['name']> {\n\t\treturn new Many(sourceTable, referencedTable, config);\n\t};\n}\n\nexport interface NormalizedRelation {\n\tfields: AnyColumn[];\n\treferences: AnyColumn[];\n}\n\nexport function normalizeRelation(\n\tschema: TablesRelationalConfig,\n\ttableNamesMap: Record<string, string>,\n\trelation: Relation,\n): NormalizedRelation {\n\tif (is(relation, One) && relation.config) {\n\t\treturn {\n\t\t\tfields: relation.config.fields,\n\t\t\treferences: relation.config.references,\n\t\t};\n\t}\n\n\tconst referencedTableTsName = tableNamesMap[getTableUniqueName(relation.referencedTable)];\n\tif (!referencedTableTsName) {\n\t\tthrow new Error(\n\t\t\t`Table \"${relation.referencedTable[Table.Symbol.Name]}\" not found in schema`,\n\t\t);\n\t}\n\n\tconst referencedTableConfig = schema[referencedTableTsName];\n\tif (!referencedTableConfig) {\n\t\tthrow new Error(`Table \"${referencedTableTsName}\" not found in schema`);\n\t}\n\n\tconst sourceTable = relation.sourceTable;\n\tconst sourceTableTsName = tableNamesMap[getTableUniqueName(sourceTable)];\n\tif (!sourceTableTsName) {\n\t\tthrow new Error(\n\t\t\t`Table \"${sourceTable[Table.Symbol.Name]}\" not found in schema`,\n\t\t);\n\t}\n\n\tconst reverseRelations: Relation[] = [];\n\tfor (\n\t\tconst referencedTableRelation of Object.values(\n\t\t\treferencedTableConfig.relations,\n\t\t)\n\t) {\n\t\tif (\n\t\t\t(relation.relationName\n\t\t\t\t&& relation !== referencedTableRelation\n\t\t\t\t&& referencedTableRelation.relationName === relation.relationName)\n\t\t\t|| (!relation.relationName\n\t\t\t\t&& referencedTableRelation.referencedTable === relation.sourceTable)\n\t\t) {\n\t\t\treverseRelations.push(referencedTableRelation);\n\t\t}\n\t}\n\n\tif (reverseRelations.length > 1) {\n\t\tthrow relation.relationName\n\t\t\t? new Error(\n\t\t\t\t`There are multiple relations with name \"${relation.relationName}\" in table \"${referencedTableTsName}\"`,\n\t\t\t)\n\t\t\t: new Error(\n\t\t\t\t`There are multiple relations between \"${referencedTableTsName}\" and \"${\n\t\t\t\t\trelation.sourceTable[Table.Symbol.Name]\n\t\t\t\t}\". Please specify relation name`,\n\t\t\t);\n\t}\n\n\tif (\n\t\treverseRelations[0]\n\t\t&& is(reverseRelations[0], One)\n\t\t&& reverseRelations[0].config\n\t) {\n\t\treturn {\n\t\t\tfields: reverseRelations[0].config.references,\n\t\t\treferences: reverseRelations[0].config.fields,\n\t\t};\n\t}\n\n\tthrow new Error(\n\t\t`There is not enough information to infer relation \"${sourceTableTsName}.${relation.fieldName}\"`,\n\t);\n}\n\nexport function createTableRelationsHelpers<TTableName extends string>(\n\tsourceTable: AnyTable<{ name: TTableName }>,\n) {\n\treturn {\n\t\tone: createOne<TTableName>(sourceTable),\n\t\tmany: createMany(sourceTable),\n\t};\n}\n\nexport type TableRelationsHelpers<TTableName extends string> = ReturnType<\n\ttypeof createTableRelationsHelpers<TTableName>\n>;\n\nexport interface BuildRelationalQueryResult<\n\tTTable extends Table = Table,\n\tTColumn extends Column = Column,\n> {\n\ttableTsKey: string;\n\tselection: {\n\t\tdbKey: string;\n\t\ttsKey: string;\n\t\tfield: TColumn | SQL | SQL.Aliased;\n\t\trelationTableTsKey: string | undefined;\n\t\tisJson: boolean;\n\t\tisExtra?: boolean;\n\t\tselection: BuildRelationalQueryResult<TTable>['selection'];\n\t}[];\n\tsql: TTable | SQL;\n}\n\nexport function mapRelationalRow(\n\ttablesConfig: TablesRelationalConfig,\n\ttableConfig: TableRelationalConfig,\n\trow: unknown[],\n\tbuildQueryResultSelection: BuildRelationalQueryResult['selection'],\n\tmapColumnValue: (value: unknown) => unknown = (value) => value,\n): Record<string, unknown> {\n\tconst result: Record<string, unknown> = {};\n\n\tfor (\n\t\tconst [\n\t\t\tselectionItemIndex,\n\t\t\tselectionItem,\n\t\t] of buildQueryResultSelection.entries()\n\t) {\n\t\tif (selectionItem.isJson) {\n\t\t\tconst relation = tableConfig.relations[selectionItem.tsKey]!;\n\t\t\tconst rawSubRows = row[selectionItemIndex] as\n\t\t\t\t| unknown[]\n\t\t\t\t| null\n\t\t\t\t| [null]\n\t\t\t\t| string;\n\t\t\tconst subRows = typeof rawSubRows === 'string'\n\t\t\t\t? (JSON.parse(rawSubRows) as unknown[])\n\t\t\t\t: rawSubRows;\n\t\t\tresult[selectionItem.tsKey] = is(relation, One)\n\t\t\t\t? subRows\n\t\t\t\t\t&& mapRelationalRow(\n\t\t\t\t\t\ttablesConfig,\n\t\t\t\t\t\ttablesConfig[selectionItem.relationTableTsKey!]!,\n\t\t\t\t\t\tsubRows,\n\t\t\t\t\t\tselectionItem.selection,\n\t\t\t\t\t\tmapColumnValue,\n\t\t\t\t\t)\n\t\t\t\t: (subRows as unknown[][]).map((subRow) =>\n\t\t\t\t\tmapRelationalRow(\n\t\t\t\t\t\ttablesConfig,\n\t\t\t\t\t\ttablesConfig[selectionItem.relationTableTsKey!]!,\n\t\t\t\t\t\tsubRow,\n\t\t\t\t\t\tselectionItem.selection,\n\t\t\t\t\t\tmapColumnValue,\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t} else {\n\t\t\tconst value = mapColumnValue(row[selectionItemIndex]);\n\t\t\tconst field = selectionItem.field!;\n\t\t\tlet decoder;\n\t\t\tif (is(field, Column)) {\n\t\t\t\tdecoder = field;\n\t\t\t} else if (is(field, SQL)) {\n\t\t\t\tdecoder = field.decoder;\n\t\t\t} else {\n\t\t\t\tdecoder = field.sql.decoder;\n\t\t\t}\n\t\t\tresult[selectionItem.tsKey] = value === null ? null : decoder.mapFromDriverValue(value);\n\t\t}\n\t}\n\n\treturn result;\n}\n"],"names":["relations"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12242, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/query-promise.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\n\nexport abstract class QueryPromise<T> implements Promise<T> {\n\tstatic readonly [entityKind]: string = 'QueryPromise';\n\n\t[Symbol.toStringTag] = 'QueryPromise';\n\n\tcatch<TResult = never>(\n\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null | undefined,\n\t): Promise<T | TResult> {\n\t\treturn this.then(undefined, onRejected);\n\t}\n\n\tfinally(onFinally?: (() => void) | null | undefined): Promise<T> {\n\t\treturn this.then(\n\t\t\t(value) => {\n\t\t\t\tonFinally?.();\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reason) => {\n\t\t\t\tonFinally?.();\n\t\t\t\tthrow reason;\n\t\t\t},\n\t\t);\n\t}\n\n\tthen<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.execute().then(onFulfilled, onRejected);\n\t}\n\n\tabstract execute(): Promise<T>;\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;;AAEpB,MAAe,aAAsC;IAC3D,OAAA,0IAAiB,aAAU,CAAA,GAAY,eAAA;IAEvC,CAAC,OAAO,WAAW,CAAA,GAAI,eAAA;IAEvB,MACC,UAAA,EACuB;QACvB,OAAO,IAAA,CAAK,IAAA,CAAK,KAAA,GAAW,UAAU;IACvC;IAEA,QAAQ,SAAA,EAAyD;QAChE,OAAO,IAAA,CAAK,IAAA,CACX,CAAC,UAAU;YACV,YAAY;YACZ,OAAO;QACR,GACA,CAAC,WAAW;YACX,YAAY;YACZ,MAAM;QACP;IAEF;IAEA,KACC,WAAA,EACA,UAAA,EAC+B;QAC/B,OAAO,IAAA,CAAK,OAAA,CAAQ,EAAE,IAAA,CAAK,aAAa,UAAU;IACnD;AAGD","ignoreList":[0]}},
    {"offset": {"line": 12268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12274, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/query.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport {\n\ttype BuildQueryResult,\n\ttype BuildRelationalQueryResult,\n\ttype DBQueryConfig,\n\tmapRelationalRow,\n\ttype TableRelationalConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Query, QueryWithTypings, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport { tracer } from '~/tracing.ts';\nimport type { KnownKeysOnly } from '~/utils.ts';\nimport type { PgDialect } from '../dialect.ts';\nimport type { PgPreparedQuery, PgSession, PreparedQueryConfig } from '../session.ts';\nimport type { PgTable } from '../table.ts';\n\nexport class RelationalQueryBuilder<TSchema extends TablesRelationalConfig, TFields extends TableRelationalConfig> {\n\tstatic readonly [entityKind]: string = 'PgRelationalQueryBuilder';\n\n\tconstructor(\n\t\tprivate fullSchema: Record<string, unknown>,\n\t\tprivate schema: TSchema,\n\t\tprivate tableNamesMap: Record<string, string>,\n\t\tprivate table: PgTable,\n\t\tprivate tableConfig: TableRelationalConfig,\n\t\tprivate dialect: PgDialect,\n\t\tprivate session: PgSession,\n\t) {}\n\n\tfindMany<TConfig extends DBQueryConfig<'many', true, TSchema, TFields>>(\n\t\tconfig?: KnownKeysOnly<TConfig, DBQueryConfig<'many', true, TSchema, TFields>>,\n\t): PgRelationalQuery<BuildQueryResult<TSchema, TFields, TConfig>[]> {\n\t\treturn new PgRelationalQuery(\n\t\t\tthis.fullSchema,\n\t\t\tthis.schema,\n\t\t\tthis.tableNamesMap,\n\t\t\tthis.table,\n\t\t\tthis.tableConfig,\n\t\t\tthis.dialect,\n\t\t\tthis.session,\n\t\t\tconfig ? (config as DBQueryConfig<'many', true>) : {},\n\t\t\t'many',\n\t\t);\n\t}\n\n\tfindFirst<TSelection extends Omit<DBQueryConfig<'many', true, TSchema, TFields>, 'limit'>>(\n\t\tconfig?: KnownKeysOnly<TSelection, Omit<DBQueryConfig<'many', true, TSchema, TFields>, 'limit'>>,\n\t): PgRelationalQuery<BuildQueryResult<TSchema, TFields, TSelection> | undefined> {\n\t\treturn new PgRelationalQuery(\n\t\t\tthis.fullSchema,\n\t\t\tthis.schema,\n\t\t\tthis.tableNamesMap,\n\t\t\tthis.table,\n\t\t\tthis.tableConfig,\n\t\t\tthis.dialect,\n\t\t\tthis.session,\n\t\t\tconfig ? { ...(config as DBQueryConfig<'many', true> | undefined), limit: 1 } : { limit: 1 },\n\t\t\t'first',\n\t\t);\n\t}\n}\n\nexport class PgRelationalQuery<TResult> extends QueryPromise<TResult>\n\timplements RunnableQuery<TResult, 'pg'>, SQLWrapper\n{\n\tstatic readonly [entityKind]: string = 'PgRelationalQuery';\n\n\tdeclare readonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly result: TResult;\n\t};\n\n\tconstructor(\n\t\tprivate fullSchema: Record<string, unknown>,\n\t\tprivate schema: TablesRelationalConfig,\n\t\tprivate tableNamesMap: Record<string, string>,\n\t\tprivate table: PgTable,\n\t\tprivate tableConfig: TableRelationalConfig,\n\t\tprivate dialect: PgDialect,\n\t\tprivate session: PgSession,\n\t\tprivate config: DBQueryConfig<'many', true> | true,\n\t\tprivate mode: 'many' | 'first',\n\t) {\n\t\tsuper();\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgPreparedQuery<PreparedQueryConfig & { execute: TResult }> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\tconst { query, builtQuery } = this._toSQL();\n\n\t\t\treturn this.session.prepareQuery<PreparedQueryConfig & { execute: TResult }>(\n\t\t\t\tbuiltQuery,\n\t\t\t\tundefined,\n\t\t\t\tname,\n\t\t\t\ttrue,\n\t\t\t\t(rawRows, mapColumnValue) => {\n\t\t\t\t\tconst rows = rawRows.map((row) =>\n\t\t\t\t\t\tmapRelationalRow(this.schema, this.tableConfig, row, query.selection, mapColumnValue)\n\t\t\t\t\t);\n\t\t\t\t\tif (this.mode === 'first') {\n\t\t\t\t\t\treturn rows[0] as TResult;\n\t\t\t\t\t}\n\t\t\t\t\treturn rows as TResult;\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n\n\tprepare(name: string): PgPreparedQuery<PreparedQueryConfig & { execute: TResult }> {\n\t\treturn this._prepare(name);\n\t}\n\n\tprivate _getQuery() {\n\t\treturn this.dialect.buildRelationalQueryWithoutPK({\n\t\t\tfullSchema: this.fullSchema,\n\t\t\tschema: this.schema,\n\t\t\ttableNamesMap: this.tableNamesMap,\n\t\t\ttable: this.table,\n\t\t\ttableConfig: this.tableConfig,\n\t\t\tqueryConfig: this.config,\n\t\t\ttableAlias: this.tableConfig.tsName,\n\t\t});\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this._getQuery().sql as SQL;\n\t}\n\n\tprivate _toSQL(): { query: BuildRelationalQueryResult; builtQuery: QueryWithTypings } {\n\t\tconst query = this._getQuery();\n\n\t\tconst builtQuery = this.dialect.sqlToQuery(query.sql as SQL);\n\n\t\treturn { query, builtQuery };\n\t}\n\n\ttoSQL(): Query {\n\t\treturn this._toSQL().builtQuery;\n\t}\n\n\toverride execute(): Promise<TResult> {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute();\n\t\t});\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,kBAAkB;AAY3B,SAAS,cAAc;AAVvB;AADA,SAAS,oBAAoB;;;;;AAiBtB,MAAM,uBAAsG;IAGlH,YACS,UAAA,EACA,MAAA,EACA,aAAA,EACA,KAAA,EACA,WAAA,EACA,OAAA,EACA,OAAA,CACP;QAPO,IAAA,CAAA,UAAA,GAAA;QACA,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,aAAA,GAAA;QACA,IAAA,CAAA,KAAA,GAAA;QACA,IAAA,CAAA,WAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;IACN;IAVH,OAAA,0IAAiB,aAAU,CAAA,GAAY,2BAAA;IAYvC,SACC,MAAA,EACmE;QACnE,OAAO,IAAI,kBACV,IAAA,CAAK,UAAA,EACL,IAAA,CAAK,MAAA,EACL,IAAA,CAAK,aAAA,EACL,IAAA,CAAK,KAAA,EACL,IAAA,CAAK,WAAA,EACL,IAAA,CAAK,OAAA,EACL,IAAA,CAAK,OAAA,EACL,SAAU,SAAyC,CAAC,GACpD;IAEF;IAEA,UACC,MAAA,EACgF;QAChF,OAAO,IAAI,kBACV,IAAA,CAAK,UAAA,EACL,IAAA,CAAK,MAAA,EACL,IAAA,CAAK,aAAA,EACL,IAAA,CAAK,KAAA,EACL,IAAA,CAAK,WAAA,EACL,IAAA,CAAK,OAAA,EACL,IAAA,CAAK,OAAA,EACL,SAAS;YAAE,GAAI,MAAA;YAAoD,OAAO;QAAE,IAAI;YAAE,OAAO;QAAE,GAC3F;IAEF;AACD;AAEO,MAAM,6KAAmC,eAAA,CAEhD;IAQC,YACS,UAAA,EACA,MAAA,EACA,aAAA,EACA,KAAA,EACA,WAAA,EACA,OAAA,EACA,OAAA,EACA,MAAA,EACA,IAAA,CACP;QACD,KAAA,CAAM;QAVE,IAAA,CAAA,UAAA,GAAA;QACA,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,aAAA,GAAA;QACA,IAAA,CAAA,KAAA,GAAA;QACA,IAAA,CAAA,WAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,IAAA,GAAA;IAGT;IAnBA,OAAA,0IAAiB,aAAU,CAAA,GAAY,oBAAA;IAAA,cAAA,GAsBvC,SAAS,IAAA,EAA4E;QACpF,iJAAO,SAAA,CAAO,eAAA,CAAgB,wBAAwB,MAAM;YAC3D,MAAM,EAAE,KAAA,EAAO,UAAA,CAAW,CAAA,GAAI,IAAA,CAAK,MAAA,CAAO;YAE1C,OAAO,IAAA,CAAK,OAAA,CAAQ,YAAA,CACnB,YACA,KAAA,GACA,MACA,MACA,CAAC,SAAS,mBAAmB;gBAC5B,MAAM,OAAO,QAAQ,GAAA,CAAI,CAAC,MACzB,mKAAA,EAAiB,IAAA,CAAK,MAAA,EAAQ,IAAA,CAAK,WAAA,EAAa,KAAK,MAAM,SAAA,EAAW,cAAc;gBAErF,IAAI,IAAA,CAAK,IAAA,KAAS,SAAS;oBAC1B,OAAO,IAAA,CAAK,CAAC,CAAA;gBACd;gBACA,OAAO;YACR;QAEF,CAAC;IACF;IAEA,QAAQ,IAAA,EAA2E;QAClF,OAAO,IAAA,CAAK,QAAA,CAAS,IAAI;IAC1B;IAEQ,YAAY;QACnB,OAAO,IAAA,CAAK,OAAA,CAAQ,6BAAA,CAA8B;YACjD,YAAY,IAAA,CAAK,UAAA;YACjB,QAAQ,IAAA,CAAK,MAAA;YACb,eAAe,IAAA,CAAK,aAAA;YACpB,OAAO,IAAA,CAAK,KAAA;YACZ,aAAa,IAAA,CAAK,WAAA;YAClB,aAAa,IAAA,CAAK,MAAA;YAClB,YAAY,IAAA,CAAK,WAAA,CAAY,MAAA;QAC9B,CAAC;IACF;IAAA,cAAA,GAGA,SAAc;QACb,OAAO,IAAA,CAAK,SAAA,CAAU,EAAE,GAAA;IACzB;IAEQ,SAA8E;QACrF,MAAM,QAAQ,IAAA,CAAK,SAAA,CAAU;QAE7B,MAAM,aAAa,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,MAAM,GAAU;QAE3D,OAAO;YAAE;YAAO;QAAW;IAC5B;IAEA,QAAe;QACd,OAAO,IAAA,CAAK,MAAA,CAAO,EAAE,UAAA;IACtB;IAES,UAA4B;QACpC,iJAAO,SAAA,CAAO,eAAA,CAAgB,qBAAqB,MAAM;YACxD,OAAO,IAAA,CAAK,QAAA,CAAS,EAAE,OAAA,CAAQ;QAChC,CAAC;IACF;AACD","ignoreList":[0]}},
    {"offset": {"line": 12371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12377, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/alias.ts"],"sourcesContent":["import type { AnyColumn } from './column.ts';\nimport { Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport type { Relation } from './relations.ts';\nimport type { View } from './sql/sql.ts';\nimport { SQL, sql } from './sql/sql.ts';\nimport { Table } from './table.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\nexport class ColumnAliasProxyHandler<TColumn extends Column> implements ProxyHandler<TColumn> {\n\tstatic readonly [entityKind]: string = 'ColumnAliasProxyHandler';\n\n\tconstructor(private table: Table | View) {}\n\n\tget(columnObj: TColumn, prop: string | symbol): any {\n\t\tif (prop === 'table') {\n\t\t\treturn this.table;\n\t\t}\n\n\t\treturn columnObj[prop as keyof TColumn];\n\t}\n}\n\nexport class TableAliasProxyHandler<T extends Table | View> implements ProxyHandler<T> {\n\tstatic readonly [entityKind]: string = 'TableAliasProxyHandler';\n\n\tconstructor(private alias: string, private replaceOriginalName: boolean) {}\n\n\tget(target: T, prop: string | symbol): any {\n\t\tif (prop === Table.Symbol.IsAlias) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (prop === Table.Symbol.Name) {\n\t\t\treturn this.alias;\n\t\t}\n\n\t\tif (this.replaceOriginalName && prop === Table.Symbol.OriginalName) {\n\t\t\treturn this.alias;\n\t\t}\n\n\t\tif (prop === ViewBaseConfig) {\n\t\t\treturn {\n\t\t\t\t...target[ViewBaseConfig as keyof typeof target],\n\t\t\t\tname: this.alias,\n\t\t\t\tisAlias: true,\n\t\t\t};\n\t\t}\n\n\t\tif (prop === Table.Symbol.Columns) {\n\t\t\tconst columns = (target as Table)[Table.Symbol.Columns];\n\t\t\tif (!columns) {\n\t\t\t\treturn columns;\n\t\t\t}\n\n\t\t\tconst proxiedColumns: { [key: string]: any } = {};\n\n\t\t\tObject.keys(columns).map((key) => {\n\t\t\t\tproxiedColumns[key] = new Proxy(\n\t\t\t\t\tcolumns[key]!,\n\t\t\t\t\tnew ColumnAliasProxyHandler(new Proxy(target, this)),\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn proxiedColumns;\n\t\t}\n\n\t\tconst value = target[prop as keyof typeof target];\n\t\tif (is(value, Column)) {\n\t\t\treturn new Proxy(value as AnyColumn, new ColumnAliasProxyHandler(new Proxy(target, this)));\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\nexport class RelationTableAliasProxyHandler<T extends Relation> implements ProxyHandler<T> {\n\tstatic readonly [entityKind]: string = 'RelationTableAliasProxyHandler';\n\n\tconstructor(private alias: string) {}\n\n\tget(target: T, prop: string | symbol): any {\n\t\tif (prop === 'sourceTable') {\n\t\t\treturn aliasedTable(target.sourceTable, this.alias);\n\t\t}\n\n\t\treturn target[prop as keyof typeof target];\n\t}\n}\n\nexport function aliasedTable<T extends Table>(table: T, tableAlias: string): T {\n\treturn new Proxy(table, new TableAliasProxyHandler(tableAlias, false));\n}\n\nexport function aliasedRelation<T extends Relation>(relation: T, tableAlias: string): T {\n\treturn new Proxy(relation, new RelationTableAliasProxyHandler(tableAlias));\n}\n\nexport function aliasedTableColumn<T extends AnyColumn>(column: T, tableAlias: string): T {\n\treturn new Proxy(\n\t\tcolumn,\n\t\tnew ColumnAliasProxyHandler(new Proxy(column.table, new TableAliasProxyHandler(tableAlias, false))),\n\t);\n}\n\nexport function mapColumnsInAliasedSQLToAlias(query: SQL.Aliased, alias: string): SQL.Aliased {\n\treturn new SQL.Aliased(mapColumnsInSQLToAlias(query.sql, alias), query.fieldAlias);\n}\n\nexport function mapColumnsInSQLToAlias(query: SQL, alias: string): SQL {\n\treturn sql.join(query.queryChunks.map((c) => {\n\t\tif (is(c, Column)) {\n\t\t\treturn aliasedTableColumn(c, alias);\n\t\t}\n\t\tif (is(c, SQL)) {\n\t\t\treturn mapColumnsInSQLToAlias(c, alias);\n\t\t}\n\t\tif (is(c, SQL.Aliased)) {\n\t\t\treturn mapColumnsInAliasedSQLToAlias(c, alias);\n\t\t}\n\t\treturn c;\n\t}));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12496, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/selection-proxy.ts"],"sourcesContent":["import { ColumnAliasProxyHandler, TableAliasProxyHandler } from './alias.ts';\nimport { Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport { SQL, View } from './sql/sql.ts';\nimport { Subquery } from './subquery.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\nexport class SelectionProxyHandler<T extends Subquery | Record<string, unknown> | View>\n\timplements ProxyHandler<Subquery | Record<string, unknown> | View>\n{\n\tstatic readonly [entityKind]: string = 'SelectionProxyHandler';\n\n\tprivate config: {\n\t\t/**\n\t\t * Table alias for the columns\n\t\t */\n\t\talias?: string;\n\t\t/**\n\t\t * What to do when a field is an instance of `SQL.Aliased` and it's not a selection field (from a subquery)\n\t\t *\n\t\t * `sql` - return the underlying SQL expression\n\t\t *\n\t\t * `alias` - return the field alias\n\t\t */\n\t\tsqlAliasedBehavior: 'sql' | 'alias';\n\t\t/**\n\t\t * What to do when a field is an instance of `SQL` and it doesn't have an alias declared\n\t\t *\n\t\t * `sql` - return the underlying SQL expression\n\t\t *\n\t\t * `error` - return a DrizzleTypeError on type level and throw an error on runtime\n\t\t */\n\t\tsqlBehavior: 'sql' | 'error';\n\n\t\t/**\n\t\t * Whether to replace the original name of the column with the alias\n\t\t * Should be set to `true` for views creation\n\t\t * @default false\n\t\t */\n\t\treplaceOriginalName?: boolean;\n\t};\n\n\tconstructor(config: SelectionProxyHandler<T>['config']) {\n\t\tthis.config = { ...config };\n\t}\n\n\tget(subquery: T, prop: string | symbol): any {\n\t\tif (prop === '_') {\n\t\t\treturn {\n\t\t\t\t...subquery['_' as keyof typeof subquery],\n\t\t\t\tselectedFields: new Proxy(\n\t\t\t\t\t(subquery as Subquery)._.selectedFields,\n\t\t\t\t\tthis as ProxyHandler<Record<string, unknown>>,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif (prop === ViewBaseConfig) {\n\t\t\treturn {\n\t\t\t\t...subquery[ViewBaseConfig as keyof typeof subquery],\n\t\t\t\tselectedFields: new Proxy(\n\t\t\t\t\t(subquery as View)[ViewBaseConfig].selectedFields,\n\t\t\t\t\tthis as ProxyHandler<Record<string, unknown>>,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif (typeof prop === 'symbol') {\n\t\t\treturn subquery[prop as keyof typeof subquery];\n\t\t}\n\n\t\tconst columns = is(subquery, Subquery)\n\t\t\t? subquery._.selectedFields\n\t\t\t: is(subquery, View)\n\t\t\t? subquery[ViewBaseConfig].selectedFields\n\t\t\t: subquery;\n\t\tconst value: unknown = columns[prop as keyof typeof columns];\n\n\t\tif (is(value, SQL.Aliased)) {\n\t\t\t// Never return the underlying SQL expression for a field previously selected in a subquery\n\t\t\tif (this.config.sqlAliasedBehavior === 'sql' && !value.isSelectionField) {\n\t\t\t\treturn value.sql;\n\t\t\t}\n\n\t\t\tconst newValue = value.clone();\n\t\t\tnewValue.isSelectionField = true;\n\t\t\treturn newValue;\n\t\t}\n\n\t\tif (is(value, SQL)) {\n\t\t\tif (this.config.sqlBehavior === 'sql') {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`You tried to reference \"${prop}\" field from a subquery, which is a raw SQL field, but it doesn't have an alias declared. Please add an alias to the field using \".as('alias')\" method.`,\n\t\t\t);\n\t\t}\n\n\t\tif (is(value, Column)) {\n\t\t\tif (this.config.alias) {\n\t\t\t\treturn new Proxy(\n\t\t\t\t\tvalue,\n\t\t\t\t\tnew ColumnAliasProxyHandler(\n\t\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\t\tvalue.table,\n\t\t\t\t\t\t\tnew TableAliasProxyHandler(this.config.alias, this.config.replaceOriginalName ?? false),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tif (typeof value !== 'object' || value === null) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Proxy(value, new SelectionProxyHandler(this.config));\n\t}\n}\n"],"names":[],"mappings":";;;AAEA,SAAS,YAAY,UAAU;AAG/B,SAAS,sBAAsB;AAD/B,SAAS,gBAAgB;AADzB,SAAS,KAAK,YAAY;AAF1B,SAAS,cAAc;AADvB,SAAS,yBAAyB,8BAA8B;;;;;;;AAOzD,MAAM,sBAEb;IACC,OAAA,0IAAiB,aAAU,CAAA,GAAY,wBAAA;IAE/B,OAAA;IA8BR,YAAY,MAAA,CAA4C;QACvD,IAAA,CAAK,MAAA,GAAS;YAAE,GAAG,MAAA;QAAO;IAC3B;IAEA,IAAI,QAAA,EAAa,IAAA,EAA4B;QAC5C,IAAI,SAAS,KAAK;YACjB,OAAO;gBACN,GAAG,QAAA,CAAS,GAA4B,CAAA;gBACxC,gBAAgB,IAAI,MAClB,SAAsB,CAAA,CAAE,cAAA,EACzB,IAAA;YAEF;QACD;QAEA,IAAI,0JAAS,iBAAA,EAAgB;YAC5B,OAAO;gBACN,GAAG,QAAA,iJAAS,kBAAuC,CAAA;gBACnD,gBAAgB,IAAI,MAClB,QAAA,kJAAkB,iBAAc,CAAA,CAAE,cAAA,EACnC,IAAA;YAEF;QACD;QAEA,IAAI,OAAO,SAAS,UAAU;YAC7B,OAAO,QAAA,CAAS,IAA6B,CAAA;QAC9C;QAEA,MAAM,cAAU,8IAAA,EAAG,qJAAU,WAAQ,IAClC,SAAS,CAAA,CAAE,cAAA,gJACX,KAAA,EAAG,sJAAU,QAAI,IACjB,QAAA,kJAAS,iBAAc,CAAA,CAAE,cAAA,GACzB;QACH,MAAM,QAAiB,OAAA,CAAQ,IAA4B,CAAA;QAE3D,iJAAI,KAAA,EAAG,oJAAO,MAAA,CAAI,OAAO,GAAG;YAE3B,IAAI,IAAA,CAAK,MAAA,CAAO,kBAAA,KAAuB,SAAS,CAAC,MAAM,gBAAA,EAAkB;gBACxE,OAAO,MAAM,GAAA;YACd;YAEA,MAAM,WAAW,MAAM,KAAA,CAAM;YAC7B,SAAS,gBAAA,GAAmB;YAC5B,OAAO;QACR;QAEA,iJAAI,KAAA,EAAG,oJAAO,MAAG,GAAG;YACnB,IAAI,IAAA,CAAK,MAAA,CAAO,WAAA,KAAgB,OAAO;gBACtC,OAAO;YACR;YAEA,MAAM,IAAI,MACT,CAAA,wBAAA,EAA2B,IAAI,CAAA,uJAAA,CAAA;QAEjC;QAEA,IAAI,kJAAA,EAAG,gJAAO,SAAM,GAAG;YACtB,IAAI,IAAA,CAAK,MAAA,CAAO,KAAA,EAAO;gBACtB,OAAO,IAAI,MACV,OACA,4IAAI,0BAAA,CACH,IAAI,MACH,MAAM,KAAA,EACN,4IAAI,yBAAA,CAAuB,IAAA,CAAK,MAAA,CAAO,KAAA,EAAO,IAAA,CAAK,MAAA,CAAO,mBAAA,IAAuB,KAAK;YAI1F;YACA,OAAO;QACR;QAEA,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;YAChD,OAAO;QACR;QAEA,OAAO,IAAI,MAAM,OAAO,IAAI,sBAAsB,IAAA,CAAK,MAAM,CAAC;IAC/D;AACD","ignoreList":[0]}},
    {"offset": {"line": 12565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12571, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/view-base.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport { type ColumnsSelection, View } from '~/sql/sql.ts';\n\nexport abstract class PgViewBase<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n\tTSelectedFields extends ColumnsSelection = ColumnsSelection,\n> extends View<TName, TExisting, TSelectedFields> {\n\tstatic readonly [entityKind]: string = 'PgViewBase';\n\n\tdeclare readonly _: View<TName, TExisting, TSelectedFields>['_'] & {\n\t\treadonly viewBrand: 'PgViewBase';\n\t};\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;AAC3B,SAAgC,YAAY;;;AAErC,MAAe,gKAIZ,OAAA,CAAwC;IACjD,OAAA,0IAAiB,aAAU,CAAA,GAAY,aAAA;AAKxC","ignoreList":[0]}},
    {"offset": {"line": 12583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12589, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/query-builders/query-builder.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { SQL, SQLWrapper } from '~/sql/index.ts';\n\nexport abstract class TypedQueryBuilder<TSelection, TResult = unknown> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'TypedQueryBuilder';\n\n\tdeclare _: {\n\t\tselectedFields: TSelection;\n\t\tresult: TResult;\n\t};\n\n\t/** @internal */\n\tgetSelectedFields(): TSelection {\n\t\treturn this._.selectedFields;\n\t}\n\n\tabstract getSQL(): SQL;\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;;AAGpB,MAAe,kBAAuE;IAC5F,OAAA,0IAAiB,aAAU,CAAA,GAAY,oBAAA;IAAA,cAAA,GAQvC,oBAAgC;QAC/B,OAAO,IAAA,CAAK,CAAA,CAAE,cAAA;IACf;AAGD","ignoreList":[0]}},
    {"offset": {"line": 12602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12608, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/select.ts"],"sourcesContent":["import { entityKind, is } from '~/entity.ts';\nimport type { PgColumn } from '~/pg-core/columns/index.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type { PgSession, PreparedQueryConfig } from '~/pg-core/session.ts';\nimport type { SubqueryWithSelection } from '~/pg-core/subquery.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport { PgViewBase } from '~/pg-core/view-base.ts';\nimport { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type {\n\tBuildSubquerySelection,\n\tGetSelectTableName,\n\tGetSelectTableSelection,\n\tJoinNullability,\n\tJoinType,\n\tSelectMode,\n\tSelectResult,\n\tSetOperator,\n} from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport { SQL, View } from '~/sql/sql.ts';\nimport type { ColumnsSelection, Placeholder, Query, SQLWrapper } from '~/sql/sql.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport { tracer } from '~/tracing.ts';\nimport { applyMixins, getTableColumns, getTableLikeName, haveSameKeys, type ValueOrArray } from '~/utils.ts';\nimport { orderSelectedFields } from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type {\n\tAnyPgSelect,\n\tCreatePgSelectFromBuilderMode,\n\tGetPgSetOperators,\n\tLockConfig,\n\tLockStrength,\n\tPgCreateSetOperatorFn,\n\tPgJoinFn,\n\tPgSelectConfig,\n\tPgSelectDynamic,\n\tPgSelectHKT,\n\tPgSelectHKTBase,\n\tPgSelectPrepare,\n\tPgSelectWithout,\n\tPgSetOperatorExcludedMethods,\n\tPgSetOperatorWithResult,\n\tSelectedFields,\n\tSetOperatorRightSelect,\n} from './select.types.ts';\n\nexport class PgSelectBuilder<\n\tTSelection extends SelectedFields | undefined,\n\tTBuilderMode extends 'db' | 'qb' = 'db',\n> {\n\tstatic readonly [entityKind]: string = 'PgSelectBuilder';\n\n\tprivate fields: TSelection;\n\tprivate session: PgSession | undefined;\n\tprivate dialect: PgDialect;\n\tprivate withList: Subquery[] = [];\n\tprivate distinct: boolean | {\n\t\ton: (PgColumn | SQLWrapper)[];\n\t} | undefined;\n\n\tconstructor(\n\t\tconfig: {\n\t\t\tfields: TSelection;\n\t\t\tsession: PgSession | undefined;\n\t\t\tdialect: PgDialect;\n\t\t\twithList?: Subquery[];\n\t\t\tdistinct?: boolean | {\n\t\t\t\ton: (PgColumn | SQLWrapper)[];\n\t\t\t};\n\t\t},\n\t) {\n\t\tthis.fields = config.fields;\n\t\tthis.session = config.session;\n\t\tthis.dialect = config.dialect;\n\t\tif (config.withList) {\n\t\t\tthis.withList = config.withList;\n\t\t}\n\t\tthis.distinct = config.distinct;\n\t}\n\n\t/**\n\t * Specify the table, subquery, or other target that you're\n\t * building a select query against.\n\t *\n\t * {@link https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM | Postgres from documentation}\n\t */\n\tfrom<TFrom extends PgTable | Subquery | PgViewBase | SQL>(\n\t\tsource: TFrom,\n\t): CreatePgSelectFromBuilderMode<\n\t\tTBuilderMode,\n\t\tGetSelectTableName<TFrom>,\n\t\tTSelection extends undefined ? GetSelectTableSelection<TFrom> : TSelection,\n\t\tTSelection extends undefined ? 'single' : 'partial'\n\t> {\n\t\tconst isPartialSelect = !!this.fields;\n\n\t\tlet fields: SelectedFields;\n\t\tif (this.fields) {\n\t\t\tfields = this.fields;\n\t\t} else if (is(source, Subquery)) {\n\t\t\t// This is required to use the proxy handler to get the correct field values from the subquery\n\t\t\tfields = Object.fromEntries(\n\t\t\t\tObject.keys(source._.selectedFields).map((\n\t\t\t\t\tkey,\n\t\t\t\t) => [key, source[key as unknown as keyof typeof source] as unknown as SelectedFields[string]]),\n\t\t\t);\n\t\t} else if (is(source, PgViewBase)) {\n\t\t\tfields = source[ViewBaseConfig].selectedFields as SelectedFields;\n\t\t} else if (is(source, SQL)) {\n\t\t\tfields = {};\n\t\t} else {\n\t\t\tfields = getTableColumns<PgTable>(source);\n\t\t}\n\n\t\treturn new PgSelectBase({\n\t\t\ttable: source,\n\t\t\tfields,\n\t\t\tisPartialSelect,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\twithList: this.withList,\n\t\t\tdistinct: this.distinct,\n\t\t}) as any;\n\t}\n}\n\nexport abstract class PgSelectQueryBuilderBase<\n\tTHKT extends PgSelectHKTBase,\n\tTTableName extends string | undefined,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode,\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult extends any[] = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields extends ColumnsSelection = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends TypedQueryBuilder<TSelectedFields, TResult> {\n\tstatic readonly [entityKind]: string = 'PgSelectQueryBuilder';\n\n\toverride readonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly hkt: THKT;\n\t\treadonly tableName: TTableName;\n\t\treadonly selection: TSelection;\n\t\treadonly selectMode: TSelectMode;\n\t\treadonly nullabilityMap: TNullabilityMap;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TResult;\n\t\treadonly selectedFields: TSelectedFields;\n\t};\n\n\tprotected config: PgSelectConfig;\n\tprotected joinsNotNullableMap: Record<string, boolean>;\n\tprivate tableName: string | undefined;\n\tprivate isPartialSelect: boolean;\n\tprotected session: PgSession | undefined;\n\tprotected dialect: PgDialect;\n\n\tconstructor(\n\t\t{ table, fields, isPartialSelect, session, dialect, withList, distinct }: {\n\t\t\ttable: PgSelectConfig['table'];\n\t\t\tfields: PgSelectConfig['fields'];\n\t\t\tisPartialSelect: boolean;\n\t\t\tsession: PgSession | undefined;\n\t\t\tdialect: PgDialect;\n\t\t\twithList: Subquery[];\n\t\t\tdistinct: boolean | {\n\t\t\t\ton: (PgColumn | SQLWrapper)[];\n\t\t\t} | undefined;\n\t\t},\n\t) {\n\t\tsuper();\n\t\tthis.config = {\n\t\t\twithList,\n\t\t\ttable,\n\t\t\tfields: { ...fields },\n\t\t\tdistinct,\n\t\t\tsetOperators: [],\n\t\t};\n\t\tthis.isPartialSelect = isPartialSelect;\n\t\tthis.session = session;\n\t\tthis.dialect = dialect;\n\t\tthis._ = {\n\t\t\tselectedFields: fields as TSelectedFields,\n\t\t} as this['_'];\n\t\tthis.tableName = getTableLikeName(table);\n\t\tthis.joinsNotNullableMap = typeof this.tableName === 'string' ? { [this.tableName]: true } : {};\n\t}\n\n\tprivate createJoin<TJoinType extends JoinType>(\n\t\tjoinType: TJoinType,\n\t): PgJoinFn<this, TDynamic, TJoinType> {\n\t\treturn (\n\t\t\ttable: PgTable | Subquery | PgViewBase | SQL,\n\t\t\ton: ((aliases: TSelection) => SQL | undefined) | SQL | undefined,\n\t\t) => {\n\t\t\tconst baseTableName = this.tableName;\n\t\t\tconst tableName = getTableLikeName(table);\n\n\t\t\tif (typeof tableName === 'string' && this.config.joins?.some((join) => join.alias === tableName)) {\n\t\t\t\tthrow new Error(`Alias \"${tableName}\" is already used in this query`);\n\t\t\t}\n\n\t\t\tif (!this.isPartialSelect) {\n\t\t\t\t// If this is the first join and this is not a partial select and we're not selecting from raw SQL, \"move\" the fields from the main table to the nested object\n\t\t\t\tif (Object.keys(this.joinsNotNullableMap).length === 1 && typeof baseTableName === 'string') {\n\t\t\t\t\tthis.config.fields = {\n\t\t\t\t\t\t[baseTableName]: this.config.fields,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (typeof tableName === 'string' && !is(table, SQL)) {\n\t\t\t\t\tconst selection = is(table, Subquery)\n\t\t\t\t\t\t? table._.selectedFields\n\t\t\t\t\t\t: is(table, View)\n\t\t\t\t\t\t? table[ViewBaseConfig].selectedFields\n\t\t\t\t\t\t: table[Table.Symbol.Columns];\n\t\t\t\t\tthis.config.fields[tableName] = selection;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof on === 'function') {\n\t\t\t\ton = on(\n\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\tthis.config.fields,\n\t\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t\t) as TSelection,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!this.config.joins) {\n\t\t\t\tthis.config.joins = [];\n\t\t\t}\n\n\t\t\tthis.config.joins.push({ on, table, joinType, alias: tableName });\n\n\t\t\tif (typeof tableName === 'string') {\n\t\t\t\tswitch (joinType) {\n\t\t\t\t\tcase 'left': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'right': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'inner': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'full': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this as any;\n\t\t};\n\t}\n\n\t/**\n\t * Executes a `left join` operation by adding another table to the current query.\n\t *\n\t * Calling this method associates each row of the table with the corresponding row from the joined table, if a match is found. If no matching row exists, it sets all columns of the joined table to null.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#left-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User; pets: Pet | null }[] = await db.select()\n\t *   .from(users)\n\t *   .leftJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number | null }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .leftJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tleftJoin = this.createJoin('left');\n\n\t/**\n\t * Executes a `right join` operation by adding another table to the current query.\n\t *\n\t * Calling this method associates each row of the joined table with the corresponding row from the main table, if a match is found. If no matching row exists, it sets all columns of the main table to null.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#right-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User | null; pets: Pet }[] = await db.select()\n\t *   .from(users)\n\t *   .rightJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number | null; petId: number }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .rightJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\trightJoin = this.createJoin('right');\n\n\t/**\n\t * Executes an `inner join` operation, creating a new table by combining rows from two tables that have matching values.\n\t *\n\t * Calling this method retrieves rows that have corresponding entries in both joined tables. Rows without matching entries in either table are excluded, resulting in a table that includes only matching pairs.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#inner-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User; pets: Pet }[] = await db.select()\n\t *   .from(users)\n\t *   .innerJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .innerJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tinnerJoin = this.createJoin('inner');\n\n\t/**\n\t * Executes a `full join` operation by combining rows from two tables into a new table.\n\t *\n\t * Calling this method retrieves all rows from both main and joined tables, merging rows with matching values and filling in `null` for non-matching columns.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#full-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User | null; pets: Pet | null }[] = await db.select()\n\t *   .from(users)\n\t *   .fullJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number | null; petId: number | null }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .fullJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tfullJoin = this.createJoin('full');\n\n\tprivate createSetOperator(\n\t\ttype: SetOperator,\n\t\tisAll: boolean,\n\t): <TValue extends PgSetOperatorWithResult<TResult>>(\n\t\trightSelection:\n\t\t\t| ((setOperators: GetPgSetOperators) => SetOperatorRightSelect<TValue, TResult>)\n\t\t\t| SetOperatorRightSelect<TValue, TResult>,\n\t) => PgSelectWithout<\n\t\tthis,\n\t\tTDynamic,\n\t\tPgSetOperatorExcludedMethods,\n\t\ttrue\n\t> {\n\t\treturn (rightSelection) => {\n\t\t\tconst rightSelect = (typeof rightSelection === 'function'\n\t\t\t\t? rightSelection(getPgSetOperators())\n\t\t\t\t: rightSelection) as TypedQueryBuilder<\n\t\t\t\t\tany,\n\t\t\t\t\tTResult\n\t\t\t\t>;\n\n\t\t\tif (!haveSameKeys(this.getSelectedFields(), rightSelect.getSelectedFields())) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Set operator error (union / intersect / except): selected fields are not the same or are in a different order',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.config.setOperators.push({ type, isAll, rightSelect });\n\t\t\treturn this as any;\n\t\t};\n\t}\n\n\t/**\n\t * Adds `union` set operator to the query.\n\t *\n\t * Calling this method will combine the result sets of the `select` statements and remove any duplicate rows that appear across them.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#union}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all unique names from customers and users tables\n\t * await db.select({ name: users.name })\n\t *   .from(users)\n\t *   .union(\n\t *     db.select({ name: customers.name }).from(customers)\n\t *   );\n\t * // or\n\t * import { union } from 'drizzle-orm/pg-core'\n\t *\n\t * await union(\n\t *   db.select({ name: users.name }).from(users),\n\t *   db.select({ name: customers.name }).from(customers)\n\t * );\n\t * ```\n\t */\n\tunion = this.createSetOperator('union', false);\n\n\t/**\n\t * Adds `union all` set operator to the query.\n\t *\n\t * Calling this method will combine the result-set of the `select` statements and keep all duplicate rows that appear across them.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#union-all}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all transaction ids from both online and in-store sales\n\t * await db.select({ transaction: onlineSales.transactionId })\n\t *   .from(onlineSales)\n\t *   .unionAll(\n\t *     db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n\t *   );\n\t * // or\n\t * import { unionAll } from 'drizzle-orm/pg-core'\n\t *\n\t * await unionAll(\n\t *   db.select({ transaction: onlineSales.transactionId }).from(onlineSales),\n\t *   db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n\t * );\n\t * ```\n\t */\n\tunionAll = this.createSetOperator('union', true);\n\n\t/**\n\t * Adds `intersect` set operator to the query.\n\t *\n\t * Calling this method will retain only the rows that are present in both result sets and eliminate duplicates.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select course names that are offered in both departments A and B\n\t * await db.select({ courseName: depA.courseName })\n\t *   .from(depA)\n\t *   .intersect(\n\t *     db.select({ courseName: depB.courseName }).from(depB)\n\t *   );\n\t * // or\n\t * import { intersect } from 'drizzle-orm/pg-core'\n\t *\n\t * await intersect(\n\t *   db.select({ courseName: depA.courseName }).from(depA),\n\t *   db.select({ courseName: depB.courseName }).from(depB)\n\t * );\n\t * ```\n\t */\n\tintersect = this.createSetOperator('intersect', false);\n\n\t/**\n\t * Adds `intersect all` set operator to the query.\n\t *\n\t * Calling this method will retain only the rows that are present in both result sets including all duplicates.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect-all}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all products and quantities that are ordered by both regular and VIP customers\n\t * await db.select({\n\t *   productId: regularCustomerOrders.productId,\n\t *   quantityOrdered: regularCustomerOrders.quantityOrdered\n\t * })\n\t * .from(regularCustomerOrders)\n\t * .intersectAll(\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * // or\n\t * import { intersectAll } from 'drizzle-orm/pg-core'\n\t *\n\t * await intersectAll(\n\t *   db.select({\n\t *     productId: regularCustomerOrders.productId,\n\t *     quantityOrdered: regularCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(regularCustomerOrders),\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * ```\n\t */\n\tintersectAll = this.createSetOperator('intersect', true);\n\n\t/**\n\t * Adds `except` set operator to the query.\n\t *\n\t * Calling this method will retrieve all unique rows from the left query, except for the rows that are present in the result set of the right query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#except}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all courses offered in department A but not in department B\n\t * await db.select({ courseName: depA.courseName })\n\t *   .from(depA)\n\t *   .except(\n\t *     db.select({ courseName: depB.courseName }).from(depB)\n\t *   );\n\t * // or\n\t * import { except } from 'drizzle-orm/pg-core'\n\t *\n\t * await except(\n\t *   db.select({ courseName: depA.courseName }).from(depA),\n\t *   db.select({ courseName: depB.courseName }).from(depB)\n\t * );\n\t * ```\n\t */\n\texcept = this.createSetOperator('except', false);\n\n\t/**\n\t * Adds `except all` set operator to the query.\n\t *\n\t * Calling this method will retrieve all rows from the left query, except for the rows that are present in the result set of the right query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#except-all}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all products that are ordered by regular customers but not by VIP customers\n\t * await db.select({\n\t *   productId: regularCustomerOrders.productId,\n\t *   quantityOrdered: regularCustomerOrders.quantityOrdered,\n\t * })\n\t * .from(regularCustomerOrders)\n\t * .exceptAll(\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered,\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * // or\n\t * import { exceptAll } from 'drizzle-orm/pg-core'\n\t *\n\t * await exceptAll(\n\t *   db.select({\n\t *     productId: regularCustomerOrders.productId,\n\t *     quantityOrdered: regularCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(regularCustomerOrders),\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * ```\n\t */\n\texceptAll = this.createSetOperator('except', true);\n\n\t/** @internal */\n\taddSetOperators(setOperators: PgSelectConfig['setOperators']): PgSelectWithout<\n\t\tthis,\n\t\tTDynamic,\n\t\tPgSetOperatorExcludedMethods,\n\t\ttrue\n\t> {\n\t\tthis.config.setOperators.push(...setOperators);\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `where` clause to the query.\n\t *\n\t * Calling this method will select only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#filtering}\n\t *\n\t * @param where the `where` clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be selected.\n\t *\n\t * ```ts\n\t * // Select all cars with green color\n\t * await db.select().from(cars).where(eq(cars.color, 'green'));\n\t * // or\n\t * await db.select().from(cars).where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Select all BMW cars with a green color\n\t * await db.select().from(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Select all cars with the green or blue color\n\t * await db.select().from(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(\n\t\twhere: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined,\n\t): PgSelectWithout<this, TDynamic, 'where'> {\n\t\tif (typeof where === 'function') {\n\t\t\twhere = where(\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t}\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `having` clause to the query.\n\t *\n\t * Calling this method will select only those rows that fulfill a specified condition. It is typically used with aggregate functions to filter the aggregated data based on a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#aggregations}\n\t *\n\t * @param having the `having` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all brands with more than one car\n\t * await db.select({\n\t * \tbrand: cars.brand,\n\t * \tcount: sql<number>`cast(count(${cars.id}) as int)`,\n\t * })\n\t *   .from(cars)\n\t *   .groupBy(cars.brand)\n\t *   .having(({ count }) => gt(count, 1));\n\t * ```\n\t */\n\thaving(\n\t\thaving: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined,\n\t): PgSelectWithout<this, TDynamic, 'having'> {\n\t\tif (typeof having === 'function') {\n\t\t\thaving = having(\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t}\n\t\tthis.config.having = having;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `group by` clause to the query.\n\t *\n\t * Calling this method will group rows that have the same values into summary rows, often used for aggregation purposes.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#aggregations}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Group and count people by their last names\n\t * await db.select({\n\t *    lastName: people.lastName,\n\t *    count: sql<number>`cast(count(*) as int)`\n\t * })\n\t *   .from(people)\n\t *   .groupBy(people.lastName);\n\t * ```\n\t */\n\tgroupBy(\n\t\tbuilder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>,\n\t): PgSelectWithout<this, TDynamic, 'groupBy'>;\n\tgroupBy(...columns: (PgColumn | SQL | SQL.Aliased)[]): PgSelectWithout<this, TDynamic, 'groupBy'>;\n\tgroupBy(\n\t\t...columns:\n\t\t\t| [(aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>]\n\t\t\t| (PgColumn | SQL | SQL.Aliased)[]\n\t): PgSelectWithout<this, TDynamic, 'groupBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst groupBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t\tthis.config.groupBy = Array.isArray(groupBy) ? groupBy : [groupBy];\n\t\t} else {\n\t\t\tthis.config.groupBy = columns as (PgColumn | SQL | SQL.Aliased)[];\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `order by` clause to the query.\n\t *\n\t * Calling this method will sort the result-set in ascending or descending order. By default, the sort order is ascending.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#order-by}\n\t *\n\t * @example\n\t *\n\t * ```\n\t * // Select cars ordered by year\n\t * await db.select().from(cars).orderBy(cars.year);\n\t * ```\n\t *\n\t * You can specify whether results are in ascending or descending order with the `asc()` and `desc()` operators.\n\t *\n\t * ```ts\n\t * // Select cars ordered by year in descending order\n\t * await db.select().from(cars).orderBy(desc(cars.year));\n\t *\n\t * // Select cars ordered by year and price\n\t * await db.select().from(cars).orderBy(asc(cars.year), desc(cars.price));\n\t * ```\n\t */\n\torderBy(\n\t\tbuilder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>,\n\t): PgSelectWithout<this, TDynamic, 'orderBy'>;\n\torderBy(...columns: (PgColumn | SQL | SQL.Aliased)[]): PgSelectWithout<this, TDynamic, 'orderBy'>;\n\torderBy(\n\t\t...columns:\n\t\t\t| [(aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>]\n\t\t\t| (PgColumn | SQL | SQL.Aliased)[]\n\t): PgSelectWithout<this, TDynamic, 'orderBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst orderBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\n\t\t\tconst orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n\n\t\t\tif (this.config.setOperators.length > 0) {\n\t\t\t\tthis.config.setOperators.at(-1)!.orderBy = orderByArray;\n\t\t\t} else {\n\t\t\t\tthis.config.orderBy = orderByArray;\n\t\t\t}\n\t\t} else {\n\t\t\tconst orderByArray = columns as (PgColumn | SQL | SQL.Aliased)[];\n\n\t\t\tif (this.config.setOperators.length > 0) {\n\t\t\t\tthis.config.setOperators.at(-1)!.orderBy = orderByArray;\n\t\t\t} else {\n\t\t\t\tthis.config.orderBy = orderByArray;\n\t\t\t}\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `limit` clause to the query.\n\t *\n\t * Calling this method will set the maximum number of rows that will be returned by this query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n\t *\n\t * @param limit the `limit` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Get the first 10 people from this query.\n\t * await db.select().from(people).limit(10);\n\t * ```\n\t */\n\tlimit(limit: number | Placeholder): PgSelectWithout<this, TDynamic, 'limit'> {\n\t\tif (this.config.setOperators.length > 0) {\n\t\t\tthis.config.setOperators.at(-1)!.limit = limit;\n\t\t} else {\n\t\t\tthis.config.limit = limit;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `offset` clause to the query.\n\t *\n\t * Calling this method will skip a number of rows when returning results from this query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n\t *\n\t * @param offset the `offset` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Get the 10th-20th people from this query.\n\t * await db.select().from(people).offset(10).limit(10);\n\t * ```\n\t */\n\toffset(offset: number | Placeholder): PgSelectWithout<this, TDynamic, 'offset'> {\n\t\tif (this.config.setOperators.length > 0) {\n\t\t\tthis.config.setOperators.at(-1)!.offset = offset;\n\t\t} else {\n\t\t\tthis.config.offset = offset;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `for` clause to the query.\n\t *\n\t * Calling this method will specify a lock strength for this query that controls how strictly it acquires exclusive access to the rows being queried.\n\t *\n\t * See docs: {@link https://www.postgresql.org/docs/current/sql-select.html#SQL-FOR-UPDATE-SHARE}\n\t *\n\t * @param strength the lock strength.\n\t * @param config the lock configuration.\n\t */\n\tfor(strength: LockStrength, config: LockConfig = {}): PgSelectWithout<this, TDynamic, 'for'> {\n\t\tthis.config.lockingClause = { strength, config };\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildSelectQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\tas<TAlias extends string>(\n\t\talias: TAlias,\n\t): SubqueryWithSelection<this['_']['selectedFields'], TAlias> {\n\t\treturn new Proxy(\n\t\t\tnew Subquery(this.getSQL(), this.config.fields, alias),\n\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t) as SubqueryWithSelection<this['_']['selectedFields'], TAlias>;\n\t}\n\n\t/** @internal */\n\toverride getSelectedFields(): this['_']['selectedFields'] {\n\t\treturn new Proxy(\n\t\t\tthis.config.fields,\n\t\t\tnew SelectionProxyHandler({ alias: this.tableName, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t) as this['_']['selectedFields'];\n\t}\n\n\t$dynamic(): PgSelectDynamic<this> {\n\t\treturn this;\n\t}\n}\n\nexport interface PgSelectBase<\n\tTTableName extends string | undefined,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode,\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult extends any[] = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields extends ColumnsSelection = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends\n\tPgSelectQueryBuilderBase<\n\t\tPgSelectHKT,\n\t\tTTableName,\n\t\tTSelection,\n\t\tTSelectMode,\n\t\tTNullabilityMap,\n\t\tTDynamic,\n\t\tTExcludedMethods,\n\t\tTResult,\n\t\tTSelectedFields\n\t>,\n\tQueryPromise<TResult>,\n\tSQLWrapper\n{}\n\nexport class PgSelectBase<\n\tTTableName extends string | undefined,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode,\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends PgSelectQueryBuilderBase<\n\tPgSelectHKT,\n\tTTableName,\n\tTSelection,\n\tTSelectMode,\n\tTNullabilityMap,\n\tTDynamic,\n\tTExcludedMethods,\n\tTResult,\n\tTSelectedFields\n> implements RunnableQuery<TResult, 'pg'>, SQLWrapper {\n\tstatic readonly [entityKind]: string = 'PgSelect';\n\n\t/** @internal */\n\t_prepare(name?: string): PgSelectPrepare<this> {\n\t\tconst { session, config, dialect, joinsNotNullableMap } = this;\n\t\tif (!session) {\n\t\t\tthrow new Error('Cannot execute a query on a query builder. Please use a database instance instead.');\n\t\t}\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\tconst fieldsList = orderSelectedFields<PgColumn>(config.fields);\n\t\t\tconst query = session.prepareQuery<\n\t\t\t\tPreparedQueryConfig & { execute: TResult }\n\t\t\t>(dialect.sqlToQuery(this.getSQL()), fieldsList, name, true);\n\t\t\tquery.joinsNotNullableMap = joinsNotNullableMap;\n\t\t\treturn query;\n\t\t});\n\t}\n\n\t/**\n\t * Create a prepared statement for this query. This allows\n\t * the database to remember this query for the given session\n\t * and call it by name, rather than specifying the full query.\n\t *\n\t * {@link https://www.postgresql.org/docs/current/sql-prepare.html | Postgres prepare documentation}\n\t */\n\tprepare(name: string): PgSelectPrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\texecute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues);\n\t\t});\n\t};\n}\n\napplyMixins(PgSelectBase, [QueryPromise]);\n\nfunction createSetOperator(type: SetOperator, isAll: boolean): PgCreateSetOperatorFn {\n\treturn (leftSelect, rightSelect, ...restSelects) => {\n\t\tconst setOperators = [rightSelect, ...restSelects].map((select) => ({\n\t\t\ttype,\n\t\t\tisAll,\n\t\t\trightSelect: select as AnyPgSelect,\n\t\t}));\n\n\t\tfor (const setOperator of setOperators) {\n\t\t\tif (!haveSameKeys((leftSelect as any).getSelectedFields(), setOperator.rightSelect.getSelectedFields())) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Set operator error (union / intersect / except): selected fields are not the same or are in a different order',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn (leftSelect as AnyPgSelect).addSetOperators(setOperators) as any;\n\t};\n}\n\nconst getPgSetOperators = () => ({\n\tunion,\n\tunionAll,\n\tintersect,\n\tintersectAll,\n\texcept,\n\texceptAll,\n});\n\n/**\n * Adds `union` set operator to the query.\n *\n * Calling this method will combine the result sets of the `select` statements and remove any duplicate rows that appear across them.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#union}\n *\n * @example\n *\n * ```ts\n * // Select all unique names from customers and users tables\n * import { union } from 'drizzle-orm/pg-core'\n *\n * await union(\n *   db.select({ name: users.name }).from(users),\n *   db.select({ name: customers.name }).from(customers)\n * );\n * // or\n * await db.select({ name: users.name })\n *   .from(users)\n *   .union(\n *     db.select({ name: customers.name }).from(customers)\n *   );\n * ```\n */\nexport const union = createSetOperator('union', false);\n\n/**\n * Adds `union all` set operator to the query.\n *\n * Calling this method will combine the result-set of the `select` statements and keep all duplicate rows that appear across them.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#union-all}\n *\n * @example\n *\n * ```ts\n * // Select all transaction ids from both online and in-store sales\n * import { unionAll } from 'drizzle-orm/pg-core'\n *\n * await unionAll(\n *   db.select({ transaction: onlineSales.transactionId }).from(onlineSales),\n *   db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n * );\n * // or\n * await db.select({ transaction: onlineSales.transactionId })\n *   .from(onlineSales)\n *   .unionAll(\n *     db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n *   );\n * ```\n */\nexport const unionAll = createSetOperator('union', true);\n\n/**\n * Adds `intersect` set operator to the query.\n *\n * Calling this method will retain only the rows that are present in both result sets and eliminate duplicates.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect}\n *\n * @example\n *\n * ```ts\n * // Select course names that are offered in both departments A and B\n * import { intersect } from 'drizzle-orm/pg-core'\n *\n * await intersect(\n *   db.select({ courseName: depA.courseName }).from(depA),\n *   db.select({ courseName: depB.courseName }).from(depB)\n * );\n * // or\n * await db.select({ courseName: depA.courseName })\n *   .from(depA)\n *   .intersect(\n *     db.select({ courseName: depB.courseName }).from(depB)\n *   );\n * ```\n */\nexport const intersect = createSetOperator('intersect', false);\n\n/**\n * Adds `intersect all` set operator to the query.\n *\n * Calling this method will retain only the rows that are present in both result sets including all duplicates.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect-all}\n *\n * @example\n *\n * ```ts\n * // Select all products and quantities that are ordered by both regular and VIP customers\n * import { intersectAll } from 'drizzle-orm/pg-core'\n *\n * await intersectAll(\n *   db.select({\n *     productId: regularCustomerOrders.productId,\n *     quantityOrdered: regularCustomerOrders.quantityOrdered\n *   })\n *   .from(regularCustomerOrders),\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered\n *   })\n *   .from(vipCustomerOrders)\n * );\n * // or\n * await db.select({\n *   productId: regularCustomerOrders.productId,\n *   quantityOrdered: regularCustomerOrders.quantityOrdered\n * })\n * .from(regularCustomerOrders)\n * .intersectAll(\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered\n *   })\n *   .from(vipCustomerOrders)\n * );\n * ```\n */\nexport const intersectAll = createSetOperator('intersect', true);\n\n/**\n * Adds `except` set operator to the query.\n *\n * Calling this method will retrieve all unique rows from the left query, except for the rows that are present in the result set of the right query.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#except}\n *\n * @example\n *\n * ```ts\n * // Select all courses offered in department A but not in department B\n * import { except } from 'drizzle-orm/pg-core'\n *\n * await except(\n *   db.select({ courseName: depA.courseName }).from(depA),\n *   db.select({ courseName: depB.courseName }).from(depB)\n * );\n * // or\n * await db.select({ courseName: depA.courseName })\n *   .from(depA)\n *   .except(\n *     db.select({ courseName: depB.courseName }).from(depB)\n *   );\n * ```\n */\nexport const except = createSetOperator('except', false);\n\n/**\n * Adds `except all` set operator to the query.\n *\n * Calling this method will retrieve all rows from the left query, except for the rows that are present in the result set of the right query.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#except-all}\n *\n * @example\n *\n * ```ts\n * // Select all products that are ordered by regular customers but not by VIP customers\n * import { exceptAll } from 'drizzle-orm/pg-core'\n *\n * await exceptAll(\n *   db.select({\n *     productId: regularCustomerOrders.productId,\n *     quantityOrdered: regularCustomerOrders.quantityOrdered\n *   })\n *   .from(regularCustomerOrders),\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered\n *   })\n *   .from(vipCustomerOrders)\n * );\n * // or\n * await db.select({\n *   productId: regularCustomerOrders.productId,\n *   quantityOrdered: regularCustomerOrders.quantityOrdered,\n * })\n * .from(regularCustomerOrders)\n * .exceptAll(\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered,\n *   })\n *   .from(vipCustomerOrders)\n * );\n * ```\n */\nexport const exceptAll = createSetOperator('except', true);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13362, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/jsonb.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgJsonbBuilderInitial<TName extends string> = PgJsonbBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'PgJsonb';\n\tdata: unknown;\n\tdriverParam: unknown;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgJsonbBuilder<T extends ColumnBuilderBaseConfig<'json', 'PgJsonb'>> extends PgColumnBuilder<T> {\n\tstatic readonly [entityKind]: string = 'PgJsonbBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'PgJsonb');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgJsonb<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgJsonb<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgJsonb<T extends ColumnBaseConfig<'json', 'PgJsonb'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgJsonb';\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgJsonbBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn 'jsonb';\n\t}\n\n\toverride mapToDriverValue(value: T['data']): string {\n\t\treturn JSON.stringify(value);\n\t}\n\n\toverride mapFromDriverValue(value: T['data'] | string): T['data'] {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(value);\n\t\t\t} catch {\n\t\t\t\treturn value as T['data'];\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport function jsonb<TName extends string>(name: TName): PgJsonbBuilderInitial<TName> {\n\treturn new PgJsonbBuilder(name);\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAE3B,SAAS,UAAU,uBAAuB;;;AAYnC,MAAM,yLAA6E,kBAAA,CAAmB;IAC5G,OAAA,0IAAiB,aAAU,CAAA,GAAY,iBAAA;IAEvC,YAAY,IAAA,CAAiB;QAC5B,KAAA,CAAM,MAAM,QAAQ,SAAS;IAC9B;IAAA,cAAA,GAGS,MACR,KAAA,EAC2C;QAC3C,OAAO,IAAI,QAAyC,OAAO,IAAA,CAAK,MAA8C;IAC/G;AACD;AAEO,MAAM,kLAA+D,WAAA,CAAY;IACvF,OAAA,0IAAiB,aAAU,CAAA,GAAY,UAAA;IAEvC,YAAY,KAAA,EAA6C,MAAA,CAAqC;QAC7F,KAAA,CAAM,OAAO,MAAM;IACpB;IAEA,aAAqB;QACpB,OAAO;IACR;IAES,iBAAiB,KAAA,EAA0B;QACnD,OAAO,KAAK,SAAA,CAAU,KAAK;IAC5B;IAES,mBAAmB,KAAA,EAAsC;QACjE,IAAI,OAAO,UAAU,UAAU;YAC9B,IAAI;gBACH,OAAO,KAAK,KAAA,CAAM,KAAK;YACxB,EAAA,OAAQ;gBACP,OAAO;YACR;QACD;QACA,OAAO;IACR;AACD;AAEO,SAAS,MAA4B,IAAA,EAA2C;IACtF,OAAO,IAAI,eAAe,IAAI;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 13407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13413, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/json.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgJsonBuilderInitial<TName extends string> = PgJsonBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'PgJson';\n\tdata: unknown;\n\tdriverParam: unknown;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgJsonBuilder<T extends ColumnBuilderBaseConfig<'json', 'PgJson'>> extends PgColumnBuilder<\n\tT\n> {\n\tstatic readonly [entityKind]: string = 'PgJsonBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'PgJson');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgJson<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgJson<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgJson<T extends ColumnBaseConfig<'json', 'PgJson'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgJson';\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgJsonBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn 'json';\n\t}\n\n\toverride mapToDriverValue(value: T['data']): string {\n\t\treturn JSON.stringify(value);\n\t}\n\n\toverride mapFromDriverValue(value: T['data'] | string): T['data'] {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(value);\n\t\t\t} catch {\n\t\t\t\treturn value as T['data'];\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport function json<TName extends string>(name: TName): PgJsonBuilderInitial<TName> {\n\treturn new PgJsonBuilder(name);\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAE3B,SAAS,UAAU,uBAAuB;;;AAYnC,MAAM,wLAA2E,kBAAA,CAEtF;IACD,OAAA,0IAAiB,aAAU,CAAA,GAAY,gBAAA;IAEvC,YAAY,IAAA,CAAiB;QAC5B,KAAA,CAAM,MAAM,QAAQ,QAAQ;IAC7B;IAAA,cAAA,GAGS,MACR,KAAA,EAC0C;QAC1C,OAAO,IAAI,OAAwC,OAAO,IAAA,CAAK,MAA8C;IAC9G;AACD;AAEO,MAAM,iLAA6D,WAAA,CAAY;IACrF,OAAA,0IAAiB,aAAU,CAAA,GAAY,SAAA;IAEvC,YAAY,KAAA,EAA6C,MAAA,CAAoC;QAC5F,KAAA,CAAM,OAAO,MAAM;IACpB;IAEA,aAAqB;QACpB,OAAO;IACR;IAES,iBAAiB,KAAA,EAA0B;QACnD,OAAO,KAAK,SAAA,CAAU,KAAK;IAC5B;IAES,mBAAmB,KAAA,EAAsC;QACjE,IAAI,OAAO,UAAU,UAAU;YAC9B,IAAI;gBACH,OAAO,KAAK,KAAA,CAAM,KAAK;YACxB,EAAA,OAAQ;gBACP,OAAO;YACR;QACD;QACA,OAAO;IACR;AACD;AAEO,SAAS,KAA2B,IAAA,EAA0C;IACpF,OAAO,IAAI,cAAc,IAAI;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 13458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13464, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/time.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn } from './common.ts';\nimport { PgDateColumnBaseBuilder } from './date.common.ts';\nimport type { Precision } from './timestamp.ts';\n\nexport type PgTimeBuilderInitial<TName extends string> = PgTimeBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgTime';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgTimeBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgTime'>> extends PgDateColumnBaseBuilder<\n\tT,\n\t{ withTimezone: boolean; precision: number | undefined }\n> {\n\tstatic readonly [entityKind]: string = 'PgTimeBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\treadonly withTimezone: boolean,\n\t\treadonly precision: number | undefined,\n\t) {\n\t\tsuper(name, 'string', 'PgTime');\n\t\tthis.config.withTimezone = withTimezone;\n\t\tthis.config.precision = precision;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgTime<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgTime<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgTime<T extends ColumnBaseConfig<'string', 'PgTime'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgTime';\n\n\treadonly withTimezone: boolean;\n\treadonly precision: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgTimeBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.withTimezone = config.withTimezone;\n\t\tthis.precision = config.precision;\n\t}\n\n\tgetSQLType(): string {\n\t\tconst precision = this.precision === undefined ? '' : `(${this.precision})`;\n\t\treturn `time${precision}${this.withTimezone ? ' with time zone' : ''}`;\n\t}\n}\n\nexport interface TimeConfig {\n\tprecision?: Precision;\n\twithTimezone?: boolean;\n}\n\nexport function time<TName extends string>(name: TName, config: TimeConfig = {}): PgTimeBuilderInitial<TName> {\n\treturn new PgTimeBuilder(name, config.withTimezone ?? false, config.precision);\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAG3B,SAAS,+BAA+B;AADxC,SAAS,gBAAgB;;;;AAclB,MAAM,gMAA6E,0BAAA,CAGxF;IAGD,YACC,IAAA,EACS,YAAA,EACA,SAAA,CACR;QACD,KAAA,CAAM,MAAM,UAAU,QAAQ;QAHrB,IAAA,CAAA,YAAA,GAAA;QACA,IAAA,CAAA,SAAA,GAAA;QAGT,IAAA,CAAK,MAAA,CAAO,YAAA,GAAe;QAC3B,IAAA,CAAK,MAAA,CAAO,SAAA,GAAY;IACzB;IAVA,OAAA,yIAAiB,cAAU,CAAA,GAAY,gBAAA;IAAA,cAAA,GAa9B,MACR,KAAA,EAC0C;QAC1C,OAAO,IAAI,OAAwC,OAAO,IAAA,CAAK,MAA8C;IAC9G;AACD;AAEO,MAAM,iLAA+D,WAAA,CAAY;IACvF,OAAA,0IAAiB,aAAU,CAAA,GAAY,SAAA;IAE9B,aAAA;IACA,UAAA;IAET,YAAY,KAAA,EAA6C,MAAA,CAAoC;QAC5F,KAAA,CAAM,OAAO,MAAM;QACnB,IAAA,CAAK,YAAA,GAAe,OAAO,YAAA;QAC3B,IAAA,CAAK,SAAA,GAAY,OAAO,SAAA;IACzB;IAEA,aAAqB;QACpB,MAAM,YAAY,IAAA,CAAK,SAAA,KAAc,KAAA,IAAY,KAAK,CAAA,CAAA,EAAI,IAAA,CAAK,SAAS,CAAA,CAAA,CAAA;QACxE,OAAO,CAAA,IAAA,EAAO,SAAS,GAAG,IAAA,CAAK,YAAA,GAAe,oBAAoB,EAAE,EAAA;IACrE;AACD;AAOO,SAAS,KAA2B,IAAA,EAAa,SAAqB,CAAC,CAAA,EAAgC;IAC7G,OAAO,IAAI,cAAc,MAAM,OAAO,YAAA,IAAgB,OAAO,OAAO,SAAS;AAC9E","ignoreList":[0]}},
    {"offset": {"line": 13507, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13513, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/date.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn } from './common.ts';\nimport { PgDateColumnBaseBuilder } from './date.common.ts';\n\nexport type PgDateBuilderInitial<TName extends string> = PgDateBuilder<{\n\tname: TName;\n\tdataType: 'date';\n\tcolumnType: 'PgDate';\n\tdata: Date;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgDateBuilder<T extends ColumnBuilderBaseConfig<'date', 'PgDate'>> extends PgDateColumnBaseBuilder<T> {\n\tstatic readonly [entityKind]: string = 'PgDateBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'date', 'PgDate');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgDate<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgDate<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgDate<T extends ColumnBaseConfig<'date', 'PgDate'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgDate';\n\n\tgetSQLType(): string {\n\t\treturn 'date';\n\t}\n\n\toverride mapFromDriverValue(value: string): Date {\n\t\treturn new Date(value);\n\t}\n\n\toverride mapToDriverValue(value: Date): string {\n\t\treturn value.toISOString();\n\t}\n}\n\nexport type PgDateStringBuilderInitial<TName extends string> = PgDateStringBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgDateString';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgDateStringBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgDateString'>>\n\textends PgDateColumnBaseBuilder<T>\n{\n\tstatic readonly [entityKind]: string = 'PgDateStringBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgDateString');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgDateString<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgDateString<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgDateString<T extends ColumnBaseConfig<'string', 'PgDateString'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgDateString';\n\n\tgetSQLType(): string {\n\t\treturn 'date';\n\t}\n}\n\nexport function date<TName extends string>(\n\tname: TName,\n\tconfig?: { mode: 'string' },\n): PgDateStringBuilderInitial<TName>;\nexport function date<TName extends string>(TName: TName, config?: { mode: 'date' }): PgDateBuilderInitial<TName>;\nexport function date<TName extends string>(name: TName, config?: { mode: 'date' | 'string' }) {\n\tif (config?.mode === 'date') {\n\t\treturn new PgDateBuilder(name);\n\t}\n\treturn new PgDateStringBuilder(name);\n}\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,kBAAkB;AAG3B,SAAS,+BAA+B;AADxC,SAAS,gBAAgB;;;;AAalB,MAAM,gMAA2E,0BAAA,CAA2B;IAClH,OAAA,0IAAiB,aAAU,CAAA,GAAY,gBAAA;IAEvC,YAAY,IAAA,CAAiB;QAC5B,KAAA,CAAM,MAAM,QAAQ,QAAQ;IAC7B;IAAA,cAAA,GAGS,MACR,KAAA,EAC0C;QAC1C,OAAO,IAAI,OAAwC,OAAO,IAAA,CAAK,MAA8C;IAC9G;AACD;AAEO,MAAM,iLAA6D,WAAA,CAAY;IACrF,OAAA,0IAAiB,aAAU,CAAA,GAAY,SAAA;IAEvC,aAAqB;QACpB,OAAO;IACR;IAES,mBAAmB,KAAA,EAAqB;QAChD,OAAO,IAAI,KAAK,KAAK;IACtB;IAES,iBAAiB,KAAA,EAAqB;QAC9C,OAAO,MAAM,WAAA,CAAY;IAC1B;AACD;AAYO,MAAM,sMACJ,0BAAA,CACT;IACC,OAAA,CAAiB,sJAAU,CAAA,GAAY,sBAAA;IAEvC,YAAY,IAAA,CAAiB;QAC5B,KAAA,CAAM,MAAM,UAAU,cAAc;IACrC;IAAA,cAAA,GAGS,MACR,KAAA,EACgD;QAChD,OAAO,IAAI,aACV,OACA,IAAA,CAAK,MAAA;IAEP;AACD;AAEO,MAAM,uLAA2E,WAAA,CAAY;IACnG,OAAA,yIAAiB,cAAU,CAAA,GAAY,eAAA;IAEvC,aAAqB;QACpB,OAAO;IACR;AACD;AAOO,SAAS,KAA2B,IAAA,EAAa,MAAA,EAAsC;IAC7F,IAAI,QAAQ,SAAS,QAAQ;QAC5B,OAAO,IAAI,cAAc,IAAI;IAC9B;IACA,OAAO,IAAI,oBAAoB,IAAI;AACpC","ignoreList":[0]}},
    {"offset": {"line": 13570, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13576, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/columns/uuid.ts"],"sourcesContent":["import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { sql } from '~/sql/sql.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgUUIDBuilderInitial<TName extends string> = PgUUIDBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgUUID';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class PgUUIDBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgUUID'>> extends PgColumnBuilder<T> {\n\tstatic readonly [entityKind]: string = 'PgUUIDBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgUUID');\n\t}\n\n\t/**\n\t * Adds `default gen_random_uuid()` to the column definition.\n\t */\n\tdefaultRandom(): ReturnType<this['default']> {\n\t\treturn this.default(sql`gen_random_uuid()`) as ReturnType<this['default']>;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgUUID<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgUUID<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgUUID<T extends ColumnBaseConfig<'string', 'PgUUID'>> extends PgColumn<T> {\n\tstatic readonly [entityKind]: string = 'PgUUID';\n\n\tgetSQLType(): string {\n\t\treturn 'uuid';\n\t}\n}\n\nexport function uuid<TName extends string>(name: TName): PgUUIDBuilderInitial<TName> {\n\treturn new PgUUIDBuilder(name);\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,kBAAkB;AAE3B,SAAS,WAAW;AACpB,SAAS,UAAU,uBAAuB;;;;AAYnC,MAAM,wLAA6E,kBAAA,CAAmB;IAC5G,OAAA,0IAAiB,aAAU,CAAA,GAAY,gBAAA;IAEvC,YAAY,IAAA,CAAiB;QAC5B,KAAA,CAAM,MAAM,UAAU,QAAQ;IAC/B;IAAA;;GAAA,GAKA,gBAA6C;QAC5C,OAAO,IAAA,CAAK,OAAA,8IAAQ,MAAA,CAAA,iBAAA,CAAsB;IAC3C;IAAA,cAAA,GAGS,MACR,KAAA,EAC0C;QAC1C,OAAO,IAAI,OAAwC,OAAO,IAAA,CAAK,MAA8C;IAC9G;AACD;AAEO,MAAM,iLAA+D,WAAA,CAAY;IACvF,OAAA,0IAAiB,aAAU,CAAA,GAAY,SAAA;IAEvC,aAAqB;QACpB,OAAO;IACR;AACD;AAEO,SAAS,KAA2B,IAAA,EAA0C;IACpF,OAAO,IAAI,cAAc,IAAI;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 13612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13618, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/dialect.ts"],"sourcesContent":["import { aliasedTable, aliasedTableColumn, mapColumnsInAliasedSQLToAlias, mapColumnsInSQLToAlias } from '~/alias.ts';\nimport { Column } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { DrizzleError } from '~/errors.ts';\nimport type { MigrationConfig, MigrationMeta } from '~/migrator.ts';\nimport {\n\tPgColumn,\n\tPgDate,\n\tPgDateString,\n\tPgJson,\n\tPgJsonb,\n\tPgNumeric,\n\tPgTime,\n\tPgTimestamp,\n\tPgTimestampString,\n\tPgUUID,\n} from '~/pg-core/columns/index.ts';\nimport type {\n\tPgDeleteConfig,\n\tPgInsertConfig,\n\tPgSelectJoinConfig,\n\tPgUpdateConfig,\n} from '~/pg-core/query-builders/index.ts';\nimport type { PgSelectConfig, SelectedFieldsOrdered } from '~/pg-core/query-builders/select.types.ts';\nimport { PgTable } from '~/pg-core/table.ts';\nimport {\n\ttype BuildRelationalQueryResult,\n\ttype DBQueryConfig,\n\tgetOperators,\n\tgetOrderByOperators,\n\tMany,\n\tnormalizeRelation,\n\tOne,\n\ttype Relation,\n\ttype TableRelationalConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport { and, eq, View } from '~/sql/index.ts';\nimport {\n\ttype DriverValueEncoder,\n\ttype Name,\n\tParam,\n\ttype QueryTypingsValue,\n\ttype QueryWithTypings,\n\tSQL,\n\tsql,\n\ttype SQLChunk,\n} from '~/sql/sql.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { getTableName, getTableUniqueName, Table } from '~/table.ts';\nimport { orderSelectedFields, type UpdateSet } from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { PgSession } from './session.ts';\nimport { PgViewBase } from './view-base.ts';\nimport type { PgMaterializedView } from './view.ts';\n\nexport class PgDialect {\n\tstatic readonly [entityKind]: string = 'PgDialect';\n\n\tasync migrate(migrations: MigrationMeta[], session: PgSession, config: string | MigrationConfig): Promise<void> {\n\t\tconst migrationsTable = typeof config === 'string'\n\t\t\t? '__drizzle_migrations'\n\t\t\t: config.migrationsTable ?? '__drizzle_migrations';\n\t\tconst migrationsSchema = typeof config === 'string' ? 'drizzle' : config.migrationsSchema ?? 'drizzle';\n\t\tconst migrationTableCreate = sql`\n\t\t\tCREATE TABLE IF NOT EXISTS ${sql.identifier(migrationsSchema)}.${sql.identifier(migrationsTable)} (\n\t\t\t\tid SERIAL PRIMARY KEY,\n\t\t\t\thash text NOT NULL,\n\t\t\t\tcreated_at bigint\n\t\t\t)\n\t\t`;\n\t\tawait session.execute(sql`CREATE SCHEMA IF NOT EXISTS ${sql.identifier(migrationsSchema)}`);\n\t\tawait session.execute(migrationTableCreate);\n\n\t\tconst dbMigrations = await session.all<{ id: number; hash: string; created_at: string }>(\n\t\t\tsql`select id, hash, created_at from ${sql.identifier(migrationsSchema)}.${\n\t\t\t\tsql.identifier(migrationsTable)\n\t\t\t} order by created_at desc limit 1`,\n\t\t);\n\n\t\tconst lastDbMigration = dbMigrations[0];\n\t\tawait session.transaction(async (tx) => {\n\t\t\tfor await (const migration of migrations) {\n\t\t\t\tif (\n\t\t\t\t\t!lastDbMigration\n\t\t\t\t\t|| Number(lastDbMigration.created_at) < migration.folderMillis\n\t\t\t\t) {\n\t\t\t\t\tfor (const stmt of migration.sql) {\n\t\t\t\t\t\tawait tx.execute(sql.raw(stmt));\n\t\t\t\t\t}\n\t\t\t\t\tawait tx.execute(\n\t\t\t\t\t\tsql`insert into ${sql.identifier(migrationsSchema)}.${\n\t\t\t\t\t\t\tsql.identifier(migrationsTable)\n\t\t\t\t\t\t} (\"hash\", \"created_at\") values(${migration.hash}, ${migration.folderMillis})`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tescapeName(name: string): string {\n\t\treturn `\"${name}\"`;\n\t}\n\n\tescapeParam(num: number): string {\n\t\treturn `$${num + 1}`;\n\t}\n\n\tescapeString(str: string): string {\n\t\treturn `'${str.replace(/'/g, \"''\")}'`;\n\t}\n\n\tprivate buildWithCTE(queries: Subquery[] | undefined): SQL | undefined {\n\t\tif (!queries?.length) return undefined;\n\n\t\tconst withSqlChunks = [sql`with `];\n\t\tfor (const [i, w] of queries.entries()) {\n\t\t\twithSqlChunks.push(sql`${sql.identifier(w._.alias)} as (${w._.sql})`);\n\t\t\tif (i < queries.length - 1) {\n\t\t\t\twithSqlChunks.push(sql`, `);\n\t\t\t}\n\t\t}\n\t\twithSqlChunks.push(sql` `);\n\t\treturn sql.join(withSqlChunks);\n\t}\n\n\tbuildDeleteQuery({ table, where, returning, withList }: PgDeleteConfig): SQL {\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\treturn sql`${withSql}delete from ${table}${whereSql}${returningSql}`;\n\t}\n\n\tbuildUpdateSet(table: PgTable, set: UpdateSet): SQL {\n\t\tconst tableColumns = table[Table.Symbol.Columns];\n\n\t\tconst columnNames = Object.keys(tableColumns).filter((colName) =>\n\t\t\tset[colName] !== undefined || tableColumns[colName]?.onUpdateFn !== undefined\n\t\t);\n\n\t\tconst setSize = columnNames.length;\n\t\treturn sql.join(columnNames.flatMap((colName, i) => {\n\t\t\tconst col = tableColumns[colName]!;\n\n\t\t\tconst value = set[colName] ?? sql.param(col.onUpdateFn!(), col);\n\t\t\tconst res = sql`${sql.identifier(col.name)} = ${value}`;\n\n\t\t\tif (i < setSize - 1) {\n\t\t\t\treturn [res, sql.raw(', ')];\n\t\t\t}\n\t\t\treturn [res];\n\t\t}));\n\t}\n\n\tbuildUpdateQuery({ table, set, where, returning, withList }: PgUpdateConfig): SQL {\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst setSql = this.buildUpdateSet(table, set);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\treturn sql`${withSql}update ${table} set ${setSql}${whereSql}${returningSql}`;\n\t}\n\n\t/**\n\t * Builds selection SQL with provided fields/expressions\n\t *\n\t * Examples:\n\t *\n\t * `select <selection> from`\n\t *\n\t * `insert ... returning <selection>`\n\t *\n\t * If `isSingleTable` is true, then columns won't be prefixed with table name\n\t */\n\tprivate buildSelection(\n\t\tfields: SelectedFieldsOrdered,\n\t\t{ isSingleTable = false }: { isSingleTable?: boolean } = {},\n\t): SQL {\n\t\tconst columnsLen = fields.length;\n\n\t\tconst chunks = fields\n\t\t\t.flatMap(({ field }, i) => {\n\t\t\t\tconst chunk: SQLChunk[] = [];\n\n\t\t\t\tif (is(field, SQL.Aliased) && field.isSelectionField) {\n\t\t\t\t\tchunk.push(sql.identifier(field.fieldAlias));\n\t\t\t\t} else if (is(field, SQL.Aliased) || is(field, SQL)) {\n\t\t\t\t\tconst query = is(field, SQL.Aliased) ? field.sql : field;\n\n\t\t\t\t\tif (isSingleTable) {\n\t\t\t\t\t\tchunk.push(\n\t\t\t\t\t\t\tnew SQL(\n\t\t\t\t\t\t\t\tquery.queryChunks.map((c) => {\n\t\t\t\t\t\t\t\t\tif (is(c, PgColumn)) {\n\t\t\t\t\t\t\t\t\t\treturn sql.identifier(c.name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunk.push(query);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is(field, SQL.Aliased)) {\n\t\t\t\t\t\tchunk.push(sql` as ${sql.identifier(field.fieldAlias)}`);\n\t\t\t\t\t}\n\t\t\t\t} else if (is(field, Column)) {\n\t\t\t\t\tif (isSingleTable) {\n\t\t\t\t\t\tchunk.push(sql.identifier(field.name));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunk.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (i < columnsLen - 1) {\n\t\t\t\t\tchunk.push(sql`, `);\n\t\t\t\t}\n\n\t\t\t\treturn chunk;\n\t\t\t});\n\n\t\treturn sql.join(chunks);\n\t}\n\n\tbuildSelectQuery(\n\t\t{\n\t\t\twithList,\n\t\t\tfields,\n\t\t\tfieldsFlat,\n\t\t\twhere,\n\t\t\thaving,\n\t\t\ttable,\n\t\t\tjoins,\n\t\t\torderBy,\n\t\t\tgroupBy,\n\t\t\tlimit,\n\t\t\toffset,\n\t\t\tlockingClause,\n\t\t\tdistinct,\n\t\t\tsetOperators,\n\t\t}: PgSelectConfig,\n\t): SQL {\n\t\tconst fieldsList = fieldsFlat ?? orderSelectedFields<PgColumn>(fields);\n\t\tfor (const f of fieldsList) {\n\t\t\tif (\n\t\t\t\tis(f.field, Column)\n\t\t\t\t&& getTableName(f.field.table)\n\t\t\t\t\t!== (is(table, Subquery)\n\t\t\t\t\t\t? table._.alias\n\t\t\t\t\t\t: is(table, PgViewBase)\n\t\t\t\t\t\t? table[ViewBaseConfig].name\n\t\t\t\t\t\t: is(table, SQL)\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: getTableName(table))\n\t\t\t\t&& !((table) =>\n\t\t\t\t\tjoins?.some(({ alias }) =>\n\t\t\t\t\t\talias === (table[Table.Symbol.IsAlias] ? getTableName(table) : table[Table.Symbol.BaseName])\n\t\t\t\t\t))(f.field.table)\n\t\t\t) {\n\t\t\t\tconst tableName = getTableName(f.field.table);\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Your \"${\n\t\t\t\t\t\tf.path.join('->')\n\t\t\t\t\t}\" field references a column \"${tableName}\".\"${f.field.name}\", but the table \"${tableName}\" is not part of the query! Did you forget to join it?`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst isSingleTable = !joins || joins.length === 0;\n\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tlet distinctSql: SQL | undefined;\n\t\tif (distinct) {\n\t\t\tdistinctSql = distinct === true ? sql` distinct` : sql` distinct on (${sql.join(distinct.on, sql`, `)})`;\n\t\t}\n\n\t\tconst selection = this.buildSelection(fieldsList, { isSingleTable });\n\n\t\tconst tableSql = (() => {\n\t\t\tif (is(table, Table) && table[Table.Symbol.OriginalName] !== table[Table.Symbol.Name]) {\n\t\t\t\tlet fullName = sql`${sql.identifier(table[Table.Symbol.OriginalName])}`;\n\t\t\t\tif (table[Table.Symbol.Schema]) {\n\t\t\t\t\tfullName = sql`${sql.identifier(table[Table.Symbol.Schema]!)}.${fullName}`;\n\t\t\t\t}\n\t\t\t\treturn sql`${fullName} ${sql.identifier(table[Table.Symbol.Name])}`;\n\t\t\t}\n\n\t\t\treturn table;\n\t\t})();\n\n\t\tconst joinsArray: SQL[] = [];\n\n\t\tif (joins) {\n\t\t\tfor (const [index, joinMeta] of joins.entries()) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tjoinsArray.push(sql` `);\n\t\t\t\t}\n\t\t\t\tconst table = joinMeta.table;\n\t\t\t\tconst lateralSql = joinMeta.lateral ? sql` lateral` : undefined;\n\n\t\t\t\tif (is(table, PgTable)) {\n\t\t\t\t\tconst tableName = table[PgTable.Symbol.Name];\n\t\t\t\t\tconst tableSchema = table[PgTable.Symbol.Schema];\n\t\t\t\t\tconst origTableName = table[PgTable.Symbol.OriginalName];\n\t\t\t\t\tconst alias = tableName === origTableName ? undefined : joinMeta.alias;\n\t\t\t\t\tjoinsArray.push(\n\t\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${\n\t\t\t\t\t\t\ttableSchema ? sql`${sql.identifier(tableSchema)}.` : undefined\n\t\t\t\t\t\t}${sql.identifier(origTableName)}${alias && sql` ${sql.identifier(alias)}`} on ${joinMeta.on}`,\n\t\t\t\t\t);\n\t\t\t\t} else if (is(table, View)) {\n\t\t\t\t\tconst viewName = table[ViewBaseConfig].name;\n\t\t\t\t\tconst viewSchema = table[ViewBaseConfig].schema;\n\t\t\t\t\tconst origViewName = table[ViewBaseConfig].originalName;\n\t\t\t\t\tconst alias = viewName === origViewName ? undefined : joinMeta.alias;\n\t\t\t\t\tjoinsArray.push(\n\t\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${\n\t\t\t\t\t\t\tviewSchema ? sql`${sql.identifier(viewSchema)}.` : undefined\n\t\t\t\t\t\t}${sql.identifier(origViewName)}${alias && sql` ${sql.identifier(alias)}`} on ${joinMeta.on}`,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tjoinsArray.push(\n\t\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${table} on ${joinMeta.on}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (index < joins.length - 1) {\n\t\t\t\t\tjoinsArray.push(sql` `);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst joinsSql = sql.join(joinsArray);\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\tconst havingSql = having ? sql` having ${having}` : undefined;\n\n\t\tlet orderBySql;\n\t\tif (orderBy && orderBy.length > 0) {\n\t\t\torderBySql = sql` order by ${sql.join(orderBy, sql`, `)}`;\n\t\t}\n\n\t\tlet groupBySql;\n\t\tif (groupBy && groupBy.length > 0) {\n\t\t\tgroupBySql = sql` group by ${sql.join(groupBy, sql`, `)}`;\n\t\t}\n\n\t\tconst limitSql = typeof limit === 'object' || (typeof limit === 'number' && limit >= 0)\n\t\t\t? sql` limit ${limit}`\n\t\t\t: undefined;\n\n\t\tconst offsetSql = offset ? sql` offset ${offset}` : undefined;\n\n\t\tconst lockingClauseSql = sql.empty();\n\t\tif (lockingClause) {\n\t\t\tconst clauseSql = sql` for ${sql.raw(lockingClause.strength)}`;\n\t\t\tif (lockingClause.config.of) {\n\t\t\t\tclauseSql.append(\n\t\t\t\t\tsql` of ${\n\t\t\t\t\t\tsql.join(\n\t\t\t\t\t\t\tArray.isArray(lockingClause.config.of) ? lockingClause.config.of : [lockingClause.config.of],\n\t\t\t\t\t\t\tsql`, `,\n\t\t\t\t\t\t)\n\t\t\t\t\t}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (lockingClause.config.noWait) {\n\t\t\t\tclauseSql.append(sql` no wait`);\n\t\t\t} else if (lockingClause.config.skipLocked) {\n\t\t\t\tclauseSql.append(sql` skip locked`);\n\t\t\t}\n\t\t\tlockingClauseSql.append(clauseSql);\n\t\t}\n\t\tconst finalQuery =\n\t\t\tsql`${withSql}select${distinctSql} ${selection} from ${tableSql}${joinsSql}${whereSql}${groupBySql}${havingSql}${orderBySql}${limitSql}${offsetSql}${lockingClauseSql}`;\n\n\t\tif (setOperators.length > 0) {\n\t\t\treturn this.buildSetOperations(finalQuery, setOperators);\n\t\t}\n\n\t\treturn finalQuery;\n\t}\n\n\tbuildSetOperations(leftSelect: SQL, setOperators: PgSelectConfig['setOperators']): SQL {\n\t\tconst [setOperator, ...rest] = setOperators;\n\n\t\tif (!setOperator) {\n\t\t\tthrow new Error('Cannot pass undefined values to any set operator');\n\t\t}\n\n\t\tif (rest.length === 0) {\n\t\t\treturn this.buildSetOperationQuery({ leftSelect, setOperator });\n\t\t}\n\n\t\t// Some recursive magic here\n\t\treturn this.buildSetOperations(\n\t\t\tthis.buildSetOperationQuery({ leftSelect, setOperator }),\n\t\t\trest,\n\t\t);\n\t}\n\n\tbuildSetOperationQuery({\n\t\tleftSelect,\n\t\tsetOperator: { type, isAll, rightSelect, limit, orderBy, offset },\n\t}: { leftSelect: SQL; setOperator: PgSelectConfig['setOperators'][number] }): SQL {\n\t\tconst leftChunk = sql`(${leftSelect.getSQL()}) `;\n\t\tconst rightChunk = sql`(${rightSelect.getSQL()})`;\n\n\t\tlet orderBySql;\n\t\tif (orderBy && orderBy.length > 0) {\n\t\t\tconst orderByValues: (SQL<unknown> | Name)[] = [];\n\n\t\t\t// The next bit is necessary because the sql operator replaces ${table.column} with `table`.`column`\n\t\t\t// which is invalid Sql syntax, Table from one of the SELECTs cannot be used in global ORDER clause\n\t\t\tfor (const singleOrderBy of orderBy) {\n\t\t\t\tif (is(singleOrderBy, PgColumn)) {\n\t\t\t\t\torderByValues.push(sql.identifier(singleOrderBy.name));\n\t\t\t\t} else if (is(singleOrderBy, SQL)) {\n\t\t\t\t\tfor (let i = 0; i < singleOrderBy.queryChunks.length; i++) {\n\t\t\t\t\t\tconst chunk = singleOrderBy.queryChunks[i];\n\n\t\t\t\t\t\tif (is(chunk, PgColumn)) {\n\t\t\t\t\t\t\tsingleOrderBy.queryChunks[i] = sql.identifier(chunk.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\torderByValues.push(sql`${singleOrderBy}`);\n\t\t\t\t} else {\n\t\t\t\t\torderByValues.push(sql`${singleOrderBy}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\torderBySql = sql` order by ${sql.join(orderByValues, sql`, `)} `;\n\t\t}\n\n\t\tconst limitSql = typeof limit === 'object' || (typeof limit === 'number' && limit >= 0)\n\t\t\t? sql` limit ${limit}`\n\t\t\t: undefined;\n\n\t\tconst operatorChunk = sql.raw(`${type} ${isAll ? 'all ' : ''}`);\n\n\t\tconst offsetSql = offset ? sql` offset ${offset}` : undefined;\n\n\t\treturn sql`${leftChunk}${operatorChunk}${rightChunk}${orderBySql}${limitSql}${offsetSql}`;\n\t}\n\n\tbuildInsertQuery({ table, values, onConflict, returning, withList }: PgInsertConfig): SQL {\n\t\tconst valuesSqlList: ((SQLChunk | SQL)[] | SQL)[] = [];\n\t\tconst columns: Record<string, PgColumn> = table[Table.Symbol.Columns];\n\n\t\tconst colEntries: [string, PgColumn][] = Object.entries(columns).filter(([_, col]) => !col.shouldDisableInsert());\n\n\t\tconst insertOrder = colEntries.map(([, column]) => sql.identifier(column.name));\n\n\t\tfor (const [valueIndex, value] of values.entries()) {\n\t\t\tconst valueList: (SQLChunk | SQL)[] = [];\n\t\t\tfor (const [fieldName, col] of colEntries) {\n\t\t\t\tconst colValue = value[fieldName];\n\t\t\t\tif (colValue === undefined || (is(colValue, Param) && colValue.value === undefined)) {\n\t\t\t\t\t// eslint-disable-next-line unicorn/no-negated-condition\n\t\t\t\t\tif (col.defaultFn !== undefined) {\n\t\t\t\t\t\tconst defaultFnResult = col.defaultFn();\n\t\t\t\t\t\tconst defaultValue = is(defaultFnResult, SQL) ? defaultFnResult : sql.param(defaultFnResult, col);\n\t\t\t\t\t\tvalueList.push(defaultValue);\n\t\t\t\t\t\t// eslint-disable-next-line unicorn/no-negated-condition\n\t\t\t\t\t} else if (!col.default && col.onUpdateFn !== undefined) {\n\t\t\t\t\t\tconst onUpdateFnResult = col.onUpdateFn();\n\t\t\t\t\t\tconst newValue = is(onUpdateFnResult, SQL) ? onUpdateFnResult : sql.param(onUpdateFnResult, col);\n\t\t\t\t\t\tvalueList.push(newValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalueList.push(sql`default`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalueList.push(colValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvaluesSqlList.push(valueList);\n\t\t\tif (valueIndex < values.length - 1) {\n\t\t\t\tvaluesSqlList.push(sql`, `);\n\t\t\t}\n\t\t}\n\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst valuesSql = sql.join(valuesSqlList);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst onConflictSql = onConflict ? sql` on conflict ${onConflict}` : undefined;\n\n\t\treturn sql`${withSql}insert into ${table} ${insertOrder} values ${valuesSql}${onConflictSql}${returningSql}`;\n\t}\n\n\tbuildRefreshMaterializedViewQuery(\n\t\t{ view, concurrently, withNoData }: { view: PgMaterializedView; concurrently?: boolean; withNoData?: boolean },\n\t): SQL {\n\t\tconst concurrentlySql = concurrently ? sql` concurrently` : undefined;\n\t\tconst withNoDataSql = withNoData ? sql` with no data` : undefined;\n\n\t\treturn sql`refresh materialized view${concurrentlySql} ${view}${withNoDataSql}`;\n\t}\n\n\tprepareTyping(encoder: DriverValueEncoder<unknown, unknown>): QueryTypingsValue {\n\t\tif (is(encoder, PgJsonb) || is(encoder, PgJson)) {\n\t\t\treturn 'json';\n\t\t} else if (is(encoder, PgNumeric)) {\n\t\t\treturn 'decimal';\n\t\t} else if (is(encoder, PgTime)) {\n\t\t\treturn 'time';\n\t\t} else if (is(encoder, PgTimestamp) || is(encoder, PgTimestampString)) {\n\t\t\treturn 'timestamp';\n\t\t} else if (is(encoder, PgDate) || is(encoder, PgDateString)) {\n\t\t\treturn 'date';\n\t\t} else if (is(encoder, PgUUID)) {\n\t\t\treturn 'uuid';\n\t\t} else {\n\t\t\treturn 'none';\n\t\t}\n\t}\n\n\tsqlToQuery(sql: SQL, invokeSource?: 'indexes' | undefined): QueryWithTypings {\n\t\treturn sql.toQuery({\n\t\t\tescapeName: this.escapeName,\n\t\t\tescapeParam: this.escapeParam,\n\t\t\tescapeString: this.escapeString,\n\t\t\tprepareTyping: this.prepareTyping,\n\t\t\tinvokeSource,\n\t\t});\n\t}\n\n\t// buildRelationalQueryWithPK({\n\t// \tfullSchema,\n\t// \tschema,\n\t// \ttableNamesMap,\n\t// \ttable,\n\t// \ttableConfig,\n\t// \tqueryConfig: config,\n\t// \ttableAlias,\n\t// \tisRoot = false,\n\t// \tjoinOn,\n\t// }: {\n\t// \tfullSchema: Record<string, unknown>;\n\t// \tschema: TablesRelationalConfig;\n\t// \ttableNamesMap: Record<string, string>;\n\t// \ttable: PgTable;\n\t// \ttableConfig: TableRelationalConfig;\n\t// \tqueryConfig: true | DBQueryConfig<'many', true>;\n\t// \ttableAlias: string;\n\t// \tisRoot?: boolean;\n\t// \tjoinOn?: SQL;\n\t// }): BuildRelationalQueryResult<PgTable, PgColumn> {\n\t// \t// For { \"<relation>\": true }, return a table with selection of all columns\n\t// \tif (config === true) {\n\t// \t\tconst selectionEntries = Object.entries(tableConfig.columns);\n\t// \t\tconst selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = selectionEntries.map((\n\t// \t\t\t[key, value],\n\t// \t\t) => ({\n\t// \t\t\tdbKey: value.name,\n\t// \t\t\ttsKey: key,\n\t// \t\t\tfield: value as PgColumn,\n\t// \t\t\trelationTableTsKey: undefined,\n\t// \t\t\tisJson: false,\n\t// \t\t\tselection: [],\n\t// \t\t}));\n\n\t// \t\treturn {\n\t// \t\t\ttableTsKey: tableConfig.tsName,\n\t// \t\t\tsql: table,\n\t// \t\t\tselection,\n\t// \t\t};\n\t// \t}\n\n\t// \t// let selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = [];\n\t// \t// let selectionForBuild = selection;\n\n\t// \tconst aliasedColumns = Object.fromEntries(\n\t// \t\tObject.entries(tableConfig.columns).map(([key, value]) => [key, aliasedTableColumn(value, tableAlias)]),\n\t// \t);\n\n\t// \tconst aliasedRelations = Object.fromEntries(\n\t// \t\tObject.entries(tableConfig.relations).map(([key, value]) => [key, aliasedRelation(value, tableAlias)]),\n\t// \t);\n\n\t// \tconst aliasedFields = Object.assign({}, aliasedColumns, aliasedRelations);\n\n\t// \tlet where, hasUserDefinedWhere;\n\t// \tif (config.where) {\n\t// \t\tconst whereSql = typeof config.where === 'function' ? config.where(aliasedFields, operators) : config.where;\n\t// \t\twhere = whereSql && mapColumnsInSQLToAlias(whereSql, tableAlias);\n\t// \t\thasUserDefinedWhere = !!where;\n\t// \t}\n\t// \twhere = and(joinOn, where);\n\n\t// \t// const fieldsSelection: { tsKey: string; value: PgColumn | SQL.Aliased; isExtra?: boolean }[] = [];\n\t// \tlet joins: Join[] = [];\n\t// \tlet selectedColumns: string[] = [];\n\n\t// \t// Figure out which columns to select\n\t// \tif (config.columns) {\n\t// \t\tlet isIncludeMode = false;\n\n\t// \t\tfor (const [field, value] of Object.entries(config.columns)) {\n\t// \t\t\tif (value === undefined) {\n\t// \t\t\t\tcontinue;\n\t// \t\t\t}\n\n\t// \t\t\tif (field in tableConfig.columns) {\n\t// \t\t\t\tif (!isIncludeMode && value === true) {\n\t// \t\t\t\t\tisIncludeMode = true;\n\t// \t\t\t\t}\n\t// \t\t\t\tselectedColumns.push(field);\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t\tif (selectedColumns.length > 0) {\n\t// \t\t\tselectedColumns = isIncludeMode\n\t// \t\t\t\t? selectedColumns.filter((c) => config.columns?.[c] === true)\n\t// \t\t\t\t: Object.keys(tableConfig.columns).filter((key) => !selectedColumns.includes(key));\n\t// \t\t}\n\t// \t} else {\n\t// \t\t// Select all columns if selection is not specified\n\t// \t\tselectedColumns = Object.keys(tableConfig.columns);\n\t// \t}\n\n\t// \t// for (const field of selectedColumns) {\n\t// \t// \tconst column = tableConfig.columns[field]! as PgColumn;\n\t// \t// \tfieldsSelection.push({ tsKey: field, value: column });\n\t// \t// }\n\n\t// \tlet initiallySelectedRelations: {\n\t// \t\ttsKey: string;\n\t// \t\tqueryConfig: true | DBQueryConfig<'many', false>;\n\t// \t\trelation: Relation;\n\t// \t}[] = [];\n\n\t// \t// let selectedRelations: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = [];\n\n\t// \t// Figure out which relations to select\n\t// \tif (config.with) {\n\t// \t\tinitiallySelectedRelations = Object.entries(config.with)\n\t// \t\t\t.filter((entry): entry is [typeof entry[0], NonNullable<typeof entry[1]>] => !!entry[1])\n\t// \t\t\t.map(([tsKey, queryConfig]) => ({ tsKey, queryConfig, relation: tableConfig.relations[tsKey]! }));\n\t// \t}\n\n\t// \tconst manyRelations = initiallySelectedRelations.filter((r) =>\n\t// \t\tis(r.relation, Many)\n\t// \t\t&& (schema[tableNamesMap[r.relation.referencedTable[Table.Symbol.Name]]!]?.primaryKey.length ?? 0) > 0\n\t// \t);\n\t// \t// If this is the last Many relation (or there are no Many relations), we are on the innermost subquery level\n\t// \tconst isInnermostQuery = manyRelations.length < 2;\n\n\t// \tconst selectedExtras: {\n\t// \t\ttsKey: string;\n\t// \t\tvalue: SQL.Aliased;\n\t// \t}[] = [];\n\n\t// \t// Figure out which extras to select\n\t// \tif (isInnermostQuery && config.extras) {\n\t// \t\tconst extras = typeof config.extras === 'function'\n\t// \t\t\t? config.extras(aliasedFields, { sql })\n\t// \t\t\t: config.extras;\n\t// \t\tfor (const [tsKey, value] of Object.entries(extras)) {\n\t// \t\t\tselectedExtras.push({\n\t// \t\t\t\ttsKey,\n\t// \t\t\t\tvalue: mapColumnsInAliasedSQLToAlias(value, tableAlias),\n\t// \t\t\t});\n\t// \t\t}\n\t// \t}\n\n\t// \t// Transform `fieldsSelection` into `selection`\n\t// \t// `fieldsSelection` shouldn't be used after this point\n\t// \t// for (const { tsKey, value, isExtra } of fieldsSelection) {\n\t// \t// \tselection.push({\n\t// \t// \t\tdbKey: is(value, SQL.Aliased) ? value.fieldAlias : tableConfig.columns[tsKey]!.name,\n\t// \t// \t\ttsKey,\n\t// \t// \t\tfield: is(value, Column) ? aliasedTableColumn(value, tableAlias) : value,\n\t// \t// \t\trelationTableTsKey: undefined,\n\t// \t// \t\tisJson: false,\n\t// \t// \t\tisExtra,\n\t// \t// \t\tselection: [],\n\t// \t// \t});\n\t// \t// }\n\n\t// \tlet orderByOrig = typeof config.orderBy === 'function'\n\t// \t\t? config.orderBy(aliasedFields, orderByOperators)\n\t// \t\t: config.orderBy ?? [];\n\t// \tif (!Array.isArray(orderByOrig)) {\n\t// \t\torderByOrig = [orderByOrig];\n\t// \t}\n\t// \tconst orderBy = orderByOrig.map((orderByValue) => {\n\t// \t\tif (is(orderByValue, Column)) {\n\t// \t\t\treturn aliasedTableColumn(orderByValue, tableAlias) as PgColumn;\n\t// \t\t}\n\t// \t\treturn mapColumnsInSQLToAlias(orderByValue, tableAlias);\n\t// \t});\n\n\t// \tconst limit = isInnermostQuery ? config.limit : undefined;\n\t// \tconst offset = isInnermostQuery ? config.offset : undefined;\n\n\t// \t// For non-root queries without additional config except columns, return a table with selection\n\t// \tif (\n\t// \t\t!isRoot\n\t// \t\t&& initiallySelectedRelations.length === 0\n\t// \t\t&& selectedExtras.length === 0\n\t// \t\t&& !where\n\t// \t\t&& orderBy.length === 0\n\t// \t\t&& limit === undefined\n\t// \t\t&& offset === undefined\n\t// \t) {\n\t// \t\treturn {\n\t// \t\t\ttableTsKey: tableConfig.tsName,\n\t// \t\t\tsql: table,\n\t// \t\t\tselection: selectedColumns.map((key) => ({\n\t// \t\t\t\tdbKey: tableConfig.columns[key]!.name,\n\t// \t\t\t\ttsKey: key,\n\t// \t\t\t\tfield: tableConfig.columns[key] as PgColumn,\n\t// \t\t\t\trelationTableTsKey: undefined,\n\t// \t\t\t\tisJson: false,\n\t// \t\t\t\tselection: [],\n\t// \t\t\t})),\n\t// \t\t};\n\t// \t}\n\n\t// \tconst selectedRelationsWithoutPK:\n\n\t// \t// Process all relations without primary keys, because they need to be joined differently and will all be on the same query level\n\t// \tfor (\n\t// \t\tconst {\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\trelation,\n\t// \t\t} of initiallySelectedRelations\n\t// \t) {\n\t// \t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t// \t\tconst relationTableName = relation.referencedTable[Table.Symbol.Name];\n\t// \t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t// \t\tconst relationTable = schema[relationTableTsName]!;\n\n\t// \t\tif (relationTable.primaryKey.length > 0) {\n\t// \t\t\tcontinue;\n\t// \t\t}\n\n\t// \t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t// \t\tconst joinOn = and(\n\t// \t\t\t...normalizedRelation.fields.map((field, i) =>\n\t// \t\t\t\teq(\n\t// \t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t// \t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t// \t\t\t\t)\n\t// \t\t\t),\n\t// \t\t);\n\t// \t\tconst builtRelation = this.buildRelationalQueryWithoutPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t// \t\t\ttableConfig: schema[relationTableTsName]!,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\ttableAlias: relationTableAlias,\n\t// \t\t\tjoinOn,\n\t// \t\t\tnestedQueryRelation: relation,\n\t// \t\t});\n\t// \t\tconst field = sql`${sql.identifier(relationTableAlias)}.${sql.identifier('data')}`.as(selectedRelationTsKey);\n\t// \t\tjoins.push({\n\t// \t\t\ton: sql`true`,\n\t// \t\t\ttable: new Subquery(builtRelation.sql as SQL, {}, relationTableAlias),\n\t// \t\t\talias: relationTableAlias,\n\t// \t\t\tjoinType: 'left',\n\t// \t\t\tlateral: true,\n\t// \t\t});\n\t// \t\tselectedRelations.push({\n\t// \t\t\tdbKey: selectedRelationTsKey,\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tfield,\n\t// \t\t\trelationTableTsKey: relationTableTsName,\n\t// \t\t\tisJson: true,\n\t// \t\t\tselection: builtRelation.selection,\n\t// \t\t});\n\t// \t}\n\n\t// \tconst oneRelations = initiallySelectedRelations.filter((r): r is typeof r & { relation: One } =>\n\t// \t\tis(r.relation, One)\n\t// \t);\n\n\t// \t// Process all One relations with PKs, because they can all be joined on the same level\n\t// \tfor (\n\t// \t\tconst {\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\trelation,\n\t// \t\t} of oneRelations\n\t// \t) {\n\t// \t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t// \t\tconst relationTableName = relation.referencedTable[Table.Symbol.Name];\n\t// \t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t// \t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t// \t\tconst relationTable = schema[relationTableTsName]!;\n\n\t// \t\tif (relationTable.primaryKey.length === 0) {\n\t// \t\t\tcontinue;\n\t// \t\t}\n\n\t// \t\tconst joinOn = and(\n\t// \t\t\t...normalizedRelation.fields.map((field, i) =>\n\t// \t\t\t\teq(\n\t// \t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t// \t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t// \t\t\t\t)\n\t// \t\t\t),\n\t// \t\t);\n\t// \t\tconst builtRelation = this.buildRelationalQueryWithPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t// \t\t\ttableConfig: schema[relationTableTsName]!,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\ttableAlias: relationTableAlias,\n\t// \t\t\tjoinOn,\n\t// \t\t});\n\t// \t\tconst field = sql`case when ${sql.identifier(relationTableAlias)} is null then null else json_build_array(${\n\t// \t\t\tsql.join(\n\t// \t\t\t\tbuiltRelation.selection.map(({ field }) =>\n\t// \t\t\t\t\tis(field, SQL.Aliased)\n\t// \t\t\t\t\t\t? sql`${sql.identifier(relationTableAlias)}.${sql.identifier(field.fieldAlias)}`\n\t// \t\t\t\t\t\t: is(field, Column)\n\t// \t\t\t\t\t\t? aliasedTableColumn(field, relationTableAlias)\n\t// \t\t\t\t\t\t: field\n\t// \t\t\t\t),\n\t// \t\t\t\tsql`, `,\n\t// \t\t\t)\n\t// \t\t}) end`.as(selectedRelationTsKey);\n\t// \t\tconst isLateralJoin = is(builtRelation.sql, SQL);\n\t// \t\tjoins.push({\n\t// \t\t\ton: isLateralJoin ? sql`true` : joinOn,\n\t// \t\t\ttable: is(builtRelation.sql, SQL)\n\t// \t\t\t\t? new Subquery(builtRelation.sql, {}, relationTableAlias)\n\t// \t\t\t\t: aliasedTable(builtRelation.sql, relationTableAlias),\n\t// \t\t\talias: relationTableAlias,\n\t// \t\t\tjoinType: 'left',\n\t// \t\t\tlateral: is(builtRelation.sql, SQL),\n\t// \t\t});\n\t// \t\tselectedRelations.push({\n\t// \t\t\tdbKey: selectedRelationTsKey,\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tfield,\n\t// \t\t\trelationTableTsKey: relationTableTsName,\n\t// \t\t\tisJson: true,\n\t// \t\t\tselection: builtRelation.selection,\n\t// \t\t});\n\t// \t}\n\n\t// \tlet distinct: PgSelectConfig['distinct'];\n\t// \tlet tableFrom: PgTable | Subquery = table;\n\n\t// \t// Process first Many relation - each one requires a nested subquery\n\t// \tconst manyRelation = manyRelations[0];\n\t// \tif (manyRelation) {\n\t// \t\tconst {\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tqueryConfig: selectedRelationQueryConfig,\n\t// \t\t\trelation,\n\t// \t\t} = manyRelation;\n\n\t// \t\tdistinct = {\n\t// \t\t\ton: tableConfig.primaryKey.map((c) => aliasedTableColumn(c as PgColumn, tableAlias)),\n\t// \t\t};\n\n\t// \t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t// \t\tconst relationTableName = relation.referencedTable[Table.Symbol.Name];\n\t// \t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t// \t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t// \t\tconst joinOn = and(\n\t// \t\t\t...normalizedRelation.fields.map((field, i) =>\n\t// \t\t\t\teq(\n\t// \t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t// \t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t// \t\t\t\t)\n\t// \t\t\t),\n\t// \t\t);\n\n\t// \t\tconst builtRelationJoin = this.buildRelationalQueryWithPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t// \t\t\ttableConfig: schema[relationTableTsName]!,\n\t// \t\t\tqueryConfig: selectedRelationQueryConfig,\n\t// \t\t\ttableAlias: relationTableAlias,\n\t// \t\t\tjoinOn,\n\t// \t\t});\n\n\t// \t\tconst builtRelationSelectionField = sql`case when ${\n\t// \t\t\tsql.identifier(relationTableAlias)\n\t// \t\t} is null then '[]' else json_agg(json_build_array(${\n\t// \t\t\tsql.join(\n\t// \t\t\t\tbuiltRelationJoin.selection.map(({ field }) =>\n\t// \t\t\t\t\tis(field, SQL.Aliased)\n\t// \t\t\t\t\t\t? sql`${sql.identifier(relationTableAlias)}.${sql.identifier(field.fieldAlias)}`\n\t// \t\t\t\t\t\t: is(field, Column)\n\t// \t\t\t\t\t\t? aliasedTableColumn(field, relationTableAlias)\n\t// \t\t\t\t\t\t: field\n\t// \t\t\t\t),\n\t// \t\t\t\tsql`, `,\n\t// \t\t\t)\n\t// \t\t})) over (partition by ${sql.join(distinct.on, sql`, `)}) end`.as(selectedRelationTsKey);\n\t// \t\tconst isLateralJoin = is(builtRelationJoin.sql, SQL);\n\t// \t\tjoins.push({\n\t// \t\t\ton: isLateralJoin ? sql`true` : joinOn,\n\t// \t\t\ttable: isLateralJoin\n\t// \t\t\t\t? new Subquery(builtRelationJoin.sql as SQL, {}, relationTableAlias)\n\t// \t\t\t\t: aliasedTable(builtRelationJoin.sql as PgTable, relationTableAlias),\n\t// \t\t\talias: relationTableAlias,\n\t// \t\t\tjoinType: 'left',\n\t// \t\t\tlateral: isLateralJoin,\n\t// \t\t});\n\n\t// \t\t// Build the \"from\" subquery with the remaining Many relations\n\t// \t\tconst builtTableFrom = this.buildRelationalQueryWithPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable,\n\t// \t\t\ttableConfig,\n\t// \t\t\tqueryConfig: {\n\t// \t\t\t\t...config,\n\t// \t\t\t\twhere: undefined,\n\t// \t\t\t\torderBy: undefined,\n\t// \t\t\t\tlimit: undefined,\n\t// \t\t\t\toffset: undefined,\n\t// \t\t\t\twith: manyRelations.slice(1).reduce<NonNullable<typeof config['with']>>(\n\t// \t\t\t\t\t(result, { tsKey, queryConfig: configValue }) => {\n\t// \t\t\t\t\t\tresult[tsKey] = configValue;\n\t// \t\t\t\t\t\treturn result;\n\t// \t\t\t\t\t},\n\t// \t\t\t\t\t{},\n\t// \t\t\t\t),\n\t// \t\t\t},\n\t// \t\t\ttableAlias,\n\t// \t\t});\n\n\t// \t\tselectedRelations.push({\n\t// \t\t\tdbKey: selectedRelationTsKey,\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tfield: builtRelationSelectionField,\n\t// \t\t\trelationTableTsKey: relationTableTsName,\n\t// \t\t\tisJson: true,\n\t// \t\t\tselection: builtRelationJoin.selection,\n\t// \t\t});\n\n\t// \t\t// selection = builtTableFrom.selection.map((item) =>\n\t// \t\t// \tis(item.field, SQL.Aliased)\n\t// \t\t// \t\t? { ...item, field: sql`${sql.identifier(tableAlias)}.${sql.identifier(item.field.fieldAlias)}` }\n\t// \t\t// \t\t: item\n\t// \t\t// );\n\t// \t\t// selectionForBuild = [{\n\t// \t\t// \tdbKey: '*',\n\t// \t\t// \ttsKey: '*',\n\t// \t\t// \tfield: sql`${sql.identifier(tableAlias)}.*`,\n\t// \t\t// \tselection: [],\n\t// \t\t// \tisJson: false,\n\t// \t\t// \trelationTableTsKey: undefined,\n\t// \t\t// }];\n\t// \t\t// const newSelectionItem: (typeof selection)[number] = {\n\t// \t\t// \tdbKey: selectedRelationTsKey,\n\t// \t\t// \ttsKey: selectedRelationTsKey,\n\t// \t\t// \tfield,\n\t// \t\t// \trelationTableTsKey: relationTableTsName,\n\t// \t\t// \tisJson: true,\n\t// \t\t// \tselection: builtRelationJoin.selection,\n\t// \t\t// };\n\t// \t\t// selection.push(newSelectionItem);\n\t// \t\t// selectionForBuild.push(newSelectionItem);\n\n\t// \t\ttableFrom = is(builtTableFrom.sql, PgTable)\n\t// \t\t\t? builtTableFrom.sql\n\t// \t\t\t: new Subquery(builtTableFrom.sql, {}, tableAlias);\n\t// \t}\n\n\t// \tif (selectedColumns.length === 0 && selectedRelations.length === 0 && selectedExtras.length === 0) {\n\t// \t\tthrow new DrizzleError(`No fields selected for table \"${tableConfig.tsName}\" (\"${tableAlias}\")`);\n\t// \t}\n\n\t// \tlet selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'];\n\n\t// \tfunction prepareSelectedColumns() {\n\t// \t\treturn selectedColumns.map((key) => ({\n\t// \t\t\tdbKey: tableConfig.columns[key]!.name,\n\t// \t\t\ttsKey: key,\n\t// \t\t\tfield: tableConfig.columns[key] as PgColumn,\n\t// \t\t\trelationTableTsKey: undefined,\n\t// \t\t\tisJson: false,\n\t// \t\t\tselection: [],\n\t// \t\t}));\n\t// \t}\n\n\t// \tfunction prepareSelectedExtras() {\n\t// \t\treturn selectedExtras.map((item) => ({\n\t// \t\t\tdbKey: item.value.fieldAlias,\n\t// \t\t\ttsKey: item.tsKey,\n\t// \t\t\tfield: item.value,\n\t// \t\t\trelationTableTsKey: undefined,\n\t// \t\t\tisJson: false,\n\t// \t\t\tselection: [],\n\t// \t\t}));\n\t// \t}\n\n\t// \tif (isRoot) {\n\t// \t\tselection = [\n\t// \t\t\t...prepareSelectedColumns(),\n\t// \t\t\t...prepareSelectedExtras(),\n\t// \t\t];\n\t// \t}\n\n\t// \tif (hasUserDefinedWhere || orderBy.length > 0) {\n\t// \t\ttableFrom = new Subquery(\n\t// \t\t\tthis.buildSelectQuery({\n\t// \t\t\t\ttable: is(tableFrom, PgTable) ? aliasedTable(tableFrom, tableAlias) : tableFrom,\n\t// \t\t\t\tfields: {},\n\t// \t\t\t\tfieldsFlat: selectionForBuild.map(({ field }) => ({\n\t// \t\t\t\t\tpath: [],\n\t// \t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t// \t\t\t\t})),\n\t// \t\t\t\tjoins,\n\t// \t\t\t\tdistinct,\n\t// \t\t\t}),\n\t// \t\t\t{},\n\t// \t\t\ttableAlias,\n\t// \t\t);\n\t// \t\tselectionForBuild = selection.map((item) =>\n\t// \t\t\tis(item.field, SQL.Aliased)\n\t// \t\t\t\t? { ...item, field: sql`${sql.identifier(tableAlias)}.${sql.identifier(item.field.fieldAlias)}` }\n\t// \t\t\t\t: item\n\t// \t\t);\n\t// \t\tjoins = [];\n\t// \t\tdistinct = undefined;\n\t// \t}\n\n\t// \tconst result = this.buildSelectQuery({\n\t// \t\ttable: is(tableFrom, PgTable) ? aliasedTable(tableFrom, tableAlias) : tableFrom,\n\t// \t\tfields: {},\n\t// \t\tfieldsFlat: selectionForBuild.map(({ field }) => ({\n\t// \t\t\tpath: [],\n\t// \t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t// \t\t})),\n\t// \t\twhere,\n\t// \t\tlimit,\n\t// \t\toffset,\n\t// \t\tjoins,\n\t// \t\torderBy,\n\t// \t\tdistinct,\n\t// \t});\n\n\t// \treturn {\n\t// \t\ttableTsKey: tableConfig.tsName,\n\t// \t\tsql: result,\n\t// \t\tselection,\n\t// \t};\n\t// }\n\n\tbuildRelationalQueryWithoutPK({\n\t\tfullSchema,\n\t\tschema,\n\t\ttableNamesMap,\n\t\ttable,\n\t\ttableConfig,\n\t\tqueryConfig: config,\n\t\ttableAlias,\n\t\tnestedQueryRelation,\n\t\tjoinOn,\n\t}: {\n\t\tfullSchema: Record<string, unknown>;\n\t\tschema: TablesRelationalConfig;\n\t\ttableNamesMap: Record<string, string>;\n\t\ttable: PgTable;\n\t\ttableConfig: TableRelationalConfig;\n\t\tqueryConfig: true | DBQueryConfig<'many', true>;\n\t\ttableAlias: string;\n\t\tnestedQueryRelation?: Relation;\n\t\tjoinOn?: SQL;\n\t}): BuildRelationalQueryResult<PgTable, PgColumn> {\n\t\tlet selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = [];\n\t\tlet limit, offset, orderBy: NonNullable<PgSelectConfig['orderBy']> = [], where;\n\t\tconst joins: PgSelectJoinConfig[] = [];\n\n\t\tif (config === true) {\n\t\t\tconst selectionEntries = Object.entries(tableConfig.columns);\n\t\t\tselection = selectionEntries.map((\n\t\t\t\t[key, value],\n\t\t\t) => ({\n\t\t\t\tdbKey: value.name,\n\t\t\t\ttsKey: key,\n\t\t\t\tfield: aliasedTableColumn(value as PgColumn, tableAlias),\n\t\t\t\trelationTableTsKey: undefined,\n\t\t\t\tisJson: false,\n\t\t\t\tselection: [],\n\t\t\t}));\n\t\t} else {\n\t\t\tconst aliasedColumns = Object.fromEntries(\n\t\t\t\tObject.entries(tableConfig.columns).map(([key, value]) => [key, aliasedTableColumn(value, tableAlias)]),\n\t\t\t);\n\n\t\t\tif (config.where) {\n\t\t\t\tconst whereSql = typeof config.where === 'function'\n\t\t\t\t\t? config.where(aliasedColumns, getOperators())\n\t\t\t\t\t: config.where;\n\t\t\t\twhere = whereSql && mapColumnsInSQLToAlias(whereSql, tableAlias);\n\t\t\t}\n\n\t\t\tconst fieldsSelection: { tsKey: string; value: PgColumn | SQL.Aliased }[] = [];\n\t\t\tlet selectedColumns: string[] = [];\n\n\t\t\t// Figure out which columns to select\n\t\t\tif (config.columns) {\n\t\t\t\tlet isIncludeMode = false;\n\n\t\t\t\tfor (const [field, value] of Object.entries(config.columns)) {\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field in tableConfig.columns) {\n\t\t\t\t\t\tif (!isIncludeMode && value === true) {\n\t\t\t\t\t\t\tisIncludeMode = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectedColumns.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (selectedColumns.length > 0) {\n\t\t\t\t\tselectedColumns = isIncludeMode\n\t\t\t\t\t\t? selectedColumns.filter((c) => config.columns?.[c] === true)\n\t\t\t\t\t\t: Object.keys(tableConfig.columns).filter((key) => !selectedColumns.includes(key));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Select all columns if selection is not specified\n\t\t\t\tselectedColumns = Object.keys(tableConfig.columns);\n\t\t\t}\n\n\t\t\tfor (const field of selectedColumns) {\n\t\t\t\tconst column = tableConfig.columns[field]! as PgColumn;\n\t\t\t\tfieldsSelection.push({ tsKey: field, value: column });\n\t\t\t}\n\n\t\t\tlet selectedRelations: {\n\t\t\t\ttsKey: string;\n\t\t\t\tqueryConfig: true | DBQueryConfig<'many', false>;\n\t\t\t\trelation: Relation;\n\t\t\t}[] = [];\n\n\t\t\t// Figure out which relations to select\n\t\t\tif (config.with) {\n\t\t\t\tselectedRelations = Object.entries(config.with)\n\t\t\t\t\t.filter((entry): entry is [typeof entry[0], NonNullable<typeof entry[1]>] => !!entry[1])\n\t\t\t\t\t.map(([tsKey, queryConfig]) => ({ tsKey, queryConfig, relation: tableConfig.relations[tsKey]! }));\n\t\t\t}\n\n\t\t\tlet extras;\n\n\t\t\t// Figure out which extras to select\n\t\t\tif (config.extras) {\n\t\t\t\textras = typeof config.extras === 'function'\n\t\t\t\t\t? config.extras(aliasedColumns, { sql })\n\t\t\t\t\t: config.extras;\n\t\t\t\tfor (const [tsKey, value] of Object.entries(extras)) {\n\t\t\t\t\tfieldsSelection.push({\n\t\t\t\t\t\ttsKey,\n\t\t\t\t\t\tvalue: mapColumnsInAliasedSQLToAlias(value, tableAlias),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Transform `fieldsSelection` into `selection`\n\t\t\t// `fieldsSelection` shouldn't be used after this point\n\t\t\tfor (const { tsKey, value } of fieldsSelection) {\n\t\t\t\tselection.push({\n\t\t\t\t\tdbKey: is(value, SQL.Aliased) ? value.fieldAlias : tableConfig.columns[tsKey]!.name,\n\t\t\t\t\ttsKey,\n\t\t\t\t\tfield: is(value, Column) ? aliasedTableColumn(value, tableAlias) : value,\n\t\t\t\t\trelationTableTsKey: undefined,\n\t\t\t\t\tisJson: false,\n\t\t\t\t\tselection: [],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet orderByOrig = typeof config.orderBy === 'function'\n\t\t\t\t? config.orderBy(aliasedColumns, getOrderByOperators())\n\t\t\t\t: config.orderBy ?? [];\n\t\t\tif (!Array.isArray(orderByOrig)) {\n\t\t\t\torderByOrig = [orderByOrig];\n\t\t\t}\n\t\t\torderBy = orderByOrig.map((orderByValue) => {\n\t\t\t\tif (is(orderByValue, Column)) {\n\t\t\t\t\treturn aliasedTableColumn(orderByValue, tableAlias) as PgColumn;\n\t\t\t\t}\n\t\t\t\treturn mapColumnsInSQLToAlias(orderByValue, tableAlias);\n\t\t\t});\n\n\t\t\tlimit = config.limit;\n\t\t\toffset = config.offset;\n\n\t\t\t// Process all relations\n\t\t\tfor (\n\t\t\t\tconst {\n\t\t\t\t\ttsKey: selectedRelationTsKey,\n\t\t\t\t\tqueryConfig: selectedRelationConfigValue,\n\t\t\t\t\trelation,\n\t\t\t\t} of selectedRelations\n\t\t\t) {\n\t\t\t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t\t\t\tconst relationTableName = getTableUniqueName(relation.referencedTable);\n\t\t\t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t\t\t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t\t\t\tconst joinOn = and(\n\t\t\t\t\t...normalizedRelation.fields.map((field, i) =>\n\t\t\t\t\t\teq(\n\t\t\t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t\t\t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst builtRelation = this.buildRelationalQueryWithoutPK({\n\t\t\t\t\tfullSchema,\n\t\t\t\t\tschema,\n\t\t\t\t\ttableNamesMap,\n\t\t\t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t\t\t\t\ttableConfig: schema[relationTableTsName]!,\n\t\t\t\t\tqueryConfig: is(relation, One)\n\t\t\t\t\t\t? (selectedRelationConfigValue === true\n\t\t\t\t\t\t\t? { limit: 1 }\n\t\t\t\t\t\t\t: { ...selectedRelationConfigValue, limit: 1 })\n\t\t\t\t\t\t: selectedRelationConfigValue,\n\t\t\t\t\ttableAlias: relationTableAlias,\n\t\t\t\t\tjoinOn,\n\t\t\t\t\tnestedQueryRelation: relation,\n\t\t\t\t});\n\t\t\t\tconst field = sql`${sql.identifier(relationTableAlias)}.${sql.identifier('data')}`.as(selectedRelationTsKey);\n\t\t\t\tjoins.push({\n\t\t\t\t\ton: sql`true`,\n\t\t\t\t\ttable: new Subquery(builtRelation.sql as SQL, {}, relationTableAlias),\n\t\t\t\t\talias: relationTableAlias,\n\t\t\t\t\tjoinType: 'left',\n\t\t\t\t\tlateral: true,\n\t\t\t\t});\n\t\t\t\tselection.push({\n\t\t\t\t\tdbKey: selectedRelationTsKey,\n\t\t\t\t\ttsKey: selectedRelationTsKey,\n\t\t\t\t\tfield,\n\t\t\t\t\trelationTableTsKey: relationTableTsName,\n\t\t\t\t\tisJson: true,\n\t\t\t\t\tselection: builtRelation.selection,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (selection.length === 0) {\n\t\t\tthrow new DrizzleError({ message: `No fields selected for table \"${tableConfig.tsName}\" (\"${tableAlias}\")` });\n\t\t}\n\n\t\tlet result;\n\n\t\twhere = and(joinOn, where);\n\n\t\tif (nestedQueryRelation) {\n\t\t\tlet field = sql`json_build_array(${\n\t\t\t\tsql.join(\n\t\t\t\t\tselection.map(({ field, tsKey, isJson }) =>\n\t\t\t\t\t\tisJson\n\t\t\t\t\t\t\t? sql`${sql.identifier(`${tableAlias}_${tsKey}`)}.${sql.identifier('data')}`\n\t\t\t\t\t\t\t: is(field, SQL.Aliased)\n\t\t\t\t\t\t\t? field.sql\n\t\t\t\t\t\t\t: field\n\t\t\t\t\t),\n\t\t\t\t\tsql`, `,\n\t\t\t\t)\n\t\t\t})`;\n\t\t\tif (is(nestedQueryRelation, Many)) {\n\t\t\t\tfield = sql`coalesce(json_agg(${field}${\n\t\t\t\t\torderBy.length > 0 ? sql` order by ${sql.join(orderBy, sql`, `)}` : undefined\n\t\t\t\t}), '[]'::json)`;\n\t\t\t\t// orderBy = [];\n\t\t\t}\n\t\t\tconst nestedSelection = [{\n\t\t\t\tdbKey: 'data',\n\t\t\t\ttsKey: 'data',\n\t\t\t\tfield: field.as('data'),\n\t\t\t\tisJson: true,\n\t\t\t\trelationTableTsKey: tableConfig.tsName,\n\t\t\t\tselection,\n\t\t\t}];\n\n\t\t\tconst needsSubquery = limit !== undefined || offset !== undefined || orderBy.length > 0;\n\n\t\t\tif (needsSubquery) {\n\t\t\t\tresult = this.buildSelectQuery({\n\t\t\t\t\ttable: aliasedTable(table, tableAlias),\n\t\t\t\t\tfields: {},\n\t\t\t\t\tfieldsFlat: [{\n\t\t\t\t\t\tpath: [],\n\t\t\t\t\t\tfield: sql.raw('*'),\n\t\t\t\t\t}],\n\t\t\t\t\twhere,\n\t\t\t\t\tlimit,\n\t\t\t\t\toffset,\n\t\t\t\t\torderBy,\n\t\t\t\t\tsetOperators: [],\n\t\t\t\t});\n\n\t\t\t\twhere = undefined;\n\t\t\t\tlimit = undefined;\n\t\t\t\toffset = undefined;\n\t\t\t\torderBy = [];\n\t\t\t} else {\n\t\t\t\tresult = aliasedTable(table, tableAlias);\n\t\t\t}\n\n\t\t\tresult = this.buildSelectQuery({\n\t\t\t\ttable: is(result, PgTable) ? result : new Subquery(result, {}, tableAlias),\n\t\t\t\tfields: {},\n\t\t\t\tfieldsFlat: nestedSelection.map(({ field }) => ({\n\t\t\t\t\tpath: [],\n\t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t\t\t\t})),\n\t\t\t\tjoins,\n\t\t\t\twhere,\n\t\t\t\tlimit,\n\t\t\t\toffset,\n\t\t\t\torderBy,\n\t\t\t\tsetOperators: [],\n\t\t\t});\n\t\t} else {\n\t\t\tresult = this.buildSelectQuery({\n\t\t\t\ttable: aliasedTable(table, tableAlias),\n\t\t\t\tfields: {},\n\t\t\t\tfieldsFlat: selection.map(({ field }) => ({\n\t\t\t\t\tpath: [],\n\t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t\t\t\t})),\n\t\t\t\tjoins,\n\t\t\t\twhere,\n\t\t\t\tlimit,\n\t\t\t\toffset,\n\t\t\t\torderBy,\n\t\t\t\tsetOperators: [],\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\ttableTsKey: tableConfig.tsName,\n\t\t\tsql: result,\n\t\t\tselection,\n\t\t};\n\t}\n}\n"],"names":["table","sql","joinOn","field"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14696, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/query-builder.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport { PgDialect } from '~/pg-core/dialect.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { ColumnsSelection, SQLWrapper } from '~/sql/sql.ts';\nimport { WithSubquery } from '~/subquery.ts';\nimport type { PgColumn } from '../columns/index.ts';\nimport type { WithSubqueryWithSelection } from '../subquery.ts';\nimport { PgSelectBuilder } from './select.ts';\nimport type { SelectedFields } from './select.types.ts';\n\nexport class QueryBuilder {\n\tstatic readonly [entityKind]: string = 'PgQueryBuilder';\n\n\tprivate dialect: PgDialect | undefined;\n\n\t$with<TAlias extends string>(alias: TAlias) {\n\t\tconst queryBuilder = this;\n\n\t\treturn {\n\t\t\tas<TSelection extends ColumnsSelection>(\n\t\t\t\tqb: TypedQueryBuilder<TSelection> | ((qb: QueryBuilder) => TypedQueryBuilder<TSelection>),\n\t\t\t): WithSubqueryWithSelection<TSelection, TAlias> {\n\t\t\t\tif (typeof qb === 'function') {\n\t\t\t\t\tqb = qb(queryBuilder);\n\t\t\t\t}\n\n\t\t\t\treturn new Proxy(\n\t\t\t\t\tnew WithSubquery(qb.getSQL(), qb.getSelectedFields() as SelectedFields, alias, true),\n\t\t\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t\t\t) as WithSubqueryWithSelection<TSelection, TAlias>;\n\t\t\t},\n\t\t};\n\t}\n\n\twith(...queries: WithSubquery[]) {\n\t\tconst self = this;\n\n\t\tfunction select(): PgSelectBuilder<undefined, 'qb'>;\n\t\tfunction select<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection, 'qb'>;\n\t\tfunction select<TSelection extends SelectedFields>(\n\t\t\tfields?: TSelection,\n\t\t): PgSelectBuilder<TSelection | undefined, 'qb'> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\twithList: queries,\n\t\t\t});\n\t\t}\n\n\t\tfunction selectDistinct(): PgSelectBuilder<undefined, 'qb'>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection, 'qb'>;\n\t\tfunction selectDistinct(fields?: SelectedFields): PgSelectBuilder<SelectedFields | undefined, 'qb'> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\tdistinct: true,\n\t\t\t});\n\t\t}\n\n\t\tfunction selectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined, 'qb'>;\n\t\tfunction selectDistinctOn<TSelection extends SelectedFields>(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields: TSelection,\n\t\t): PgSelectBuilder<TSelection, 'qb'>;\n\t\tfunction selectDistinctOn(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields?: SelectedFields,\n\t\t): PgSelectBuilder<SelectedFields | undefined, 'qb'> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\tdistinct: { on },\n\t\t\t});\n\t\t}\n\n\t\treturn { select, selectDistinct, selectDistinctOn };\n\t}\n\n\tselect(): PgSelectBuilder<undefined, 'qb'>;\n\tselect<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection, 'qb'>;\n\tselect<TSelection extends SelectedFields>(fields?: TSelection): PgSelectBuilder<TSelection | undefined, 'qb'> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: undefined,\n\t\t\tdialect: this.getDialect(),\n\t\t});\n\t}\n\n\tselectDistinct(): PgSelectBuilder<undefined>;\n\tselectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\tselectDistinct(fields?: SelectedFields): PgSelectBuilder<SelectedFields | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: undefined,\n\t\t\tdialect: this.getDialect(),\n\t\t\tdistinct: true,\n\t\t});\n\t}\n\n\tselectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined>;\n\tselectDistinctOn<TSelection extends SelectedFields>(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields: TSelection,\n\t): PgSelectBuilder<TSelection>;\n\tselectDistinctOn(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields?: SelectedFields,\n\t): PgSelectBuilder<SelectedFields | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: undefined,\n\t\t\tdialect: this.getDialect(),\n\t\t\tdistinct: { on },\n\t\t});\n\t}\n\n\t// Lazy load dialect to avoid circular dependency\n\tprivate getDialect() {\n\t\tif (!this.dialect) {\n\t\t\tthis.dialect = new PgDialect();\n\t\t}\n\n\t\treturn this.dialect;\n\t}\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;AAK3B,SAAS,oBAAoB;AAF7B,SAAS,6BAA6B;AAKtC,SAAS,uBAAuB;AAPhC,SAAS,iBAAiB;;;;;;AAUnB,MAAM,aAAa;IACzB,OAAA,0IAAiB,aAAU,CAAA,GAAY,iBAAA;IAE/B,QAAA;IAER,MAA6B,KAAA,EAAe;QAC3C,MAAM,eAAe,IAAA;QAErB,OAAO;YACN,IACC,EAAA,EACgD;gBAChD,IAAI,OAAO,OAAO,YAAY;oBAC7B,KAAK,GAAG,YAAY;gBACrB;gBAEA,OAAO,IAAI,MACV,IAAI,0JAAA,CAAa,GAAG,MAAA,CAAO,GAAG,GAAG,iBAAA,CAAkB,GAAqB,OAAO,IAAI,GACnF,yJAAI,wBAAA,CAAsB;oBAAE;oBAAO,oBAAoB;oBAAS,aAAa;gBAAQ,CAAC;YAExF;QACD;IACD;IAEA,KAAA,GAAQ,OAAA,EAAyB;QAChC,MAAM,OAAO,IAAA;QAIb,SAAS,OACR,MAAA,EACgD;YAChD,OAAO,IAAI,8LAAA,CAAgB;gBAC1B,QAAQ,UAAU,KAAA;gBAClB,SAAS,KAAA;gBACT,SAAS,KAAK,UAAA,CAAW;gBACzB,UAAU;YACX,CAAC;QACF;QAIA,SAAS,eAAe,MAAA,EAA4E;YACnG,OAAO,gLAAI,kBAAA,CAAgB;gBAC1B,QAAQ,UAAU,KAAA;gBAClB,SAAS,KAAA;gBACT,SAAS,KAAK,UAAA,CAAW;gBACzB,UAAU;YACX,CAAC;QACF;QAOA,SAAS,iBACR,EAAA,EACA,MAAA,EACoD;YACpD,OAAO,gLAAI,kBAAA,CAAgB;gBAC1B,QAAQ,UAAU,KAAA;gBAClB,SAAS,KAAA;gBACT,SAAS,KAAK,UAAA,CAAW;gBACzB,UAAU;oBAAE;gBAAG;YAChB,CAAC;QACF;QAEA,OAAO;YAAE;YAAQ;YAAgB;QAAiB;IACnD;IAIA,OAA0C,MAAA,EAAoE;QAC7G,OAAO,gLAAI,kBAAA,CAAgB;YAC1B,QAAQ,UAAU,KAAA;YAClB,SAAS,KAAA;YACT,SAAS,IAAA,CAAK,UAAA,CAAW;QAC1B,CAAC;IACF;IAIA,eAAe,MAAA,EAAsE;QACpF,OAAO,gLAAI,kBAAA,CAAgB;YAC1B,QAAQ,UAAU,KAAA;YAClB,SAAS,KAAA;YACT,SAAS,IAAA,CAAK,UAAA,CAAW;YACzB,UAAU;QACX,CAAC;IACF;IAOA,iBACC,EAAA,EACA,MAAA,EAC8C;QAC9C,OAAO,gLAAI,kBAAA,CAAgB;YAC1B,QAAQ,UAAU,KAAA;YAClB,SAAS,KAAA;YACT,SAAS,IAAA,CAAK,UAAA,CAAW;YACzB,UAAU;gBAAE;YAAG;QAChB,CAAC;IACF;IAAA,iDAAA;IAGQ,aAAa;QACpB,IAAI,CAAC,IAAA,CAAK,OAAA,EAAS;YAClB,IAAA,CAAK,OAAA,GAAU,4JAAI,YAAA,CAAU;QAC9B;QAEA,OAAO,IAAA,CAAK,OAAA;IACb;AACD","ignoreList":[0]}},
    {"offset": {"line": 14796, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14802, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/update.ts"],"sourcesContent":["import type { GetColumnData } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport type { SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Query, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport type { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport { mapUpdateSet, orderSelectedFields, type UpdateSet } from '~/utils.ts';\nimport type { PgColumn } from '../columns/common.ts';\nimport type { SelectedFields, SelectedFieldsOrdered } from './select.types.ts';\n\nexport interface PgUpdateConfig {\n\twhere?: SQL | undefined;\n\tset: UpdateSet;\n\ttable: PgTable;\n\treturning?: SelectedFieldsOrdered;\n\twithList?: Subquery[];\n}\n\nexport type PgUpdateSetSource<TTable extends PgTable> =\n\t& {\n\t\t[Key in keyof TTable['$inferInsert']]?:\n\t\t\t| GetColumnData<TTable['_']['columns'][Key]>\n\t\t\t| SQL;\n\t}\n\t& {};\n\nexport class PgUpdateBuilder<TTable extends PgTable, TQueryResult extends PgQueryResultHKT> {\n\tstatic readonly [entityKind]: string = 'PgUpdateBuilder';\n\n\tdeclare readonly _: {\n\t\treadonly table: TTable;\n\t};\n\n\tconstructor(\n\t\tprivate table: TTable,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\tprivate withList?: Subquery[],\n\t) {}\n\n\tset(values: PgUpdateSetSource<TTable>): PgUpdateBase<TTable, TQueryResult> {\n\t\treturn new PgUpdateBase<TTable, TQueryResult>(\n\t\t\tthis.table,\n\t\t\tmapUpdateSet(this.table, values),\n\t\t\tthis.session,\n\t\t\tthis.dialect,\n\t\t\tthis.withList,\n\t\t);\n\t}\n}\n\nexport type PgUpdateWithout<\n\tT extends AnyPgUpdate,\n\tTDynamic extends boolean,\n\tK extends keyof T & string,\n> = TDynamic extends true ? T : Omit<\n\tPgUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tT['_']['returning'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods'] | K\n\t>,\n\tT['_']['excludedMethods'] | K\n>;\n\nexport type PgUpdateReturningAll<T extends AnyPgUpdate, TDynamic extends boolean> = PgUpdateWithout<\n\tPgUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tT['_']['table']['$inferSelect'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgUpdateReturning<\n\tT extends AnyPgUpdate,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFields,\n> = PgUpdateWithout<\n\tPgUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tSelectResultFields<TSelectedFields>,\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgUpdatePrepare<T extends AnyPgUpdate> = PgPreparedQuery<\n\tPreparedQueryConfig & {\n\t\texecute: T['_']['returning'] extends undefined ? PgQueryResultKind<T['_']['queryResult'], never>\n\t\t\t: T['_']['returning'][];\n\t}\n>;\n\nexport type PgUpdateDynamic<T extends AnyPgUpdate> = PgUpdate<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['returning']\n>;\n\nexport type PgUpdate<\n\tTTable extends PgTable = PgTable,\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = Record<string, unknown> | undefined,\n> = PgUpdateBase<TTable, TQueryResult, TReturning, true, never>;\n\ntype AnyPgUpdate = PgUpdateBase<any, any, any, any, any>;\n\nexport interface PgUpdateBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tQueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\tSQLWrapper\n{\n\treadonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly table: TTable;\n\t\treadonly queryResult: TQueryResult;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t};\n}\n\nexport class PgUpdateBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>\n\timplements\n\t\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\t\tSQLWrapper\n{\n\tstatic readonly [entityKind]: string = 'PgUpdate';\n\n\tprivate config: PgUpdateConfig;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tset: UpdateSet,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\twithList?: Subquery[],\n\t) {\n\t\tsuper();\n\t\tthis.config = { set, table, withList };\n\t}\n\n\t/**\n\t * Adds a 'where' clause to the query.\n\t *\n\t * Calling this method will update only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t *\n\t * @param where the 'where' clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be updated.\n\t *\n\t * ```ts\n\t * // Update all cars with green color\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'));\n\t * // or\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Update all BMW cars with a green color\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Update all cars with the green or blue color\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(where: SQL | undefined): PgUpdateWithout<this, TDynamic, 'where'> {\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the updated rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update#update-with-returning}\n\t *\n\t * @example\n\t * ```ts\n\t * // Update all cars with the green color and return all fields\n\t * const updatedCars: Car[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning();\n\t *\n\t * // Update all cars with the green color and return only their id and brand fields\n\t * const updatedCarsIdsAndBrands: { id: number, brand: string }[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning({ id: cars.id, brand: cars.brand });\n\t * ```\n\t */\n\treturning(): PgUpdateReturningAll<this, TDynamic>;\n\treturning<TSelectedFields extends SelectedFields>(\n\t\tfields: TSelectedFields,\n\t): PgUpdateReturning<this, TDynamic, TSelectedFields>;\n\treturning(\n\t\tfields: SelectedFields = this.config.table[Table.Symbol.Columns],\n\t): PgUpdateWithout<AnyPgUpdate, TDynamic, 'returning'> {\n\t\tthis.config.returning = orderSelectedFields<PgColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildUpdateQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgUpdatePrepare<this> {\n\t\treturn this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true);\n\t}\n\n\tprepare(name: string): PgUpdatePrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\toverride execute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn this._prepare().execute(placeholderValues);\n\t};\n\n\t$dynamic(): PgUpdateDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,kBAAkB;AAgB3B,SAAS,cAAc,2BAA2C;AADlE,SAAS,aAAa;AAJtB,SAAS,oBAAoB;;;;;AAyBtB,MAAM,gBAA+E;IAO3F,YACS,KAAA,EACA,OAAA,EACA,OAAA,EACA,QAAA,CACP;QAJO,IAAA,CAAA,KAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,QAAA,GAAA;IACN;IAXH,OAAA,0IAAiB,aAAU,CAAA,GAAY,kBAAA;IAavC,IAAI,MAAA,EAAuE;QAC1E,OAAO,IAAI,aACV,IAAA,CAAK,KAAA,8IACL,eAAA,EAAa,IAAA,CAAK,KAAA,EAAO,MAAM,GAC/B,IAAA,CAAK,OAAA,EACL,IAAA,CAAK,OAAA,EACL,IAAA,CAAK,QAAA;IAEP;AACD;AAwFO,MAAM,uKAQH,gBAAA,CAIV;IAKC,YACC,KAAA,EACA,GAAA,EACQ,OAAA,EACA,OAAA,EACR,QAAA,CACC;QACD,KAAA,CAAM;QAJE,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QAIR,IAAA,CAAK,MAAA,GAAS;YAAE;YAAK;YAAO;QAAS;IACtC;IAbA,OAAA,yIAAiB,cAAU,CAAA,GAAY,WAAA;IAE/B,OAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA8CR,MAAM,KAAA,EAAkE;QACvE,IAAA,CAAK,MAAA,CAAO,KAAA,GAAQ;QACpB,OAAO,IAAA;IACR;IA4BA,UACC,SAAyB,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,gJAAA,CAAM,MAAA,CAAO,OAAO,CAAA,EACT;QACtD,IAAA,CAAK,MAAA,CAAO,SAAA,+IAAY,sBAAA,EAA8B,MAAM;QAC5D,OAAO,IAAA;IACR;IAAA,cAAA,GAGA,SAAc;QACb,OAAO,IAAA,CAAK,OAAA,CAAQ,gBAAA,CAAiB,IAAA,CAAK,MAAM;IACjD;IAEA,QAAe;QACd,MAAM,EAAE,SAAS,QAAA,EAAU,GAAG,KAAK,CAAA,GAAI,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,IAAA,CAAK,MAAA,CAAO,CAAC;QAC5E,OAAO;IACR;IAAA,cAAA,GAGA,SAAS,IAAA,EAAsC;QAC9C,OAAO,IAAA,CAAK,OAAA,CAAQ,YAAA,CAAa,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,IAAA,CAAK,MAAA,CAAO,CAAC,GAAG,IAAA,CAAK,MAAA,CAAO,SAAA,EAAW,MAAM,IAAI;IAC3G;IAEA,QAAQ,IAAA,EAAqC;QAC5C,OAAO,IAAA,CAAK,QAAA,CAAS,IAAI;IAC1B;IAES,UAAkD,CAAC,sBAAsB;QACjF,OAAO,IAAA,CAAK,QAAA,CAAS,EAAE,OAAA,CAAQ,iBAAiB;IACjD,EAAA;IAEA,WAAkC;QACjC,OAAO,IAAA;IACR;AACD","ignoreList":[0]}},
    {"offset": {"line": 14901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14907, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/insert.ts"],"sourcesContent":["import { entityKind, is } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type { IndexColumn } from '~/pg-core/indexes.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport type { SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Placeholder, Query, SQLWrapper } from '~/sql/sql.ts';\nimport { Param, SQL, sql } from '~/sql/sql.ts';\nimport type { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport { tracer } from '~/tracing.ts';\nimport { mapUpdateSet, orderSelectedFields } from '~/utils.ts';\nimport type { PgColumn } from '../columns/common.ts';\nimport type { SelectedFieldsFlat, SelectedFieldsOrdered } from './select.types.ts';\nimport type { PgUpdateSetSource } from './update.ts';\n\nexport interface PgInsertConfig<TTable extends PgTable = PgTable> {\n\ttable: TTable;\n\tvalues: Record<string, Param | SQL>[];\n\twithList?: Subquery[];\n\tonConflict?: SQL;\n\treturning?: SelectedFieldsOrdered;\n}\n\nexport type PgInsertValue<TTable extends PgTable> =\n\t& {\n\t\t[Key in keyof TTable['$inferInsert']]: TTable['$inferInsert'][Key] | SQL | Placeholder;\n\t}\n\t& {};\n\nexport class PgInsertBuilder<TTable extends PgTable, TQueryResult extends PgQueryResultHKT> {\n\tstatic readonly [entityKind]: string = 'PgInsertBuilder';\n\n\tconstructor(\n\t\tprivate table: TTable,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\tprivate withList?: Subquery[],\n\t) {}\n\n\tvalues(value: PgInsertValue<TTable>): PgInsertBase<TTable, TQueryResult>;\n\tvalues(values: PgInsertValue<TTable>[]): PgInsertBase<TTable, TQueryResult>;\n\tvalues(values: PgInsertValue<TTable> | PgInsertValue<TTable>[]): PgInsertBase<TTable, TQueryResult> {\n\t\tvalues = Array.isArray(values) ? values : [values];\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('values() must be called with at least one value');\n\t\t}\n\t\tconst mappedValues = values.map((entry) => {\n\t\t\tconst result: Record<string, Param | SQL> = {};\n\t\t\tconst cols = this.table[Table.Symbol.Columns];\n\t\t\tfor (const colKey of Object.keys(entry)) {\n\t\t\t\tconst colValue = entry[colKey as keyof typeof entry];\n\t\t\t\tresult[colKey] = is(colValue, SQL) ? colValue : new Param(colValue, cols[colKey]);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\n\t\treturn new PgInsertBase(this.table, mappedValues, this.session, this.dialect, this.withList);\n\t}\n}\n\nexport type PgInsertWithout<T extends AnyPgInsert, TDynamic extends boolean, K extends keyof T & string> =\n\tTDynamic extends true ? T\n\t\t: Omit<\n\t\t\tPgInsertBase<\n\t\t\t\tT['_']['table'],\n\t\t\t\tT['_']['queryResult'],\n\t\t\t\tT['_']['returning'],\n\t\t\t\tTDynamic,\n\t\t\t\tT['_']['excludedMethods'] | K\n\t\t\t>,\n\t\t\tT['_']['excludedMethods'] | K\n\t\t>;\n\nexport type PgInsertReturning<\n\tT extends AnyPgInsert,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFieldsFlat,\n> = PgInsertBase<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tSelectResultFields<TSelectedFields>,\n\tTDynamic,\n\tT['_']['excludedMethods']\n>;\n\nexport type PgInsertReturningAll<T extends AnyPgInsert, TDynamic extends boolean> = PgInsertBase<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['table']['$inferSelect'],\n\tTDynamic,\n\tT['_']['excludedMethods']\n>;\n\nexport interface PgInsertOnConflictDoUpdateConfig<T extends AnyPgInsert> {\n\ttarget: IndexColumn | IndexColumn[];\n\t/** @deprecated use either `targetWhere` or `setWhere` */\n\twhere?: SQL;\n\t// TODO: add tests for targetWhere and setWhere\n\ttargetWhere?: SQL;\n\tsetWhere?: SQL;\n\tset: PgUpdateSetSource<T['_']['table']>;\n}\n\nexport type PgInsertPrepare<T extends AnyPgInsert> = PgPreparedQuery<\n\tPreparedQueryConfig & {\n\t\texecute: T['_']['returning'] extends undefined ? PgQueryResultKind<T['_']['queryResult'], never>\n\t\t\t: T['_']['returning'][];\n\t}\n>;\n\nexport type PgInsertDynamic<T extends AnyPgInsert> = PgInsert<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['returning']\n>;\n\nexport type AnyPgInsert = PgInsertBase<any, any, any, any, any>;\n\nexport type PgInsert<\n\tTTable extends PgTable = PgTable,\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = Record<string, unknown> | undefined,\n> = PgInsertBase<TTable, TQueryResult, TReturning, true, never>;\n\nexport interface PgInsertBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tQueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\tSQLWrapper\n{\n\treadonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly table: TTable;\n\t\treadonly queryResult: TQueryResult;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t};\n}\n\nexport class PgInsertBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>\n\timplements\n\t\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\t\tSQLWrapper\n{\n\tstatic readonly [entityKind]: string = 'PgInsert';\n\n\tprivate config: PgInsertConfig<TTable>;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tvalues: PgInsertConfig['values'],\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\twithList?: Subquery[],\n\t) {\n\t\tsuper();\n\t\tthis.config = { table, values, withList };\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the inserted rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#insert-returning}\n\t *\n\t * @example\n\t * ```ts\n\t * // Insert one row and return all fields\n\t * const insertedCar: Car[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning();\n\t *\n\t * // Insert one row and return only the id\n\t * const insertedCarId: { id: number }[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning({ id: cars.id });\n\t * ```\n\t */\n\treturning(): PgInsertWithout<PgInsertReturningAll<this, TDynamic>, TDynamic, 'returning'>;\n\treturning<TSelectedFields extends SelectedFieldsFlat>(\n\t\tfields: TSelectedFields,\n\t): PgInsertWithout<PgInsertReturning<this, TDynamic, TSelectedFields>, TDynamic, 'returning'>;\n\treturning(\n\t\tfields: SelectedFieldsFlat = this.config.table[Table.Symbol.Columns],\n\t): PgInsertWithout<AnyPgInsert, TDynamic, 'returning'> {\n\t\tthis.config.returning = orderSelectedFields<PgColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `on conflict do nothing` clause to the query.\n\t *\n\t * Calling this method simply avoids inserting a row as its alternative action.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#on-conflict-do-nothing}\n\t *\n\t * @param config The `target` and `where` clauses.\n\t *\n\t * @example\n\t * ```ts\n\t * // Insert one row and cancel the insert if there's a conflict\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoNothing();\n\t *\n\t * // Explicitly specify conflict target\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoNothing({ target: cars.id });\n\t * ```\n\t */\n\tonConflictDoNothing(\n\t\tconfig: { target?: IndexColumn | IndexColumn[]; where?: SQL } = {},\n\t): PgInsertWithout<this, TDynamic, 'onConflictDoNothing' | 'onConflictDoUpdate'> {\n\t\tif (config.target === undefined) {\n\t\t\tthis.config.onConflict = sql`do nothing`;\n\t\t} else {\n\t\t\tlet targetColumn = '';\n\t\t\ttargetColumn = Array.isArray(config.target)\n\t\t\t\t? config.target.map((it) => this.dialect.escapeName(it.name)).join(',')\n\t\t\t\t: this.dialect.escapeName(config.target.name);\n\n\t\t\tconst whereSql = config.where ? sql` where ${config.where}` : undefined;\n\t\t\tthis.config.onConflict = sql`(${sql.raw(targetColumn)})${whereSql} do nothing`;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `on conflict do update` clause to the query.\n\t *\n\t * Calling this method will update the existing row that conflicts with the row proposed for insertion as its alternative action.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#upserts-and-conflicts}\n\t *\n\t * @param config The `target`, `set` and `where` clauses.\n\t *\n\t * @example\n\t * ```ts\n\t * // Update the row if there's a conflict\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoUpdate({\n\t *     target: cars.id,\n\t *     set: { brand: 'Porsche' }\n\t *   });\n\t *\n\t * // Upsert with 'where' clause\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoUpdate({\n\t *     target: cars.id,\n\t *     set: { brand: 'newBMW' },\n\t *     targetWhere: sql`${cars.createdAt} > '2023-01-01'::date`,\n\t *   });\n\t * ```\n\t */\n\tonConflictDoUpdate(\n\t\tconfig: PgInsertOnConflictDoUpdateConfig<this>,\n\t): PgInsertWithout<this, TDynamic, 'onConflictDoNothing' | 'onConflictDoUpdate'> {\n\t\tif (config.where && (config.targetWhere || config.setWhere)) {\n\t\t\tthrow new Error(\n\t\t\t\t'You cannot use both \"where\" and \"targetWhere\"/\"setWhere\" at the same time - \"where\" is deprecated, use \"targetWhere\" or \"setWhere\" instead.',\n\t\t\t);\n\t\t}\n\t\tconst whereSql = config.where ? sql` where ${config.where}` : undefined;\n\t\tconst targetWhereSql = config.targetWhere ? sql` where ${config.targetWhere}` : undefined;\n\t\tconst setWhereSql = config.setWhere ? sql` where ${config.setWhere}` : undefined;\n\t\tconst setSql = this.dialect.buildUpdateSet(this.config.table, mapUpdateSet(this.config.table, config.set));\n\t\tlet targetColumn = '';\n\t\ttargetColumn = Array.isArray(config.target)\n\t\t\t? config.target.map((it) => this.dialect.escapeName(it.name)).join(',')\n\t\t\t: this.dialect.escapeName(config.target.name);\n\t\tthis.config.onConflict = sql`(${\n\t\t\tsql.raw(targetColumn)\n\t\t})${targetWhereSql} do update set ${setSql}${whereSql}${setWhereSql}`;\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildInsertQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgInsertPrepare<this> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\treturn this.session.prepareQuery<\n\t\t\t\tPreparedQueryConfig & {\n\t\t\t\t\texecute: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t\t\t\t}\n\t\t\t>(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true);\n\t\t});\n\t}\n\n\tprepare(name: string): PgInsertPrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\toverride execute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues);\n\t\t});\n\t};\n\n\t$dynamic(): PgInsertDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15066, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15072, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/delete.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport type { SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Query, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport type { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport { tracer } from '~/tracing.ts';\nimport { orderSelectedFields } from '~/utils.ts';\nimport type { PgColumn } from '../columns/common.ts';\nimport type { SelectedFieldsFlat, SelectedFieldsOrdered } from './select.types.ts';\n\nexport type PgDeleteWithout<\n\tT extends AnyPgDeleteBase,\n\tTDynamic extends boolean,\n\tK extends keyof T & string,\n> = TDynamic extends true ? T\n\t: Omit<\n\t\tPgDeleteBase<\n\t\t\tT['_']['table'],\n\t\t\tT['_']['queryResult'],\n\t\t\tT['_']['returning'],\n\t\t\tTDynamic,\n\t\t\tT['_']['excludedMethods'] | K\n\t\t>,\n\t\tT['_']['excludedMethods'] | K\n\t>;\n\nexport type PgDelete<\n\tTTable extends PgTable = PgTable,\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = Record<string, unknown> | undefined,\n> = PgDeleteBase<TTable, TQueryResult, TReturning, true, never>;\n\nexport interface PgDeleteConfig {\n\twhere?: SQL | undefined;\n\ttable: PgTable;\n\treturning?: SelectedFieldsOrdered;\n\twithList?: Subquery[];\n}\n\nexport type PgDeleteReturningAll<\n\tT extends AnyPgDeleteBase,\n\tTDynamic extends boolean,\n> = PgDeleteWithout<\n\tPgDeleteBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tT['_']['table']['$inferSelect'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgDeleteReturning<\n\tT extends AnyPgDeleteBase,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFieldsFlat,\n> = PgDeleteWithout<\n\tPgDeleteBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tSelectResultFields<TSelectedFields>,\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgDeletePrepare<T extends AnyPgDeleteBase> = PgPreparedQuery<\n\tPreparedQueryConfig & {\n\t\texecute: T['_']['returning'] extends undefined ? PgQueryResultKind<T['_']['queryResult'], never>\n\t\t\t: T['_']['returning'][];\n\t}\n>;\n\nexport type PgDeleteDynamic<T extends AnyPgDeleteBase> = PgDelete<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['returning']\n>;\n\nexport type AnyPgDeleteBase = PgDeleteBase<any, any, any, any, any>;\n\nexport interface PgDeleteBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tQueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\tSQLWrapper\n{\n\treadonly _: {\n\t\tdialect: 'pg';\n\t\treadonly table: TTable;\n\t\treadonly queryResult: TQueryResult;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t};\n}\n\nexport class PgDeleteBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>\n\timplements\n\t\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\t\tSQLWrapper\n{\n\tstatic readonly [entityKind]: string = 'PgDelete';\n\n\tprivate config: PgDeleteConfig;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\twithList?: Subquery[],\n\t) {\n\t\tsuper();\n\t\tthis.config = { table, withList };\n\t}\n\n\t/**\n\t * Adds a `where` clause to the query.\n\t *\n\t * Calling this method will delete only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t *\n\t * @param where the `where` clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be deleted.\n\t *\n\t * ```ts\n\t * // Delete all cars with green color\n\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t * // or\n\t * await db.delete(cars).where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Delete all BMW cars with a green color\n\t * await db.delete(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Delete all cars with the green or blue color\n\t * await db.delete(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(where: SQL | undefined): PgDeleteWithout<this, TDynamic, 'where'> {\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the deleted rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete#delete-with-return}\n\t *\n\t * @example\n\t * ```ts\n\t * // Delete all cars with the green color and return all fields\n\t * const deletedCars: Car[] = await db.delete(cars)\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning();\n\t *\n\t * // Delete all cars with the green color and return only their id and brand fields\n\t * const deletedCarsIdsAndBrands: { id: number, brand: string }[] = await db.delete(cars)\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning({ id: cars.id, brand: cars.brand });\n\t * ```\n\t */\n\treturning(): PgDeleteReturningAll<this, TDynamic>;\n\treturning<TSelectedFields extends SelectedFieldsFlat>(\n\t\tfields: TSelectedFields,\n\t): PgDeleteReturning<this, TDynamic, TSelectedFields>;\n\treturning(\n\t\tfields: SelectedFieldsFlat = this.config.table[Table.Symbol.Columns],\n\t): PgDeleteReturning<this, TDynamic, any> {\n\t\tthis.config.returning = orderSelectedFields<PgColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildDeleteQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgDeletePrepare<this> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\treturn this.session.prepareQuery<\n\t\t\t\tPreparedQueryConfig & {\n\t\t\t\t\texecute: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t\t\t\t}\n\t\t\t>(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true);\n\t\t});\n\t}\n\n\tprepare(name: string): PgDeletePrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\toverride execute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues);\n\t\t});\n\t};\n\n\t$dynamic(): PgDeleteDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;AAe3B,SAAS,aAAa;AAEtB,SAAS,2BAA2B;AADpC,SAAS,cAAc;AALvB,SAAS,oBAAoB;;;;;;AA2GtB,MAAM,wKAOH,eAAA,CAIV;IAKC,YACC,KAAA,EACQ,OAAA,EACA,OAAA,EACR,QAAA,CACC;QACD,KAAA,CAAM;QAJE,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QAIR,IAAA,CAAK,MAAA,GAAS;YAAE;YAAO;QAAS;IACjC;IAZA,OAAA,0IAAiB,aAAU,CAAA,GAAY,WAAA;IAE/B,OAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GAyCR,MAAM,KAAA,EAAkE;QACvE,IAAA,CAAK,MAAA,CAAO,KAAA,GAAQ;QACpB,OAAO,IAAA;IACR;IA0BA,UACC,SAA6B,IAAA,CAAK,MAAA,CAAO,KAAA,yIAAM,QAAA,CAAM,MAAA,CAAO,OAAO,CAAA,EAC1B;QACzC,IAAA,CAAK,MAAA,CAAO,SAAA,GAAY,kKAAA,EAA8B,MAAM;QAC5D,OAAO,IAAA;IACR;IAAA,cAAA,GAGA,SAAc;QACb,OAAO,IAAA,CAAK,OAAA,CAAQ,gBAAA,CAAiB,IAAA,CAAK,MAAM;IACjD;IAEA,QAAe;QACd,MAAM,EAAE,SAAS,QAAA,EAAU,GAAG,KAAK,CAAA,GAAI,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,IAAA,CAAK,MAAA,CAAO,CAAC;QAC5E,OAAO;IACR;IAAA,cAAA,GAGA,SAAS,IAAA,EAAsC;QAC9C,gJAAO,UAAA,CAAO,eAAA,CAAgB,wBAAwB,MAAM;YAC3D,OAAO,IAAA,CAAK,OAAA,CAAQ,YAAA,CAIlB,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,IAAA,CAAK,MAAA,CAAO,CAAC,GAAG,IAAA,CAAK,MAAA,CAAO,SAAA,EAAW,MAAM,IAAI;QAC5E,CAAC;IACF;IAEA,QAAQ,IAAA,EAAqC;QAC5C,OAAO,IAAA,CAAK,QAAA,CAAS,IAAI;IAC1B;IAES,UAAkD,CAAC,sBAAsB;QACjF,iJAAO,SAAA,CAAO,eAAA,CAAgB,qBAAqB,MAAM;YACxD,OAAO,IAAA,CAAK,QAAA,CAAS,EAAE,OAAA,CAAQ,iBAAiB;QACjD,CAAC;IACF,EAAA;IAEA,WAAkC;QACjC,OAAO,IAAA;IACR;AACD","ignoreList":[0]}},
    {"offset": {"line": 15159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15165, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/refresh-materialized-view.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgMaterializedView } from '~/pg-core/view.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Query, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport { tracer } from '~/tracing.ts';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface PgRefreshMaterializedView<TQueryResult extends PgQueryResultHKT>\n\textends\n\t\tQueryPromise<PgQueryResultKind<TQueryResult, never>>,\n\t\tRunnableQuery<PgQueryResultKind<TQueryResult, never>, 'pg'>,\n\t\tSQLWrapper\n{\n\treadonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly result: PgQueryResultKind<TQueryResult, never>;\n\t};\n}\n\nexport class PgRefreshMaterializedView<TQueryResult extends PgQueryResultHKT>\n\textends QueryPromise<PgQueryResultKind<TQueryResult, never>>\n\timplements RunnableQuery<PgQueryResultKind<TQueryResult, never>, 'pg'>, SQLWrapper\n{\n\tstatic readonly [entityKind]: string = 'PgRefreshMaterializedView';\n\n\tprivate config: {\n\t\tview: PgMaterializedView;\n\t\tconcurrently?: boolean;\n\t\twithNoData?: boolean;\n\t};\n\n\tconstructor(\n\t\tview: PgMaterializedView,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t) {\n\t\tsuper();\n\t\tthis.config = { view };\n\t}\n\n\tconcurrently(): this {\n\t\tif (this.config.withNoData !== undefined) {\n\t\t\tthrow new Error('Cannot use concurrently and withNoData together');\n\t\t}\n\t\tthis.config.concurrently = true;\n\t\treturn this;\n\t}\n\n\twithNoData(): this {\n\t\tif (this.config.concurrently !== undefined) {\n\t\t\tthrow new Error('Cannot use concurrently and withNoData together');\n\t\t}\n\t\tthis.config.withNoData = true;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildRefreshMaterializedViewQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgPreparedQuery<\n\t\tPreparedQueryConfig & {\n\t\t\texecute: PgQueryResultKind<TQueryResult, never>;\n\t\t}\n\t> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\treturn this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()), undefined, name, true);\n\t\t});\n\t}\n\n\tprepare(name: string): PgPreparedQuery<\n\t\tPreparedQueryConfig & {\n\t\t\texecute: PgQueryResultKind<TQueryResult, never>;\n\t\t}\n\t> {\n\t\treturn this._prepare(name);\n\t}\n\n\texecute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues);\n\t\t});\n\t};\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;AAa3B,SAAS,cAAc;AAHvB,SAAS,oBAAoB;;;;AAkBtB,MAAM,qLACJ,eAAA,CAET;IASC,YACC,IAAA,EACQ,OAAA,EACA,OAAA,CACP;QACD,KAAA,CAAM;QAHE,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QAGR,IAAA,CAAK,MAAA,GAAS;YAAE;QAAK;IACtB;IAfA,OAAA,yIAAiB,cAAU,CAAA,GAAY,4BAAA;IAE/B,OAAA;IAeR,eAAqB;QACpB,IAAI,IAAA,CAAK,MAAA,CAAO,UAAA,KAAe,KAAA,GAAW;YACzC,MAAM,IAAI,MAAM,iDAAiD;QAClE;QACA,IAAA,CAAK,MAAA,CAAO,YAAA,GAAe;QAC3B,OAAO,IAAA;IACR;IAEA,aAAmB;QAClB,IAAI,IAAA,CAAK,MAAA,CAAO,YAAA,KAAiB,KAAA,GAAW;YAC3C,MAAM,IAAI,MAAM,iDAAiD;QAClE;QACA,IAAA,CAAK,MAAA,CAAO,UAAA,GAAa;QACzB,OAAO,IAAA;IACR;IAAA,cAAA,GAGA,SAAc;QACb,OAAO,IAAA,CAAK,OAAA,CAAQ,iCAAA,CAAkC,IAAA,CAAK,MAAM;IAClE;IAEA,QAAe;QACd,MAAM,EAAE,SAAS,QAAA,EAAU,GAAG,KAAK,CAAA,GAAI,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,IAAA,CAAK,MAAA,CAAO,CAAC;QAC5E,OAAO;IACR;IAAA,cAAA,GAGA,SAAS,IAAA,EAIP;QACD,iJAAO,SAAA,CAAO,eAAA,CAAgB,wBAAwB,MAAM;YAC3D,OAAO,IAAA,CAAK,OAAA,CAAQ,YAAA,CAAa,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,IAAA,CAAK,MAAA,CAAO,CAAC,GAAG,KAAA,GAAW,MAAM,IAAI;QAC/F,CAAC;IACF;IAEA,QAAQ,IAAA,EAIN;QACD,OAAO,IAAA,CAAK,QAAA,CAAS,IAAI;IAC1B;IAEA,UAAkD,CAAC,sBAAsB;QACxE,iJAAO,SAAA,CAAO,eAAA,CAAgB,qBAAqB,MAAM;YACxD,OAAO,IAAA,CAAK,QAAA,CAAS,EAAE,OAAA,CAAQ,iBAAiB;QACjD,CAAC;IACF,EAAA;AACD","ignoreList":[0]}},
    {"offset": {"line": 15222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15228, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/query-builders/raw.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport type { Query, SQL, SQLWrapper } from '~/sql/sql.ts';\n\nexport interface PgRaw<TResult> extends QueryPromise<TResult>, RunnableQuery<TResult, 'pg'>, SQLWrapper {}\n\nexport class PgRaw<TResult> extends QueryPromise<TResult>\n\timplements RunnableQuery<TResult, 'pg'>, SQLWrapper, PreparedQuery\n{\n\tstatic readonly [entityKind]: string = 'PgRaw';\n\n\tdeclare readonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly result: TResult;\n\t};\n\n\tconstructor(\n\t\tpublic execute: () => Promise<TResult>,\n\t\tprivate sql: SQL,\n\t\tprivate query: Query,\n\t\tprivate mapBatchResult: (result: unknown) => unknown,\n\t) {\n\t\tsuper();\n\t}\n\n\t/** @internal */\n\tgetSQL() {\n\t\treturn this.sql;\n\t}\n\n\tgetQuery() {\n\t\treturn this.query;\n\t}\n\n\tmapResult(result: unknown, isFromBatch?: boolean) {\n\t\treturn isFromBatch ? this.mapBatchResult(result) : result;\n\t}\n\n\t_prepare(): PreparedQuery {\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tisResponseInArrayMode() {\n\t\treturn false;\n\t}\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;AAC3B,SAAS,oBAAoB;;;AAOtB,MAAM,iKAAuB,eAAA,CAEpC;IAQC,YACQ,OAAA,EACC,GAAA,EACA,KAAA,EACA,cAAA,CACP;QACD,KAAA,CAAM;QALC,IAAA,CAAA,OAAA,GAAA;QACC,IAAA,CAAA,GAAA,GAAA;QACA,IAAA,CAAA,KAAA,GAAA;QACA,IAAA,CAAA,cAAA,GAAA;IAGT;IAdA,OAAA,0IAAiB,aAAU,CAAA,GAAY,QAAA;IAAA,cAAA,GAiBvC,SAAS;QACR,OAAO,IAAA,CAAK,GAAA;IACb;IAEA,WAAW;QACV,OAAO,IAAA,CAAK,KAAA;IACb;IAEA,UAAU,MAAA,EAAiB,WAAA,EAAuB;QACjD,OAAO,cAAc,IAAA,CAAK,cAAA,CAAe,MAAM,IAAI;IACpD;IAEA,WAA0B;QACzB,OAAO,IAAA;IACR;IAAA,cAAA,GAGA,wBAAwB;QACvB,OAAO;IACR;AACD","ignoreList":[0]}},
    {"offset": {"line": 15262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15268, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/db.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport {\n\tPgDeleteBase,\n\tPgInsertBuilder,\n\tPgSelectBuilder,\n\tPgUpdateBuilder,\n\tQueryBuilder,\n} from '~/pg-core/query-builders/index.ts';\nimport type {\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPgTransaction,\n\tPgTransactionConfig,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type { ExtractTablesWithRelations, RelationalSchemaConfig, TablesRelationalConfig } from '~/relations.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { ColumnsSelection, SQLWrapper } from '~/sql/sql.ts';\nimport { WithSubquery } from '~/subquery.ts';\nimport type { DrizzleTypeError } from '~/utils.ts';\nimport type { PgColumn } from './columns/index.ts';\nimport { RelationalQueryBuilder } from './query-builders/query.ts';\nimport { PgRaw } from './query-builders/raw.ts';\nimport { PgRefreshMaterializedView } from './query-builders/refresh-materialized-view.ts';\nimport type { SelectedFields } from './query-builders/select.types.ts';\nimport type { WithSubqueryWithSelection } from './subquery.ts';\nimport type { PgMaterializedView } from './view.ts';\n\nexport class PgDatabase<\n\tTQueryResult extends PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown> = Record<string, never>,\n\tTSchema extends TablesRelationalConfig = ExtractTablesWithRelations<TFullSchema>,\n> {\n\tstatic readonly [entityKind]: string = 'PgDatabase';\n\n\tdeclare readonly _: {\n\t\treadonly schema: TSchema | undefined;\n\t\treadonly fullSchema: TFullSchema;\n\t\treadonly tableNamesMap: Record<string, string>;\n\t\treadonly session: PgSession<TQueryResult, TFullSchema, TSchema>;\n\t};\n\n\tquery: TFullSchema extends Record<string, never>\n\t\t? DrizzleTypeError<'Seems like the schema generic is missing - did you forget to add it to your DB type?'>\n\t\t: {\n\t\t\t[K in keyof TSchema]: RelationalQueryBuilder<TSchema, TSchema[K]>;\n\t\t};\n\n\tconstructor(\n\t\t/** @internal */\n\t\treadonly dialect: PgDialect,\n\t\t/** @internal */\n\t\treadonly session: PgSession<any, any, any>,\n\t\tschema: RelationalSchemaConfig<TSchema> | undefined,\n\t) {\n\t\tthis._ = schema\n\t\t\t? {\n\t\t\t\tschema: schema.schema,\n\t\t\t\tfullSchema: schema.fullSchema as TFullSchema,\n\t\t\t\ttableNamesMap: schema.tableNamesMap,\n\t\t\t\tsession,\n\t\t\t}\n\t\t\t: {\n\t\t\t\tschema: undefined,\n\t\t\t\tfullSchema: {} as TFullSchema,\n\t\t\t\ttableNamesMap: {},\n\t\t\t\tsession,\n\t\t\t};\n\t\tthis.query = {} as typeof this['query'];\n\t\tif (this._.schema) {\n\t\t\tfor (const [tableName, columns] of Object.entries(this._.schema)) {\n\t\t\t\t(this.query as PgDatabase<TQueryResult, Record<string, any>>['query'])[tableName] = new RelationalQueryBuilder(\n\t\t\t\t\tschema!.fullSchema,\n\t\t\t\t\tthis._.schema,\n\t\t\t\t\tthis._.tableNamesMap,\n\t\t\t\t\tschema!.fullSchema[tableName] as PgTable,\n\t\t\t\t\tcolumns,\n\t\t\t\t\tdialect,\n\t\t\t\t\tsession,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a subquery that defines a temporary named result set as a CTE.\n\t *\n\t * It is useful for breaking down complex queries into simpler parts and for reusing the result set in subsequent parts of the query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n\t *\n\t * @param alias The alias for the subquery.\n\t *\n\t * Failure to provide an alias will result in a DrizzleTypeError, preventing the subquery from being referenced in other queries.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Create a subquery with alias 'sq' and use it in the select query\n\t * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n\t *\n\t * const result = await db.with(sq).select().from(sq);\n\t * ```\n\t *\n\t * To select arbitrary SQL values as fields in a CTE and reference them in other CTEs or in the main query, you need to add aliases to them:\n\t *\n\t * ```ts\n\t * // Select an arbitrary SQL value as a field in a CTE and reference it in the main query\n\t * const sq = db.$with('sq').as(db.select({\n\t *   name: sql<string>`upper(${users.name})`.as('name'),\n\t * })\n\t * .from(users));\n\t *\n\t * const result = await db.with(sq).select({ name: sq.name }).from(sq);\n\t * ```\n\t */\n\t$with<TAlias extends string>(alias: TAlias) {\n\t\treturn {\n\t\t\tas<TSelection extends ColumnsSelection>(\n\t\t\t\tqb: TypedQueryBuilder<TSelection> | ((qb: QueryBuilder) => TypedQueryBuilder<TSelection>),\n\t\t\t): WithSubqueryWithSelection<TSelection, TAlias> {\n\t\t\t\tif (typeof qb === 'function') {\n\t\t\t\t\tqb = qb(new QueryBuilder());\n\t\t\t\t}\n\n\t\t\t\treturn new Proxy(\n\t\t\t\t\tnew WithSubquery(qb.getSQL(), qb.getSelectedFields() as SelectedFields, alias, true),\n\t\t\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t\t\t) as WithSubqueryWithSelection<TSelection, TAlias>;\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Incorporates a previously defined CTE (using `$with`) into the main query.\n\t *\n\t * This method allows the main query to reference a temporary named result set.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n\t *\n\t * @param queries The CTEs to incorporate into the main query.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Define a subquery 'sq' as a CTE using $with\n\t * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n\t *\n\t * // Incorporate the CTE 'sq' into the main query and select from it\n\t * const result = await db.with(sq).select().from(sq);\n\t * ```\n\t */\n\twith(...queries: WithSubquery[]) {\n\t\tconst self = this;\n\n\t\t/**\n\t\t * Creates a select query.\n\t\t *\n\t\t * Calling this method with no arguments will select all columns from the table. Pass a selection object to specify the columns you want to select.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select}\n\t\t *\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Select all columns and all rows from the 'cars' table\n\t\t * const allCars: Car[] = await db.select().from(cars);\n\t\t *\n\t\t * // Select specific columns and all rows from the 'cars' table\n\t\t * const carsIdsAndBrands: { id: number; brand: string }[] = await db.select({\n\t\t *   id: cars.id,\n\t\t *   brand: cars.brand\n\t\t * })\n\t\t *   .from(cars);\n\t\t * ```\n\t\t *\n\t\t * Like in SQL, you can use arbitrary expressions as selection fields, not just table columns:\n\t\t *\n\t\t * ```ts\n\t\t * // Select specific columns along with expression and all rows from the 'cars' table\n\t\t * const carsIdsAndLowerNames: { id: number; lowerBrand: string }[] = await db.select({\n\t\t *   id: cars.id,\n\t\t *   lowerBrand: sql<string>`lower(${cars.brand})`,\n\t\t * })\n\t\t *   .from(cars);\n\t\t * ```\n\t\t */\n\t\tfunction select(): PgSelectBuilder<undefined>;\n\t\tfunction select<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\t\tfunction select(fields?: SelectedFields): PgSelectBuilder<SelectedFields | undefined> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Adds `distinct` expression to the select query.\n\t\t *\n\t\t * Calling this method will return only unique values. When multiple columns are selected, it returns rows with unique combinations of values in these columns.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t\t *\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t * ```ts\n\t\t * // Select all unique rows from the 'cars' table\n\t\t * await db.selectDistinct()\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.id, cars.brand, cars.color);\n\t\t *\n\t\t * // Select all unique brands from the 'cars' table\n\t\t * await db.selectDistinct({ brand: cars.brand })\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.brand);\n\t\t * ```\n\t\t */\n\t\tfunction selectDistinct(): PgSelectBuilder<undefined>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\t\tfunction selectDistinct(fields?: SelectedFields): PgSelectBuilder<SelectedFields | undefined> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t\tdistinct: true,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Adds `distinct on` expression to the select query.\n\t\t *\n\t\t * Calling this method will specify how the unique rows are determined.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t\t *\n\t\t * @param on The expression defining uniqueness.\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t * ```ts\n\t\t * // Select the first row for each unique brand from the 'cars' table\n\t\t * await db.selectDistinctOn([cars.brand])\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.brand);\n\t\t *\n\t\t * // Selects the first occurrence of each unique car brand along with its color from the 'cars' table\n\t\t * await db.selectDistinctOn([cars.brand], { brand: cars.brand, color: cars.color })\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.brand, cars.color);\n\t\t * ```\n\t\t */\n\t\tfunction selectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined>;\n\t\tfunction selectDistinctOn<TSelection extends SelectedFields>(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields: TSelection,\n\t\t): PgSelectBuilder<TSelection>;\n\t\tfunction selectDistinctOn(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields?: SelectedFields,\n\t\t): PgSelectBuilder<SelectedFields | undefined> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t\tdistinct: { on },\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Creates an update query.\n\t\t *\n\t\t * Calling this method without `.where()` clause will update all rows in a table. The `.where()` clause specifies which rows should be updated.\n\t\t *\n\t\t * Use `.set()` method to specify which values to update.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t\t *\n\t\t * @param table The table to update.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Update all rows in the 'cars' table\n\t\t * await db.update(cars).set({ color: 'red' });\n\t\t *\n\t\t * // Update rows with filters and conditions\n\t\t * await db.update(cars).set({ color: 'red' }).where(eq(cars.brand, 'BMW'));\n\t\t *\n\t\t * // Update with returning clause\n\t\t * const updatedCar: Car[] = await db.update(cars)\n\t\t *   .set({ color: 'red' })\n\t\t *   .where(eq(cars.id, 1))\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction update<TTable extends PgTable>(table: TTable): PgUpdateBuilder<TTable, TQueryResult> {\n\t\t\treturn new PgUpdateBuilder(table, self.session, self.dialect, queries);\n\t\t}\n\n\t\t/**\n\t\t * Creates an insert query.\n\t\t *\n\t\t * Calling this method will create new rows in a table. Use `.values()` method to specify which values to insert.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/insert}\n\t\t *\n\t\t * @param table The table to insert into.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Insert one row\n\t\t * await db.insert(cars).values({ brand: 'BMW' });\n\t\t *\n\t\t * // Insert multiple rows\n\t\t * await db.insert(cars).values([{ brand: 'BMW' }, { brand: 'Porsche' }]);\n\t\t *\n\t\t * // Insert with returning clause\n\t\t * const insertedCar: Car[] = await db.insert(cars)\n\t\t *   .values({ brand: 'BMW' })\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction insert<TTable extends PgTable>(table: TTable): PgInsertBuilder<TTable, TQueryResult> {\n\t\t\treturn new PgInsertBuilder(table, self.session, self.dialect, queries);\n\t\t}\n\n\t\t/**\n\t\t * Creates a delete query.\n\t\t *\n\t\t * Calling this method without `.where()` clause will delete all rows in a table. The `.where()` clause specifies which rows should be deleted.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t\t *\n\t\t * @param table The table to delete from.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Delete all rows in the 'cars' table\n\t\t * await db.delete(cars);\n\t\t *\n\t\t * // Delete rows with filters and conditions\n\t\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t\t *\n\t\t * // Delete with returning clause\n\t\t * const deletedCar: Car[] = await db.delete(cars)\n\t\t *   .where(eq(cars.id, 1))\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction delete_<TTable extends PgTable>(table: TTable): PgDeleteBase<TTable, TQueryResult> {\n\t\t\treturn new PgDeleteBase(table, self.session, self.dialect, queries);\n\t\t}\n\n\t\treturn { select, selectDistinct, selectDistinctOn, update, insert, delete: delete_ };\n\t}\n\n\t/**\n\t * Creates a select query.\n\t *\n\t * Calling this method with no arguments will select all columns from the table. Pass a selection object to specify the columns you want to select.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select}\n\t *\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all columns and all rows from the 'cars' table\n\t * const allCars: Car[] = await db.select().from(cars);\n\t *\n\t * // Select specific columns and all rows from the 'cars' table\n\t * const carsIdsAndBrands: { id: number; brand: string }[] = await db.select({\n\t *   id: cars.id,\n\t *   brand: cars.brand\n\t * })\n\t *   .from(cars);\n\t * ```\n\t *\n\t * Like in SQL, you can use arbitrary expressions as selection fields, not just table columns:\n\t *\n\t * ```ts\n\t * // Select specific columns along with expression and all rows from the 'cars' table\n\t * const carsIdsAndLowerNames: { id: number; lowerBrand: string }[] = await db.select({\n\t *   id: cars.id,\n\t *   lowerBrand: sql<string>`lower(${cars.brand})`,\n\t * })\n\t *   .from(cars);\n\t * ```\n\t */\n\tselect(): PgSelectBuilder<undefined>;\n\tselect<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\tselect(fields?: SelectedFields): PgSelectBuilder<SelectedFields | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t});\n\t}\n\n\t/**\n\t * Adds `distinct` expression to the select query.\n\t *\n\t * Calling this method will return only unique values. When multiple columns are selected, it returns rows with unique combinations of values in these columns.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t *\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t * ```ts\n\t * // Select all unique rows from the 'cars' table\n\t * await db.selectDistinct()\n\t *   .from(cars)\n\t *   .orderBy(cars.id, cars.brand, cars.color);\n\t *\n\t * // Select all unique brands from the 'cars' table\n\t * await db.selectDistinct({ brand: cars.brand })\n\t *   .from(cars)\n\t *   .orderBy(cars.brand);\n\t * ```\n\t */\n\tselectDistinct(): PgSelectBuilder<undefined>;\n\tselectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\tselectDistinct(fields?: SelectedFields): PgSelectBuilder<SelectedFields | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\tdistinct: true,\n\t\t});\n\t}\n\n\t/**\n\t * Adds `distinct on` expression to the select query.\n\t *\n\t * Calling this method will specify how the unique rows are determined.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t *\n\t * @param on The expression defining uniqueness.\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t * ```ts\n\t * // Select the first row for each unique brand from the 'cars' table\n\t * await db.selectDistinctOn([cars.brand])\n\t *   .from(cars)\n\t *   .orderBy(cars.brand);\n\t *\n\t * // Selects the first occurrence of each unique car brand along with its color from the 'cars' table\n\t * await db.selectDistinctOn([cars.brand], { brand: cars.brand, color: cars.color })\n\t *   .from(cars)\n\t *   .orderBy(cars.brand, cars.color);\n\t * ```\n\t */\n\tselectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined>;\n\tselectDistinctOn<TSelection extends SelectedFields>(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields: TSelection,\n\t): PgSelectBuilder<TSelection>;\n\tselectDistinctOn(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields?: SelectedFields,\n\t): PgSelectBuilder<SelectedFields | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\tdistinct: { on },\n\t\t});\n\t}\n\n\t/**\n\t * Creates an update query.\n\t *\n\t * Calling this method without `.where()` clause will update all rows in a table. The `.where()` clause specifies which rows should be updated.\n\t *\n\t * Use `.set()` method to specify which values to update.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t *\n\t * @param table The table to update.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Update all rows in the 'cars' table\n\t * await db.update(cars).set({ color: 'red' });\n\t *\n\t * // Update rows with filters and conditions\n\t * await db.update(cars).set({ color: 'red' }).where(eq(cars.brand, 'BMW'));\n\t *\n\t * // Update with returning clause\n\t * const updatedCar: Car[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.id, 1))\n\t *   .returning();\n\t * ```\n\t */\n\tupdate<TTable extends PgTable>(table: TTable): PgUpdateBuilder<TTable, TQueryResult> {\n\t\treturn new PgUpdateBuilder(table, this.session, this.dialect);\n\t}\n\n\t/**\n\t * Creates an insert query.\n\t *\n\t * Calling this method will create new rows in a table. Use `.values()` method to specify which values to insert.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert}\n\t *\n\t * @param table The table to insert into.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Insert one row\n\t * await db.insert(cars).values({ brand: 'BMW' });\n\t *\n\t * // Insert multiple rows\n\t * await db.insert(cars).values([{ brand: 'BMW' }, { brand: 'Porsche' }]);\n\t *\n\t * // Insert with returning clause\n\t * const insertedCar: Car[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning();\n\t * ```\n\t */\n\tinsert<TTable extends PgTable>(table: TTable): PgInsertBuilder<TTable, TQueryResult> {\n\t\treturn new PgInsertBuilder(table, this.session, this.dialect);\n\t}\n\n\t/**\n\t * Creates a delete query.\n\t *\n\t * Calling this method without `.where()` clause will delete all rows in a table. The `.where()` clause specifies which rows should be deleted.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t *\n\t * @param table The table to delete from.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Delete all rows in the 'cars' table\n\t * await db.delete(cars);\n\t *\n\t * // Delete rows with filters and conditions\n\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t *\n\t * // Delete with returning clause\n\t * const deletedCar: Car[] = await db.delete(cars)\n\t *   .where(eq(cars.id, 1))\n\t *   .returning();\n\t * ```\n\t */\n\tdelete<TTable extends PgTable>(table: TTable): PgDeleteBase<TTable, TQueryResult> {\n\t\treturn new PgDeleteBase(table, this.session, this.dialect);\n\t}\n\n\trefreshMaterializedView<TView extends PgMaterializedView>(view: TView): PgRefreshMaterializedView<TQueryResult> {\n\t\treturn new PgRefreshMaterializedView(view, this.session, this.dialect);\n\t}\n\n\texecute<TRow extends Record<string, unknown> = Record<string, unknown>>(\n\t\tquery: SQLWrapper,\n\t): PgRaw<PgQueryResultKind<TQueryResult, TRow>> {\n\t\tconst sql = query.getSQL();\n\t\tconst builtQuery = this.dialect.sqlToQuery(sql);\n\t\tconst prepared = this.session.prepareQuery<\n\t\t\tPreparedQueryConfig & { execute: PgQueryResultKind<TQueryResult, TRow> }\n\t\t>(\n\t\t\tbuiltQuery,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t);\n\t\treturn new PgRaw(\n\t\t\t() => prepared.execute(),\n\t\t\tsql,\n\t\t\tbuiltQuery,\n\t\t\t(result) => prepared.mapResult(result, true),\n\t\t);\n\t}\n\n\ttransaction<T>(\n\t\ttransaction: (tx: PgTransaction<TQueryResult, TFullSchema, TSchema>) => Promise<T>,\n\t\tconfig?: PgTransactionConfig,\n\t): Promise<T> {\n\t\treturn this.session.transaction(transaction, config);\n\t}\n}\n\nexport type PgWithReplicas<Q> = Q & { $primary: Q };\n\nexport const withReplicas = <\n\tHKT extends PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n\tQ extends PgDatabase<HKT, TFullSchema, TSchema>,\n>(\n\tprimary: Q,\n\treplicas: [Q, ...Q[]],\n\tgetReplica: (replicas: Q[]) => Q = () => replicas[Math.floor(Math.random() * replicas.length)]!,\n): PgWithReplicas<Q> => {\n\tconst select: Q['select'] = (...args: []) => getReplica(replicas).select(...args);\n\tconst selectDistinct: Q['selectDistinct'] = (...args: []) => getReplica(replicas).selectDistinct(...args);\n\tconst selectDistinctOn: Q['selectDistinctOn'] = (...args: [any]) => getReplica(replicas).selectDistinctOn(...args);\n\tconst $with: Q['with'] = (...args: any) => getReplica(replicas).with(...args);\n\n\tconst update: Q['update'] = (...args: [any]) => primary.update(...args);\n\tconst insert: Q['insert'] = (...args: [any]) => primary.insert(...args);\n\tconst $delete: Q['delete'] = (...args: [any]) => primary.delete(...args);\n\tconst execute: Q['execute'] = (...args: [any]) => primary.execute(...args);\n\tconst transaction: Q['transaction'] = (...args: [any]) => primary.transaction(...args);\n\tconst refreshMaterializedView: Q['refreshMaterializedView'] = (...args: [any]) =>\n\t\tprimary.refreshMaterializedView(...args);\n\n\treturn {\n\t\t...primary,\n\t\tupdate,\n\t\tinsert,\n\t\tdelete: $delete,\n\t\texecute,\n\t\ttransaction,\n\t\trefreshMaterializedView,\n\t\t$primary: primary,\n\t\tselect,\n\t\tselectDistinct,\n\t\tselectDistinctOn,\n\t\twith: $with,\n\t\tget query() {\n\t\t\treturn getReplica(replicas).query;\n\t\t},\n\t};\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15581, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/pg-core/session.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\nimport { TransactionRollbackError } from '~/errors.ts';\nimport type { TablesRelationalConfig } from '~/relations.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport { type Query, type SQL, sql } from '~/sql/index.ts';\nimport { tracer } from '~/tracing.ts';\nimport { PgDatabase } from './db.ts';\nimport type { PgDialect } from './dialect.ts';\nimport type { SelectedFieldsOrdered } from './query-builders/select.types.ts';\n\nexport interface PreparedQueryConfig {\n\texecute: unknown;\n\tall: unknown;\n\tvalues: unknown;\n}\n\nexport abstract class PgPreparedQuery<T extends PreparedQueryConfig> implements PreparedQuery {\n\tconstructor(protected query: Query) {}\n\n\tgetQuery(): Query {\n\t\treturn this.query;\n\t}\n\n\tmapResult(response: unknown, _isFromBatch?: boolean): unknown {\n\t\treturn response;\n\t}\n\n\tstatic readonly [entityKind]: string = 'PgPreparedQuery';\n\n\t/** @internal */\n\tjoinsNotNullableMap?: Record<string, boolean>;\n\n\tabstract execute(placeholderValues?: Record<string, unknown>): Promise<T['execute']>;\n\n\t/** @internal */\n\tabstract all(placeholderValues?: Record<string, unknown>): Promise<T['all']>;\n\n\t/** @internal */\n\tabstract isResponseInArrayMode(): boolean;\n}\n\nexport interface PgTransactionConfig {\n\tisolationLevel?: 'read uncommitted' | 'read committed' | 'repeatable read' | 'serializable';\n\taccessMode?: 'read only' | 'read write';\n\tdeferrable?: boolean;\n}\n\nexport abstract class PgSession<\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown> = Record<string, never>,\n\tTSchema extends TablesRelationalConfig = Record<string, never>,\n> {\n\tstatic readonly [entityKind]: string = 'PgSession';\n\n\tconstructor(protected dialect: PgDialect) {}\n\n\tabstract prepareQuery<T extends PreparedQueryConfig = PreparedQueryConfig>(\n\t\tquery: Query,\n\t\tfields: SelectedFieldsOrdered | undefined,\n\t\tname: string | undefined,\n\t\tisResponseInArrayMode: boolean,\n\t\tcustomResultMapper?: (rows: unknown[][], mapColumnValue?: (value: unknown) => unknown) => T['execute'],\n\t): PgPreparedQuery<T>;\n\n\texecute<T>(query: SQL): Promise<T> {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\tconst prepared = tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\t\treturn this.prepareQuery<PreparedQueryConfig & { execute: T }>(\n\t\t\t\t\tthis.dialect.sqlToQuery(query),\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn prepared.execute();\n\t\t});\n\t}\n\n\tall<T = unknown>(query: SQL): Promise<T[]> {\n\t\treturn this.prepareQuery<PreparedQueryConfig & { all: T[] }>(\n\t\t\tthis.dialect.sqlToQuery(query),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t).all();\n\t}\n\n\tabstract transaction<T>(\n\t\ttransaction: (tx: PgTransaction<TQueryResult, TFullSchema, TSchema>) => Promise<T>,\n\t\tconfig?: PgTransactionConfig,\n\t): Promise<T>;\n}\n\nexport abstract class PgTransaction<\n\tTQueryResult extends PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown> = Record<string, never>,\n\tTSchema extends TablesRelationalConfig = Record<string, never>,\n> extends PgDatabase<TQueryResult, TFullSchema, TSchema> {\n\tstatic readonly [entityKind]: string = 'PgTransaction';\n\n\tconstructor(\n\t\tdialect: PgDialect,\n\t\tsession: PgSession<any, any, any>,\n\t\tprotected schema: {\n\t\t\tfullSchema: Record<string, unknown>;\n\t\t\tschema: TSchema;\n\t\t\ttableNamesMap: Record<string, string>;\n\t\t} | undefined,\n\t\tprotected readonly nestedIndex = 0,\n\t) {\n\t\tsuper(dialect, session, schema);\n\t}\n\n\trollback(): never {\n\t\tthrow new TransactionRollbackError();\n\t}\n\n\t/** @internal */\n\tgetTransactionConfigSQL(config: PgTransactionConfig): SQL {\n\t\tconst chunks: string[] = [];\n\t\tif (config.isolationLevel) {\n\t\t\tchunks.push(`isolation level ${config.isolationLevel}`);\n\t\t}\n\t\tif (config.accessMode) {\n\t\t\tchunks.push(config.accessMode);\n\t\t}\n\t\tif (typeof config.deferrable === 'boolean') {\n\t\t\tchunks.push(config.deferrable ? 'deferrable' : 'not deferrable');\n\t\t}\n\t\treturn sql.raw(chunks.join(' '));\n\t}\n\n\tsetTransaction(config: PgTransactionConfig): Promise<void> {\n\t\treturn this.session.execute(sql`set transaction ${this.getTransactionConfigSQL(config)}`);\n\t}\n\n\tabstract override transaction<T>(\n\t\ttransaction: (tx: PgTransaction<TQueryResult, TFullSchema, TSchema>) => Promise<T>,\n\t): Promise<T>;\n}\n\nexport interface PgQueryResultHKT {\n\treadonly $brand: 'PgQueryResultHKT';\n\treadonly row: unknown;\n\treadonly type: unknown;\n}\n\nexport type PgQueryResultKind<TKind extends PgQueryResultHKT, TRow> = (TKind & {\n\treadonly row: TRow;\n})['type'];\n"],"names":[],"mappings":";;;;;AAAA,SAAS,kBAAkB;AAK3B,SAAS,cAAc;AAJvB,SAAS,gCAAgC;AAGzC,SAA+B,WAAW;AAE1C,SAAS,kBAAkB;;;;;;AAUpB,MAAe,gBAAwE;IAC7F,YAAsB,KAAA,CAAc;QAAd,IAAA,CAAA,KAAA,GAAA;IAAe;IAErC,WAAkB;QACjB,OAAO,IAAA,CAAK,KAAA;IACb;IAEA,UAAU,QAAA,EAAmB,YAAA,EAAiC;QAC7D,OAAO;IACR;IAEA,OAAA,0IAAiB,aAAU,CAAA,GAAY,kBAAA;IAAA,cAAA,GAGvC,oBAAA;AASD;AAQO,MAAe,UAIpB;IAGD,YAAsB,OAAA,CAAoB;QAApB,IAAA,CAAA,OAAA,GAAA;IAAqB;IAF3C,OAAA,0IAAiB,aAAU,CAAA,GAAY,YAAA;IAYvC,QAAW,KAAA,EAAwB;QAClC,iJAAO,SAAA,CAAO,eAAA,CAAgB,qBAAqB,MAAM;YACxD,MAAM,WAAW,mJAAA,CAAO,eAAA,CAAgB,wBAAwB,MAAM;gBACrE,OAAO,IAAA,CAAK,YAAA,CACX,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,KAAK,GAC7B,KAAA,GACA,KAAA,GACA;YAEF,CAAC;YAED,OAAO,SAAS,OAAA,CAAQ;QACzB,CAAC;IACF;IAEA,IAAiB,KAAA,EAA0B;QAC1C,OAAO,IAAA,CAAK,YAAA,CACX,IAAA,CAAK,OAAA,CAAQ,UAAA,CAAW,KAAK,GAC7B,KAAA,GACA,KAAA,GACA,OACC,GAAA,CAAI;IACP;AAMD;AAEO,MAAe,yKAIZ,aAAA,CAA+C;IAGxD,YACC,OAAA,EACA,OAAA,EACU,MAAA,EAKS,cAAc,CAAA,CAChC;QACD,KAAA,CAAM,SAAS,SAAS,MAAM;QAPpB,IAAA,CAAA,MAAA,GAAA;QAKS,IAAA,CAAA,WAAA,GAAA;IAGpB;IAbA,OAAA,0IAAiB,aAAU,CAAA,GAAY,gBAAA;IAevC,WAAkB;QACjB,MAAM,6IAAI,2BAAA,CAAyB;IACpC;IAAA,cAAA,GAGA,wBAAwB,MAAA,EAAkC;QACzD,MAAM,SAAmB,CAAC,CAAA;QAC1B,IAAI,OAAO,cAAA,EAAgB;YAC1B,OAAO,IAAA,CAAK,CAAA,gBAAA,EAAmB,OAAO,cAAc,EAAE;QACvD;QACA,IAAI,OAAO,UAAA,EAAY;YACtB,OAAO,IAAA,CAAK,OAAO,UAAU;QAC9B;QACA,IAAI,OAAO,OAAO,UAAA,KAAe,WAAW;YAC3C,OAAO,IAAA,CAAK,OAAO,UAAA,GAAa,eAAe,gBAAgB;QAChE;QACA,oJAAO,MAAA,CAAI,GAAA,CAAI,OAAO,IAAA,CAAK,GAAG,CAAC;IAChC;IAEA,eAAe,MAAA,EAA4C;QAC1D,OAAO,IAAA,CAAK,OAAA,CAAQ,OAAA,8IAAQ,MAAA,CAAA,gBAAA,EAAsB,IAAA,CAAK,uBAAA,CAAwB,MAAM,CAAC,CAAA,CAAE;IACzF;AAKD","ignoreList":[0]}},
    {"offset": {"line": 15655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15661, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/logger.ts"],"sourcesContent":["import { entityKind } from '~/entity.ts';\n\nexport interface Logger {\n\tlogQuery(query: string, params: unknown[]): void;\n}\n\nexport interface LogWriter {\n\twrite(message: string): void;\n}\n\nexport class ConsoleLogWriter implements LogWriter {\n\tstatic readonly [entityKind]: string = 'ConsoleLogWriter';\n\n\twrite(message: string) {\n\t\tconsole.log(message);\n\t}\n}\n\nexport class DefaultLogger implements Logger {\n\tstatic readonly [entityKind]: string = 'DefaultLogger';\n\n\treadonly writer: LogWriter;\n\n\tconstructor(config?: { writer: LogWriter }) {\n\t\tthis.writer = config?.writer ?? new ConsoleLogWriter();\n\t}\n\n\tlogQuery(query: string, params: unknown[]): void {\n\t\tconst stringifiedParams = params.map((p) => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(p);\n\t\t\t} catch {\n\t\t\t\treturn String(p);\n\t\t\t}\n\t\t});\n\t\tconst paramsStr = stringifiedParams.length ? ` -- params: [${stringifiedParams.join(', ')}]` : '';\n\t\tthis.writer.write(`Query: ${query}${paramsStr}`);\n\t}\n}\n\nexport class NoopLogger implements Logger {\n\tstatic readonly [entityKind]: string = 'NoopLogger';\n\n\tlogQuery(): void {\n\t\t// noop\n\t}\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,kBAAkB;;AAUpB,MAAM,iBAAsC;IAClD,OAAA,0IAAiB,aAAU,CAAA,GAAY,mBAAA;IAEvC,MAAM,OAAA,EAAiB;QACtB,QAAQ,GAAA,CAAI,OAAO;IACpB;AACD;AAEO,MAAM,cAAgC;IAC5C,OAAA,0IAAiB,aAAU,CAAA,GAAY,gBAAA;IAE9B,OAAA;IAET,YAAY,MAAA,CAAgC;QAC3C,IAAA,CAAK,MAAA,GAAS,QAAQ,UAAU,IAAI,iBAAiB;IACtD;IAEA,SAAS,KAAA,EAAe,MAAA,EAAyB;QAChD,MAAM,oBAAoB,OAAO,GAAA,CAAI,CAAC,MAAM;YAC3C,IAAI;gBACH,OAAO,KAAK,SAAA,CAAU,CAAC;YACxB,EAAA,OAAQ;gBACP,OAAO,OAAO,CAAC;YAChB;QACD,CAAC;QACD,MAAM,YAAY,kBAAkB,MAAA,GAAS,CAAA,aAAA,EAAgB,kBAAkB,IAAA,CAAK,IAAI,CAAC,CAAA,CAAA,CAAA,GAAM;QAC/F,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,CAAA,OAAA,EAAU,KAAK,GAAG,SAAS,EAAE;IAChD;AACD;AAEO,MAAM,WAA6B;IACzC,OAAA,0IAAiB,aAAU,CAAA,GAAY,aAAA;IAEvC,WAAiB,CAEjB;AACD","ignoreList":[0]}},
    {"offset": {"line": 15698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15704, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/vercel-postgres/session.ts"],"sourcesContent":["import {\n\ttype QueryArrayConfig,\n\ttype QueryConfig,\n\ttype QueryResult,\n\ttype QueryResultRow,\n\ttype VercelClient,\n\tVercelPool,\n\ttype VercelPoolClient,\n} from '@vercel/postgres';\nimport { entityKind } from '~/entity.ts';\nimport { type Logger, NoopLogger } from '~/logger.ts';\nimport { type PgDialect, PgTransaction } from '~/pg-core/index.ts';\nimport type { SelectedFieldsOrdered } from '~/pg-core/query-builders/select.types.ts';\nimport type { PgQueryResultHKT, PgTransactionConfig, PreparedQueryConfig } from '~/pg-core/session.ts';\nimport { PgPreparedQuery, PgSession } from '~/pg-core/session.ts';\nimport type { RelationalSchemaConfig, TablesRelationalConfig } from '~/relations.ts';\nimport { fillPlaceholders, type Query, sql } from '~/sql/sql.ts';\nimport { type Assume, mapResultRow } from '~/utils.ts';\n\nexport type VercelPgClient = VercelPool | VercelClient | VercelPoolClient;\n\nexport class VercelPgPreparedQuery<T extends PreparedQueryConfig> extends PgPreparedQuery<T> {\n\tstatic readonly [entityKind]: string = 'VercelPgPreparedQuery';\n\n\tprivate rawQuery: QueryConfig;\n\tprivate queryConfig: QueryArrayConfig;\n\n\tconstructor(\n\t\tprivate client: VercelPgClient,\n\t\tqueryString: string,\n\t\tprivate params: unknown[],\n\t\tprivate logger: Logger,\n\t\tprivate fields: SelectedFieldsOrdered | undefined,\n\t\tname: string | undefined,\n\t\tprivate _isResponseInArrayMode: boolean,\n\t\tprivate customResultMapper?: (rows: unknown[][]) => T['execute'],\n\t) {\n\t\tsuper({ sql: queryString, params });\n\t\tthis.rawQuery = {\n\t\t\tname,\n\t\t\ttext: queryString,\n\t\t};\n\t\tthis.queryConfig = {\n\t\t\tname,\n\t\t\ttext: queryString,\n\t\t\trowMode: 'array',\n\t\t};\n\t}\n\n\tasync execute(placeholderValues: Record<string, unknown> | undefined = {}): Promise<T['execute']> {\n\t\tconst params = fillPlaceholders(this.params, placeholderValues);\n\n\t\tthis.logger.logQuery(this.rawQuery.text, params);\n\n\t\tconst { fields, rawQuery, client, queryConfig: query, joinsNotNullableMap, customResultMapper } = this;\n\t\tif (!fields && !customResultMapper) {\n\t\t\treturn client.query(rawQuery, params);\n\t\t}\n\n\t\tconst { rows } = await client.query(query, params);\n\n\t\tif (customResultMapper) {\n\t\t\treturn customResultMapper(rows);\n\t\t}\n\n\t\treturn rows.map((row) => mapResultRow<T['execute']>(fields!, row, joinsNotNullableMap));\n\t}\n\n\tall(placeholderValues: Record<string, unknown> | undefined = {}): Promise<T['all']> {\n\t\tconst params = fillPlaceholders(this.params, placeholderValues);\n\t\tthis.logger.logQuery(this.rawQuery.text, params);\n\t\treturn this.client.query(this.rawQuery, params).then((result) => result.rows);\n\t}\n\n\tvalues(placeholderValues: Record<string, unknown> | undefined = {}): Promise<T['values']> {\n\t\tconst params = fillPlaceholders(this.params, placeholderValues);\n\t\tthis.logger.logQuery(this.rawQuery.text, params);\n\t\treturn this.client.query(this.queryConfig, params).then((result) => result.rows);\n\t}\n\n\t/** @internal */\n\tisResponseInArrayMode(): boolean {\n\t\treturn this._isResponseInArrayMode;\n\t}\n}\n\nexport interface VercelPgSessionOptions {\n\tlogger?: Logger;\n}\n\nexport class VercelPgSession<\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> extends PgSession<VercelPgQueryResultHKT, TFullSchema, TSchema> {\n\tstatic readonly [entityKind]: string = 'VercelPgSession';\n\n\tprivate logger: Logger;\n\n\tconstructor(\n\t\tprivate client: VercelPgClient,\n\t\tdialect: PgDialect,\n\t\tprivate schema: RelationalSchemaConfig<TSchema> | undefined,\n\t\tprivate options: VercelPgSessionOptions = {},\n\t) {\n\t\tsuper(dialect);\n\t\tthis.logger = options.logger ?? new NoopLogger();\n\t}\n\n\tprepareQuery<T extends PreparedQueryConfig = PreparedQueryConfig>(\n\t\tquery: Query,\n\t\tfields: SelectedFieldsOrdered | undefined,\n\t\tname: string | undefined,\n\t\tisResponseInArrayMode: boolean,\n\t\tcustomResultMapper?: (rows: unknown[][]) => T['execute'],\n\t): PgPreparedQuery<T> {\n\t\treturn new VercelPgPreparedQuery(\n\t\t\tthis.client,\n\t\t\tquery.sql,\n\t\t\tquery.params,\n\t\t\tthis.logger,\n\t\t\tfields,\n\t\t\tname,\n\t\t\tisResponseInArrayMode,\n\t\t\tcustomResultMapper,\n\t\t);\n\t}\n\n\tasync query(query: string, params: unknown[]): Promise<QueryResult> {\n\t\tthis.logger.logQuery(query, params);\n\t\tconst result = await this.client.query({\n\t\t\trowMode: 'array',\n\t\t\ttext: query,\n\t\t\tvalues: params,\n\t\t});\n\t\treturn result;\n\t}\n\n\tasync queryObjects<T extends QueryResultRow>(\n\t\tquery: string,\n\t\tparams: unknown[],\n\t): Promise<QueryResult<T>> {\n\t\treturn this.client.query<T>(query, params);\n\t}\n\n\toverride async transaction<T>(\n\t\ttransaction: (tx: VercelPgTransaction<TFullSchema, TSchema>) => Promise<T>,\n\t\tconfig?: PgTransactionConfig | undefined,\n\t): Promise<T> {\n\t\tconst session = this.client instanceof VercelPool // eslint-disable-line no-instanceof/no-instanceof\n\t\t\t? new VercelPgSession(await this.client.connect(), this.dialect, this.schema, this.options)\n\t\t\t: this;\n\t\tconst tx = new VercelPgTransaction<TFullSchema, TSchema>(this.dialect, session, this.schema);\n\t\tawait tx.execute(sql`begin${config ? sql` ${tx.getTransactionConfigSQL(config)}` : undefined}`);\n\t\ttry {\n\t\t\tconst result = await transaction(tx);\n\t\t\tawait tx.execute(sql`commit`);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tawait tx.execute(sql`rollback`);\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tif (this.client instanceof VercelPool) { // eslint-disable-line no-instanceof/no-instanceof\n\t\t\t\t(session.client as VercelPoolClient).release();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class VercelPgTransaction<\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> extends PgTransaction<VercelPgQueryResultHKT, TFullSchema, TSchema> {\n\tstatic readonly [entityKind]: string = 'VercelPgTransaction';\n\n\toverride async transaction<T>(\n\t\ttransaction: (tx: VercelPgTransaction<TFullSchema, TSchema>) => Promise<T>,\n\t): Promise<T> {\n\t\tconst savepointName = `sp${this.nestedIndex + 1}`;\n\t\tconst tx = new VercelPgTransaction<TFullSchema, TSchema>(\n\t\t\tthis.dialect,\n\t\t\tthis.session,\n\t\t\tthis.schema,\n\t\t\tthis.nestedIndex + 1,\n\t\t);\n\t\tawait tx.execute(sql.raw(`savepoint ${savepointName}`));\n\t\ttry {\n\t\t\tconst result = await transaction(tx);\n\t\t\tawait tx.execute(sql.raw(`release savepoint ${savepointName}`));\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tawait tx.execute(sql.raw(`rollback to savepoint ${savepointName}`));\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\nexport interface VercelPgQueryResultHKT extends PgQueryResultHKT {\n\ttype: QueryResult<Assume<this['row'], QueryResultRow>>;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15842, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/src/vercel-postgres/driver.ts"],"sourcesContent":["import { types } from '@vercel/postgres';\nimport { entityKind } from '~/entity.ts';\nimport type { Logger } from '~/logger.ts';\nimport { DefaultLogger } from '~/logger.ts';\nimport { PgDatabase } from '~/pg-core/db.ts';\nimport { PgDialect } from '~/pg-core/index.ts';\nimport {\n\tcreateTableRelationsHelpers,\n\textractTablesRelationalConfig,\n\ttype RelationalSchemaConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport type { DrizzleConfig } from '~/utils.ts';\nimport { type VercelPgClient, type VercelPgQueryResultHKT, VercelPgSession } from './session.ts';\n\nexport interface VercelPgDriverOptions {\n\tlogger?: Logger;\n}\n\nexport class VercelPgDriver {\n\tstatic readonly [entityKind]: string = 'VercelPgDriver';\n\n\tconstructor(\n\t\tprivate client: VercelPgClient,\n\t\tprivate dialect: PgDialect,\n\t\tprivate options: VercelPgDriverOptions = {},\n\t) {\n\t\tthis.initMappers();\n\t}\n\n\tcreateSession(\n\t\tschema: RelationalSchemaConfig<TablesRelationalConfig> | undefined,\n\t): VercelPgSession<Record<string, unknown>, TablesRelationalConfig> {\n\t\treturn new VercelPgSession(this.client, this.dialect, schema, { logger: this.options.logger });\n\t}\n\n\tinitMappers() {\n\t\ttypes.setTypeParser(types.builtins.TIMESTAMPTZ, (val) => val);\n\t\ttypes.setTypeParser(types.builtins.TIMESTAMP, (val) => val);\n\t\ttypes.setTypeParser(types.builtins.DATE, (val) => val);\n\t\ttypes.setTypeParser(types.builtins.INTERVAL, (val) => val);\n\t}\n}\n\nexport type VercelPgDatabase<\n\tTSchema extends Record<string, unknown> = Record<string, never>,\n> = PgDatabase<VercelPgQueryResultHKT, TSchema>;\n\nexport function drizzle<TSchema extends Record<string, unknown> = Record<string, never>>(\n\tclient: VercelPgClient,\n\tconfig: DrizzleConfig<TSchema> = {},\n): VercelPgDatabase<TSchema> {\n\tconst dialect = new PgDialect();\n\tlet logger;\n\tif (config.logger === true) {\n\t\tlogger = new DefaultLogger();\n\t} else if (config.logger !== false) {\n\t\tlogger = config.logger;\n\t}\n\n\tlet schema: RelationalSchemaConfig<TablesRelationalConfig> | undefined;\n\tif (config.schema) {\n\t\tconst tablesConfig = extractTablesRelationalConfig(\n\t\t\tconfig.schema,\n\t\t\tcreateTableRelationsHelpers,\n\t\t);\n\t\tschema = {\n\t\t\tfullSchema: config.schema,\n\t\t\tschema: tablesConfig.tables,\n\t\t\ttableNamesMap: tablesConfig.tableNamesMap,\n\t\t};\n\t}\n\n\tconst driver = new VercelPgDriver(client, dialect, { logger });\n\tconst session = driver.createSession(schema);\n\treturn new PgDatabase(dialect, session, schema) as VercelPgDatabase<TSchema>;\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAY3B,SAA2D,uBAAuB;;AARlF,SAAS,iBAAiB;AAF1B,SAAS,qBAAqB;AAG9B;AAFA,SAAS,kBAAkB;;;;;;;;AAepB,MAAM,eAAe;IAG3B,YACS,MAAA,EACA,OAAA,EACA,UAAiC,CAAC,CAAA,CACzC;QAHO,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QACA,IAAA,CAAA,OAAA,GAAA;QAER,IAAA,CAAK,WAAA,CAAY;IAClB;IARA,OAAA,0IAAiB,aAAU,CAAA,GAAY,iBAAA;IAUvC,cACC,MAAA,EACmE;QACnE,OAAO,oKAAI,kBAAA,CAAgB,IAAA,CAAK,MAAA,EAAQ,IAAA,CAAK,OAAA,EAAS,QAAQ;YAAE,QAAQ,IAAA,CAAK,OAAA,CAAQ,MAAA;QAAO,CAAC;IAC9F;IAEA,cAAc;QACb,8LAAA,CAAA,QAAA,CAAM,aAAA,gMAAc,QAAA,CAAM,QAAA,CAAS,WAAA,EAAa,CAAC,MAAQ,GAAG;QAC5D,8LAAA,CAAA,QAAA,CAAM,aAAA,gMAAc,QAAA,CAAM,QAAA,CAAS,SAAA,EAAW,CAAC,MAAQ,GAAG;QAC1D,8LAAA,CAAA,QAAA,CAAM,aAAA,gMAAc,QAAA,CAAM,QAAA,CAAS,IAAA,EAAM,CAAC,MAAQ,GAAG;QACrD,8LAAA,CAAA,QAAA,CAAM,aAAA,gMAAc,QAAA,CAAM,QAAA,CAAS,QAAA,EAAU,CAAC,MAAQ,GAAG;IAC1D;AACD;AAMO,SAAS,QACf,MAAA,EACA,SAAiC,CAAC,CAAA,EACN;IAC5B,MAAM,UAAU,4JAAI,YAAA,CAAU;IAC9B,IAAI;IACJ,IAAI,OAAO,MAAA,KAAW,MAAM;QAC3B,SAAS,IAAI,yJAAA,CAAc;IAC5B,OAAA,IAAW,OAAO,MAAA,KAAW,OAAO;QACnC,SAAS,OAAO,MAAA;IACjB;IAEA,IAAI;IACJ,IAAI,OAAO,MAAA,EAAQ;QAClB,MAAM,+JAAe,gCAAA,EACpB,OAAO,MAAA,8IACP,8BAAA;QAED,SAAS;YACR,YAAY,OAAO,MAAA;YACnB,QAAQ,aAAa,MAAA;YACrB,eAAe,aAAa,aAAA;QAC7B;IACD;IAEA,MAAM,SAAS,IAAI,eAAe,QAAQ,SAAS;QAAE;IAAO,CAAC;IAC7D,MAAM,UAAU,OAAO,aAAA,CAAc,MAAM;IAC3C,OAAO,uJAAI,aAAA,CAAW,SAAS,SAAS,MAAM;AAC/C","ignoreList":[0]}},
    {"offset": {"line": 15906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15912, "column": 0}, "map": {"version":3,"sources":["file:///home/yaniv_zax/Web_Dev/forum-project/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,IAAA;YAAA;SAAA;UACAC,SAAAA;YAAU,IAAA;YAAA;SAAA;cACRC,OAAAA;YAAAA,IAAYnB;YAAAA;SAAAA;UACd,WAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,eAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 16008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}